{
  "version": 3,
  "sources": ["../bundle-ui2AQl/checked-fetch.js", "wrangler-modules-watch:wrangler:modules-watch", "../../../node_modules/wrangler/templates/modules-watch-stub.js", "../../../node_modules/discord-interactions/src/util.ts", "../../../node_modules/discord-interactions/src/components.ts", "../../../node_modules/discord-interactions/src/index.ts", "../../../node_modules/lodash/isArray.js", "../../../node_modules/lodash/_freeGlobal.js", "../../../node_modules/lodash/_root.js", "../../../node_modules/lodash/_Symbol.js", "../../../node_modules/lodash/_getRawTag.js", "../../../node_modules/lodash/_objectToString.js", "../../../node_modules/lodash/_baseGetTag.js", "../../../node_modules/lodash/isObjectLike.js", "../../../node_modules/lodash/isSymbol.js", "../../../node_modules/lodash/_isKey.js", "../../../node_modules/lodash/isObject.js", "../../../node_modules/lodash/isFunction.js", "../../../node_modules/lodash/_coreJsData.js", "../../../node_modules/lodash/_isMasked.js", "../../../node_modules/lodash/_toSource.js", "../../../node_modules/lodash/_baseIsNative.js", "../../../node_modules/lodash/_getValue.js", "../../../node_modules/lodash/_getNative.js", "../../../node_modules/lodash/_nativeCreate.js", "../../../node_modules/lodash/_hashClear.js", "../../../node_modules/lodash/_hashDelete.js", "../../../node_modules/lodash/_hashGet.js", "../../../node_modules/lodash/_hashHas.js", "../../../node_modules/lodash/_hashSet.js", "../../../node_modules/lodash/_Hash.js", "../../../node_modules/lodash/_listCacheClear.js", "../../../node_modules/lodash/eq.js", "../../../node_modules/lodash/_assocIndexOf.js", "../../../node_modules/lodash/_listCacheDelete.js", "../../../node_modules/lodash/_listCacheGet.js", "../../../node_modules/lodash/_listCacheHas.js", "../../../node_modules/lodash/_listCacheSet.js", "../../../node_modules/lodash/_ListCache.js", "../../../node_modules/lodash/_Map.js", "../../../node_modules/lodash/_mapCacheClear.js", "../../../node_modules/lodash/_isKeyable.js", "../../../node_modules/lodash/_getMapData.js", "../../../node_modules/lodash/_mapCacheDelete.js", "../../../node_modules/lodash/_mapCacheGet.js", "../../../node_modules/lodash/_mapCacheHas.js", "../../../node_modules/lodash/_mapCacheSet.js", "../../../node_modules/lodash/_MapCache.js", "../../../node_modules/lodash/memoize.js", "../../../node_modules/lodash/_memoizeCapped.js", "../../../node_modules/lodash/_stringToPath.js", "../../../node_modules/lodash/_arrayMap.js", "../../../node_modules/lodash/_baseToString.js", "../../../node_modules/lodash/toString.js", "../../../node_modules/lodash/_castPath.js", "../../../node_modules/lodash/_toKey.js", "../../../node_modules/lodash/_baseGet.js", "../../../node_modules/lodash/get.js", "../../../node_modules/fast-deep-equal/es6/index.js", "../../../node_modules/lodash/_setCacheAdd.js", "../../../node_modules/lodash/_setCacheHas.js", "../../../node_modules/lodash/_SetCache.js", "../../../node_modules/lodash/_baseFindIndex.js", "../../../node_modules/lodash/_baseIsNaN.js", "../../../node_modules/lodash/_strictIndexOf.js", "../../../node_modules/lodash/_baseIndexOf.js", "../../../node_modules/lodash/_arrayIncludes.js", "../../../node_modules/lodash/_arrayIncludesWith.js", "../../../node_modules/lodash/_cacheHas.js", "../../../node_modules/lodash/_Set.js", "../../../node_modules/lodash/noop.js", "../../../node_modules/lodash/_setToArray.js", "../../../node_modules/lodash/_createSet.js", "../../../node_modules/lodash/_baseUniq.js", "../../../node_modules/lodash/uniqWith.js", "../../../node_modules/@sapphire/shapeshift/src/constraints/ObjectConstrains.ts", "../../../node_modules/@sapphire/shapeshift/node_modules/@jspm/core/nodelibs/browser/chunk-5decc758.js", "../../../node_modules/@sapphire/shapeshift/node_modules/@jspm/core/nodelibs/browser/chunk-b4205b57.js", "../../../node_modules/@sapphire/shapeshift/node_modules/@jspm/core/nodelibs/browser/chunk-ce0fbc82.js", "../../../node_modules/@sapphire/shapeshift/dist/cjs/node-modules-polyfills:util", "../../../node_modules/@sapphire/shapeshift/src/lib/errors/BaseError.ts", "../../../node_modules/@sapphire/shapeshift/src/lib/errors/BaseConstraintError.ts", "../../../node_modules/@sapphire/shapeshift/src/lib/errors/ExpectedConstraintError.ts", "../../../node_modules/@sapphire/shapeshift/src/lib/Result.ts", "../../../node_modules/@sapphire/shapeshift/src/lib/configs.ts", "../../../node_modules/@sapphire/shapeshift/src/validators/util/getValue.ts", "../../../node_modules/@sapphire/shapeshift/src/validators/BaseValidator.ts", "../../../node_modules/@sapphire/shapeshift/src/constraints/util/isUnique.ts", "../../../node_modules/@sapphire/shapeshift/src/constraints/util/operators.ts", "../../../node_modules/@sapphire/shapeshift/src/constraints/ArrayConstraints.ts", "../../../node_modules/@sapphire/shapeshift/src/lib/errors/CombinedPropertyError.ts", "../../../node_modules/@sapphire/shapeshift/src/lib/errors/ValidationError.ts", "../../../node_modules/@sapphire/shapeshift/src/validators/ArrayValidator.ts", "../../../node_modules/@sapphire/shapeshift/src/constraints/BigIntConstraints.ts", "../../../node_modules/@sapphire/shapeshift/src/validators/BigIntValidator.ts", "../../../node_modules/@sapphire/shapeshift/src/constraints/BooleanConstraints.ts", "../../../node_modules/@sapphire/shapeshift/src/validators/BooleanValidator.ts", "../../../node_modules/@sapphire/shapeshift/src/constraints/DateConstraints.ts", "../../../node_modules/@sapphire/shapeshift/src/validators/DateValidator.ts", "../../../node_modules/@sapphire/shapeshift/src/lib/errors/ExpectedValidationError.ts", "../../../node_modules/@sapphire/shapeshift/src/validators/InstanceValidator.ts", "../../../node_modules/@sapphire/shapeshift/src/validators/LiteralValidator.ts", "../../../node_modules/@sapphire/shapeshift/src/validators/NeverValidator.ts", "../../../node_modules/@sapphire/shapeshift/src/validators/NullishValidator.ts", "../../../node_modules/@sapphire/shapeshift/src/constraints/NumberConstraints.ts", "../../../node_modules/@sapphire/shapeshift/src/validators/NumberValidator.ts", "../../../node_modules/@sapphire/shapeshift/src/lib/errors/MissingPropertyError.ts", "../../../node_modules/@sapphire/shapeshift/src/lib/errors/UnknownPropertyError.ts", "../../../node_modules/@sapphire/shapeshift/src/validators/DefaultValidator.ts", "../../../node_modules/@sapphire/shapeshift/src/lib/errors/CombinedError.ts", "../../../node_modules/@sapphire/shapeshift/src/validators/UnionValidator.ts", "../../../node_modules/@sapphire/shapeshift/src/validators/ObjectValidator.ts", "../../../node_modules/@sapphire/shapeshift/src/validators/PassthroughValidator.ts", "../../../node_modules/@sapphire/shapeshift/src/validators/RecordValidator.ts", "../../../node_modules/@sapphire/shapeshift/src/validators/SetValidator.ts", "../../../node_modules/@sapphire/shapeshift/src/constraints/util/emailValidator.ts", "../../../node_modules/@sapphire/shapeshift/src/constraints/util/net.ts", "../../../node_modules/@sapphire/shapeshift/src/constraints/util/phoneValidator.ts", "../../../node_modules/@sapphire/shapeshift/src/lib/errors/MultiplePossibilitiesConstraintError.ts", "../../../node_modules/@sapphire/shapeshift/src/constraints/util/common/combinedResultFn.ts", "../../../node_modules/@sapphire/shapeshift/src/constraints/util/urlValidators.ts", "../../../node_modules/@sapphire/shapeshift/src/constraints/StringConstraints.ts", "../../../node_modules/@sapphire/shapeshift/src/validators/StringValidator.ts", "../../../node_modules/@sapphire/shapeshift/src/validators/TupleValidator.ts", "../../../node_modules/@sapphire/shapeshift/src/validators/MapValidator.ts", "../../../node_modules/@sapphire/shapeshift/src/validators/LazyValidator.ts", "../../../node_modules/@sapphire/shapeshift/src/lib/errors/UnknownEnumValueError.ts", "../../../node_modules/@sapphire/shapeshift/src/validators/NativeEnumValidator.ts", "../../../node_modules/@sapphire/shapeshift/src/constraints/TypedArrayLengthConstraints.ts", "../../../node_modules/@sapphire/shapeshift/src/constraints/util/common/vowels.ts", "../../../node_modules/@sapphire/shapeshift/src/constraints/util/typedArray.ts", "../../../node_modules/@sapphire/shapeshift/src/validators/TypedArrayValidator.ts", "../../../node_modules/@sapphire/shapeshift/src/lib/Shapes.ts", "../../../node_modules/@sapphire/shapeshift/src/index.ts", "../../../node_modules/@discordjs/formatters/src/index.ts", "../../../node_modules/@discordjs/formatters/src/escapers.ts", "../../../node_modules/@discordjs/formatters/src/formatters.ts", "../../../node_modules/discord-api-types/gateway/common.js", "../../../node_modules/discord-api-types/gateway/v10.ts", "../../../node_modules/discord-api-types/globals.ts", "../../../node_modules/discord-api-types/payloads/common.ts", "../../../node_modules/discord-api-types/payloads/v10/application.ts", "../../../node_modules/discord-api-types/payloads/v10/auditLog.ts", "../../../node_modules/discord-api-types/payloads/v10/autoModeration.ts", "../../../node_modules/discord-api-types/payloads/v10/channel.ts", "../../../node_modules/discord-api-types/payloads/v10/gateway.ts", "../../../node_modules/discord-api-types/payloads/v10/guild.ts", "../../../node_modules/discord-api-types/payloads/v10/guildScheduledEvent.ts", "../../../node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/attachment.js", "../../../node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/base.js", "../../../node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/boolean.js", "../../../node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/channel.js", "../../../node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/integer.js", "../../../node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/mentionable.js", "../../../node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/number.js", "../../../node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/role.js", "../../../node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/shared.ts", "../../../node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/string.js", "../../../node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/subcommand.js", "../../../node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/subcommandGroup.js", "../../../node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/_chatInput/user.js", "../../../node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/chatInput.ts", "../../../node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/contextMenu.js", "../../../node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/permissions.ts", "../../../node_modules/discord-api-types/payloads/v10/_interactions/_applicationCommands/entryPoint.js", "../../../node_modules/discord-api-types/payloads/v10/_interactions/applicationCommands.ts", "../../../node_modules/discord-api-types/payloads/v10/_interactions/autocomplete.js", "../../../node_modules/discord-api-types/payloads/v10/_interactions/base.js", "../../../node_modules/discord-api-types/payloads/v10/_interactions/messageComponents.js", "../../../node_modules/discord-api-types/payloads/v10/_interactions/modalSubmit.js", "../../../node_modules/discord-api-types/payloads/v10/_interactions/ping.js", "../../../node_modules/discord-api-types/payloads/v10/_interactions/responses.ts", "../../../node_modules/discord-api-types/payloads/v10/interactions.ts", "../../../node_modules/discord-api-types/payloads/v10/invite.ts", "../../../node_modules/discord-api-types/payloads/v10/monetization.ts", "../../../node_modules/discord-api-types/payloads/v10/oauth2.ts", "../../../node_modules/discord-api-types/payloads/v10/permissions.ts", "../../../node_modules/discord-api-types/payloads/v10/poll.ts", "../../../node_modules/discord-api-types/payloads/v10/stageInstance.ts", "../../../node_modules/discord-api-types/payloads/v10/sticker.ts", "../../../node_modules/discord-api-types/payloads/v10/teams.ts", "../../../node_modules/discord-api-types/payloads/v10/user.ts", "../../../node_modules/discord-api-types/payloads/v10/webhook.ts", "../../../node_modules/discord-api-types/payloads/v10/index.ts", "../../../node_modules/discord-api-types/utils/internals.ts", "../../../node_modules/discord-api-types/rest/common.ts", "../../../node_modules/discord-api-types/rest/v10/application.js", "../../../node_modules/discord-api-types/rest/v10/auditLog.js", "../../../node_modules/discord-api-types/rest/v10/autoModeration.js", "../../../node_modules/discord-api-types/rest/v10/channel.ts", "../../../node_modules/discord-api-types/rest/v10/emoji.js", "../../../node_modules/discord-api-types/rest/v10/gateway.js", "../../../node_modules/discord-api-types/rest/v10/guild.js", "../../../node_modules/discord-api-types/rest/v10/guildScheduledEvent.js", "../../../node_modules/discord-api-types/rest/v10/interactions.js", "../../../node_modules/discord-api-types/rest/v10/invite.js", "../../../node_modules/discord-api-types/rest/v10/monetization.ts", "../../../node_modules/discord-api-types/rest/v10/oauth2.js", "../../../node_modules/discord-api-types/rest/v10/poll.js", "../../../node_modules/discord-api-types/rest/v10/soundboard.js", "../../../node_modules/discord-api-types/rest/v10/stageInstance.js", "../../../node_modules/discord-api-types/rest/v10/sticker.js", "../../../node_modules/discord-api-types/rest/v10/template.js", "../../../node_modules/discord-api-types/rest/v10/user.js", "../../../node_modules/discord-api-types/rest/v10/voice.js", "../../../node_modules/discord-api-types/rest/v10/webhook.js", "../../../node_modules/discord-api-types/rest/v10/index.ts", "../../../node_modules/discord-api-types/rpc/common.ts", "../../../node_modules/discord-api-types/rpc/v10.ts", "../../../node_modules/discord-api-types/utils/v10.ts", "../../../node_modules/discord-api-types/v10.ts", "../../../node_modules/@discordjs/util/src/index.ts", "../../../node_modules/@discordjs/util/src/functions/lazy.ts", "../../../node_modules/@discordjs/util/src/functions/range.ts", "../../../node_modules/@discordjs/util/src/functions/calculateShardId.ts", "../../../node_modules/@discordjs/util/src/functions/runtime.ts", "../../../node_modules/@discordjs/util/src/functions/userAgentAppendix.ts", "../../../node_modules/@discordjs/util/src/functions/polyfillDispose.ts", "../../../node_modules/@discordjs/util/src/JSONEncodable.ts", "../../../node_modules/@discordjs/util/src/Equatable.ts", "../../../node_modules/fast-deep-equal/index.js", "../../../node_modules/ts-mixer/dist/esm/index.js", "../../../node_modules/@discordjs/builders/src/index.ts", "../../../node_modules/@discordjs/builders/src/messages/embed/Assertions.ts", "../../../node_modules/@discordjs/builders/src/util/validation.ts", "../../../node_modules/@discordjs/builders/src/util/normalizeArray.ts", "../../../node_modules/@discordjs/builders/src/messages/embed/Embed.ts", "../../../node_modules/@discordjs/builders/src/components/Assertions.ts", "../../../node_modules/@discordjs/builders/src/components/selectMenu/StringSelectMenuOption.ts", "../../../node_modules/@discordjs/builders/src/components/ActionRow.ts", "../../../node_modules/@discordjs/builders/src/components/Component.ts", "../../../node_modules/@discordjs/builders/src/components/Components.ts", "../../../node_modules/@discordjs/builders/src/components/button/Button.ts", "../../../node_modules/@discordjs/builders/src/components/selectMenu/ChannelSelectMenu.ts", "../../../node_modules/@discordjs/builders/src/components/selectMenu/BaseSelectMenu.ts", "../../../node_modules/@discordjs/builders/src/components/selectMenu/MentionableSelectMenu.ts", "../../../node_modules/@discordjs/builders/src/components/selectMenu/RoleSelectMenu.ts", "../../../node_modules/@discordjs/builders/src/components/selectMenu/StringSelectMenu.ts", "../../../node_modules/@discordjs/builders/src/components/selectMenu/UserSelectMenu.ts", "../../../node_modules/@discordjs/builders/src/components/textInput/TextInput.ts", "../../../node_modules/@discordjs/builders/src/components/textInput/Assertions.ts", "../../../node_modules/@discordjs/builders/src/interactions/modals/Assertions.ts", "../../../node_modules/@discordjs/builders/src/interactions/modals/Modal.ts", "../../../node_modules/@discordjs/builders/src/interactions/slashCommands/Assertions.ts", "../../../node_modules/@discordjs/builders/src/interactions/slashCommands/SlashCommandBuilder.ts", "../../../node_modules/@discordjs/builders/src/interactions/slashCommands/mixins/NameAndDescription.ts", "../../../node_modules/@discordjs/builders/src/interactions/slashCommands/mixins/SharedSlashCommand.ts", "../../../node_modules/@discordjs/builders/src/interactions/slashCommands/options/attachment.ts", "../../../node_modules/@discordjs/builders/src/interactions/slashCommands/mixins/ApplicationCommandOptionBase.ts", "../../../node_modules/@discordjs/builders/src/interactions/slashCommands/options/boolean.ts", "../../../node_modules/@discordjs/builders/src/interactions/slashCommands/options/channel.ts", "../../../node_modules/@discordjs/builders/src/interactions/slashCommands/mixins/ApplicationCommandOptionChannelTypesMixin.ts", "../../../node_modules/@discordjs/builders/src/interactions/slashCommands/options/integer.ts", "../../../node_modules/@discordjs/builders/src/interactions/slashCommands/mixins/ApplicationCommandNumericOptionMinMaxValueMixin.ts", "../../../node_modules/@discordjs/builders/src/interactions/slashCommands/mixins/ApplicationCommandOptionWithAutocompleteMixin.ts", "../../../node_modules/@discordjs/builders/src/interactions/slashCommands/mixins/ApplicationCommandOptionWithChoicesMixin.ts", "../../../node_modules/@discordjs/builders/src/interactions/slashCommands/options/mentionable.ts", "../../../node_modules/@discordjs/builders/src/interactions/slashCommands/options/number.ts", "../../../node_modules/@discordjs/builders/src/interactions/slashCommands/options/role.ts", "../../../node_modules/@discordjs/builders/src/interactions/slashCommands/options/string.ts", "../../../node_modules/@discordjs/builders/src/interactions/slashCommands/options/user.ts", "../../../node_modules/@discordjs/builders/src/interactions/slashCommands/mixins/SharedSlashCommandOptions.ts", "../../../node_modules/@discordjs/builders/src/interactions/slashCommands/SlashCommandSubcommands.ts", "../../../node_modules/@discordjs/builders/src/interactions/slashCommands/mixins/SharedSubcommands.ts", "../../../node_modules/@discordjs/builders/src/interactions/contextMenuCommands/Assertions.ts", "../../../node_modules/@discordjs/builders/src/interactions/contextMenuCommands/ContextMenuCommandBuilder.ts", "../../../node_modules/@discordjs/builders/src/util/componentUtil.ts", "../../../commands/managers/roleManager.js", "../bundle-ui2AQl/middleware-loader.entry.ts", "../bundle-ui2AQl/middleware-insertion-facade.js", "../../../server.js", "../../../node_modules/src/src/IttyRouter.ts", "../../../node_modules/src/src/Router.ts", "../../../node_modules/src/src/createResponse.ts", "../../../node_modules/src/src/json.ts", "../../../node_modules/src/src/error.ts", "../../../node_modules/src/src/withParams.ts", "../../../node_modules/src/src/AutoRouter.ts", "../../../node_modules/src/src/StatusError.ts", "../../../node_modules/src/src/status.ts", "../../../node_modules/src/src/text.ts", "../../../node_modules/src/src/html.ts", "../../../node_modules/src/src/jpeg.ts", "../../../node_modules/src/src/png.ts", "../../../node_modules/src/src/webp.ts", "../../../node_modules/src/src/withContent.ts", "../../../node_modules/src/src/withCookies.ts", "../../../node_modules/src/src/cors.ts", "../../../client.js", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../../../node_modules/wrangler/templates/middleware/common.ts"],
  "sourceRoot": "C:\\Users\\magnu\\Documents\\Discord\\kiara bot - serverless\\.wrangler\\tmp\\dev-b3f2N9",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "", "// `esbuild` doesn't support returning `watch*` options from `onStart()`\n// plugin callbacks. Instead, we define an empty virtual module that is\n// imported by this injected file. Importing the module registers watchers.\nimport \"wrangler:modules-watch\";\n", null, null, null, "/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n", "/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n", "var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n", "var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n", "var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n", "/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n", "var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n", "/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n", "var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n", "var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n", "/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n", "var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n", "var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n", "var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n", "/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n", "var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n", "/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n", "var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n", "var getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n", "var nativeCreate = require('./_nativeCreate');\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n", "/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n", "var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n", "var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n", "var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n", "var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n", "/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n", "/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n", "var eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n", "var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n", "var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n", "var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n", "var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n", "var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n", "var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n", "var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n", "/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n", "var isKeyable = require('./_isKeyable');\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n", "var getMapData = require('./_getMapData');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n", "var getMapData = require('./_getMapData');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n", "var getMapData = require('./_getMapData');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n", "var getMapData = require('./_getMapData');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n", "var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n", "var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n", "var memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n", "var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n", "/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n", "var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n", "var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n", "var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n", "var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n", "var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n", "var baseGet = require('./_baseGet');\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n", "'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n  var envHasBigInt64Array = typeof BigInt64Array !== 'undefined';\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n    if ((a instanceof Map) && (b instanceof Map)) {\n      if (a.size !== b.size) return false;\n      for (i of a.entries())\n        if (!b.has(i[0])) return false;\n      for (i of a.entries())\n        if (!equal(i[1], b.get(i[0]))) return false;\n      return true;\n    }\n\n    if ((a instanceof Set) && (b instanceof Set)) {\n      if (a.size !== b.size) return false;\n      for (i of a.entries())\n        if (!b.has(i[0])) return false;\n      return true;\n    }\n\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (a[i] !== b[i]) return false;\n      return true;\n    }\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n", "/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nmodule.exports = setCacheAdd;\n", "/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;\n", "var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nmodule.exports = SetCache;\n", "/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n", "/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n", "/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n", "var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n", "var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n", "/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n", "/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;\n", "var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n", "/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n", "/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;\n", "var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n", "var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n", "var baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `comparator` which\n * is invoked to compare elements of `array`. The order of result values is\n * determined by the order they occur in the array.The comparator is invoked\n * with two arguments: (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n *\n * _.uniqWith(objects, _.isEqual);\n * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n */\nfunction uniqWith(array, comparator) {\n  comparator = typeof comparator == 'function' ? comparator : undefined;\n  return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n}\n\nmodule.exports = uniqWith;\n", "import get from 'lodash/get.js';\nimport { ExpectedConstraintError } from '../lib/errors/ExpectedConstraintError';\nimport { Result } from '../lib/Result';\nimport type { ValidatorOptions } from '../lib/util-types';\nimport type { BaseValidator } from '../validators/BaseValidator';\nimport type { IConstraint } from './base/IConstraint';\n\nexport type ObjectConstraintName = `s.object(T.when)`;\n\nexport type WhenKey = PropertyKey | PropertyKey[];\n\nexport interface WhenOptions<T extends BaseValidator<any>, Key extends WhenKey> {\n\tis?: boolean | ((value: Key extends Array<any> ? any[] : any) => boolean);\n\tthen: (predicate: T) => T;\n\totherwise?: (predicate: T) => T;\n}\n\nexport function whenConstraint<T extends BaseValidator<any>, I, Key extends WhenKey>(\n\tkey: Key,\n\toptions: WhenOptions<T, Key>,\n\tvalidator: T,\n\tvalidatorOptions?: ValidatorOptions\n): IConstraint<I> {\n\treturn {\n\t\trun(input: I, parent?: any) {\n\t\t\tif (!parent) {\n\t\t\t\treturn Result.err(\n\t\t\t\t\tnew ExpectedConstraintError(\n\t\t\t\t\t\t's.object(T.when)',\n\t\t\t\t\t\tvalidatorOptions?.message ?? 'Validator has no parent',\n\t\t\t\t\t\tparent,\n\t\t\t\t\t\t'Validator to have a parent'\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst isKeyArray = Array.isArray(key);\n\n\t\t\tconst value = isKeyArray ? key.map((k) => get(parent, k)) : get(parent, key);\n\n\t\t\tconst predicate = resolveBooleanIs<T, Key>(options, value, isKeyArray) ? options.then : options.otherwise;\n\n\t\t\tif (predicate) {\n\t\t\t\treturn predicate(validator).run(input) as Result<I, ExpectedConstraintError<I>>;\n\t\t\t}\n\n\t\t\treturn Result.ok(input);\n\t\t}\n\t};\n}\n\nfunction resolveBooleanIs<T extends BaseValidator<any>, Key extends WhenKey>(options: WhenOptions<T, Key>, value: any, isKeyArray: boolean) {\n\tif (options.is === undefined) {\n\t\treturn isKeyArray ? !value.some((val: any) => !val) : Boolean(value);\n\t}\n\n\tif (typeof options.is === 'function') {\n\t\treturn options.is(value);\n\t}\n\n\treturn value === options.is;\n}\n", "var e,t,n,r=\"undefined\"!=typeof globalThis?globalThis:\"undefined\"!=typeof self?self:global,o=e={};function i(){throw new Error(\"setTimeout has not been defined\")}function u(){throw new Error(\"clearTimeout has not been defined\")}function c(e){if(t===setTimeout)return setTimeout(e,0);if((t===i||!t)&&setTimeout)return t=setTimeout,setTimeout(e,0);try{return t(e,0)}catch(n){try{return t.call(null,e,0)}catch(n){return t.call(this||r,e,0)}}}!function(){try{t=\"function\"==typeof setTimeout?setTimeout:i;}catch(e){t=i;}try{n=\"function\"==typeof clearTimeout?clearTimeout:u;}catch(e){n=u;}}();var l,s=[],f=!1,a=-1;function h(){f&&l&&(f=!1,l.length?s=l.concat(s):a=-1,s.length&&d());}function d(){if(!f){var e=c(h);f=!0;for(var t=s.length;t;){for(l=s,s=[];++a<t;)l&&l[a].run();a=-1,t=s.length;}l=null,f=!1,function(e){if(n===clearTimeout)return clearTimeout(e);if((n===u||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(e);try{n(e);}catch(t){try{return n.call(null,e)}catch(t){return n.call(this||r,e)}}}(e);}}function m(e,t){(this||r).fun=e,(this||r).array=t;}function p(){}o.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];s.push(new m(e,t)),1!==s.length||f||c(d);},m.prototype.run=function(){(this||r).fun.apply(null,(this||r).array);},o.title=\"browser\",o.browser=!0,o.env={},o.argv=[],o.version=\"\",o.versions={},o.on=p,o.addListener=p,o.once=p,o.off=p,o.removeListener=p,o.removeAllListeners=p,o.emit=p,o.prependListener=p,o.prependOnceListener=p,o.listeners=function(e){return []},o.binding=function(e){throw new Error(\"process.binding is not supported\")},o.cwd=function(){return \"/\"},o.chdir=function(e){throw new Error(\"process.chdir is not supported\")},o.umask=function(){return 0};var T=e;T.addListener;T.argv;T.binding;T.browser;T.chdir;T.cwd;T.emit;T.env;T.listeners;T.nextTick;T.off;T.on;T.once;T.prependListener;T.prependOnceListener;T.removeAllListeners;T.removeListener;T.title;T.umask;T.version;T.versions;\n\nexport { T };\n", "import { T as T$1 } from './chunk-5decc758.js';\n\nvar t=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.toStringTag,e=Object.prototype.toString,o=function(o){return !(t&&o&&\"object\"==typeof o&&Symbol.toStringTag in o)&&\"[object Arguments]\"===e.call(o)},n=function(t){return !!o(t)||null!==t&&\"object\"==typeof t&&\"number\"==typeof t.length&&t.length>=0&&\"[object Array]\"!==e.call(t)&&\"[object Function]\"===e.call(t.callee)},r=function(){return o(arguments)}();o.isLegacyArguments=n;var l=r?o:n;var t$1=Object.prototype.toString,o$1=Function.prototype.toString,n$1=/^\\s*(?:function)?\\*/,e$1=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.toStringTag,r$1=Object.getPrototypeOf,c=function(){if(!e$1)return !1;try{return Function(\"return function*() {}\")()}catch(t){}}(),u=c?r$1(c):{},i=function(c){return \"function\"==typeof c&&(!!n$1.test(o$1.call(c))||(e$1?r$1(c)===u:\"[object GeneratorFunction]\"===t$1.call(c)))};var t$2=\"function\"==typeof Object.create?function(t,e){e&&(t.super_=e,t.prototype=Object.create(e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}));}:function(t,e){if(e){t.super_=e;var o=function(){};o.prototype=e.prototype,t.prototype=new o,t.prototype.constructor=t;}};var i$1=function(e){return e&&\"object\"==typeof e&&\"function\"==typeof e.copy&&\"function\"==typeof e.fill&&\"function\"==typeof e.readUInt8},o$2={},u$1=i$1,f=l,a=i;function c$1(e){return e.call.bind(e)}var s=\"undefined\"!=typeof BigInt,p=\"undefined\"!=typeof Symbol,y=p&&void 0!==Symbol.toStringTag,l$1=\"undefined\"!=typeof Uint8Array,d=\"undefined\"!=typeof ArrayBuffer;if(l$1&&y)var g=Object.getPrototypeOf(Uint8Array.prototype),b=c$1(Object.getOwnPropertyDescriptor(g,Symbol.toStringTag).get);var m=c$1(Object.prototype.toString),h=c$1(Number.prototype.valueOf),j=c$1(String.prototype.valueOf),A=c$1(Boolean.prototype.valueOf);if(s)var w=c$1(BigInt.prototype.valueOf);if(p)var v=c$1(Symbol.prototype.valueOf);function O(e,t){if(\"object\"!=typeof e)return !1;try{return t(e),!0}catch(e){return !1}}function S(e){return l$1&&y?void 0!==b(e):B(e)||k(e)||E(e)||D(e)||U(e)||P(e)||x(e)||I(e)||M(e)||z(e)||F(e)}function B(e){return l$1&&y?\"Uint8Array\"===b(e):\"[object Uint8Array]\"===m(e)||u$1(e)&&void 0!==e.buffer}function k(e){return l$1&&y?\"Uint8ClampedArray\"===b(e):\"[object Uint8ClampedArray]\"===m(e)}function E(e){return l$1&&y?\"Uint16Array\"===b(e):\"[object Uint16Array]\"===m(e)}function D(e){return l$1&&y?\"Uint32Array\"===b(e):\"[object Uint32Array]\"===m(e)}function U(e){return l$1&&y?\"Int8Array\"===b(e):\"[object Int8Array]\"===m(e)}function P(e){return l$1&&y?\"Int16Array\"===b(e):\"[object Int16Array]\"===m(e)}function x(e){return l$1&&y?\"Int32Array\"===b(e):\"[object Int32Array]\"===m(e)}function I(e){return l$1&&y?\"Float32Array\"===b(e):\"[object Float32Array]\"===m(e)}function M(e){return l$1&&y?\"Float64Array\"===b(e):\"[object Float64Array]\"===m(e)}function z(e){return l$1&&y?\"BigInt64Array\"===b(e):\"[object BigInt64Array]\"===m(e)}function F(e){return l$1&&y?\"BigUint64Array\"===b(e):\"[object BigUint64Array]\"===m(e)}function T(e){return \"[object Map]\"===m(e)}function N(e){return \"[object Set]\"===m(e)}function W(e){return \"[object WeakMap]\"===m(e)}function $(e){return \"[object WeakSet]\"===m(e)}function C(e){return \"[object ArrayBuffer]\"===m(e)}function V(e){return \"undefined\"!=typeof ArrayBuffer&&(C.working?C(e):e instanceof ArrayBuffer)}function G(e){return \"[object DataView]\"===m(e)}function R(e){return \"undefined\"!=typeof DataView&&(G.working?G(e):e instanceof DataView)}function J(e){return \"[object SharedArrayBuffer]\"===m(e)}function _(e){return \"undefined\"!=typeof SharedArrayBuffer&&(J.working?J(e):e instanceof SharedArrayBuffer)}function H(e){return O(e,h)}function Z(e){return O(e,j)}function q(e){return O(e,A)}function K(e){return s&&O(e,w)}function L(e){return p&&O(e,v)}o$2.isArgumentsObject=f,o$2.isGeneratorFunction=a,o$2.isPromise=function(e){return \"undefined\"!=typeof Promise&&e instanceof Promise||null!==e&&\"object\"==typeof e&&\"function\"==typeof e.then&&\"function\"==typeof e.catch},o$2.isArrayBufferView=function(e){return d&&ArrayBuffer.isView?ArrayBuffer.isView(e):S(e)||R(e)},o$2.isTypedArray=S,o$2.isUint8Array=B,o$2.isUint8ClampedArray=k,o$2.isUint16Array=E,o$2.isUint32Array=D,o$2.isInt8Array=U,o$2.isInt16Array=P,o$2.isInt32Array=x,o$2.isFloat32Array=I,o$2.isFloat64Array=M,o$2.isBigInt64Array=z,o$2.isBigUint64Array=F,T.working=\"undefined\"!=typeof Map&&T(new Map),o$2.isMap=function(e){return \"undefined\"!=typeof Map&&(T.working?T(e):e instanceof Map)},N.working=\"undefined\"!=typeof Set&&N(new Set),o$2.isSet=function(e){return \"undefined\"!=typeof Set&&(N.working?N(e):e instanceof Set)},W.working=\"undefined\"!=typeof WeakMap&&W(new WeakMap),o$2.isWeakMap=function(e){return \"undefined\"!=typeof WeakMap&&(W.working?W(e):e instanceof WeakMap)},$.working=\"undefined\"!=typeof WeakSet&&$(new WeakSet),o$2.isWeakSet=function(e){return $(e)},C.working=\"undefined\"!=typeof ArrayBuffer&&C(new ArrayBuffer),o$2.isArrayBuffer=V,G.working=\"undefined\"!=typeof ArrayBuffer&&\"undefined\"!=typeof DataView&&G(new DataView(new ArrayBuffer(1),0,1)),o$2.isDataView=R,J.working=\"undefined\"!=typeof SharedArrayBuffer&&J(new SharedArrayBuffer),o$2.isSharedArrayBuffer=_,o$2.isAsyncFunction=function(e){return \"[object AsyncFunction]\"===m(e)},o$2.isMapIterator=function(e){return \"[object Map Iterator]\"===m(e)},o$2.isSetIterator=function(e){return \"[object Set Iterator]\"===m(e)},o$2.isGeneratorObject=function(e){return \"[object Generator]\"===m(e)},o$2.isWebAssemblyCompiledModule=function(e){return \"[object WebAssembly.Module]\"===m(e)},o$2.isNumberObject=H,o$2.isStringObject=Z,o$2.isBooleanObject=q,o$2.isBigIntObject=K,o$2.isSymbolObject=L,o$2.isBoxedPrimitive=function(e){return H(e)||Z(e)||q(e)||K(e)||L(e)},o$2.isAnyArrayBuffer=function(e){return l$1&&(V(e)||_(e))},[\"isProxy\",\"isExternal\",\"isModuleNamespaceObject\"].forEach((function(e){Object.defineProperty(o$2,e,{enumerable:!1,value:function(){throw new Error(e+\" is not supported in userland\")}});}));var Q=\"undefined\"!=typeof globalThis?globalThis:\"undefined\"!=typeof self?self:global,X={},Y=T$1,ee=Object.getOwnPropertyDescriptors||function(e){for(var t=Object.keys(e),r={},n=0;n<t.length;n++)r[t[n]]=Object.getOwnPropertyDescriptor(e,t[n]);return r},te=/%[sdj%]/g;X.format=function(e){if(!ge(e)){for(var t=[],r=0;r<arguments.length;r++)t.push(oe(arguments[r]));return t.join(\" \")}r=1;for(var n=arguments,i=n.length,o=String(e).replace(te,(function(e){if(\"%%\"===e)return \"%\";if(r>=i)return e;switch(e){case\"%s\":return String(n[r++]);case\"%d\":return Number(n[r++]);case\"%j\":try{return JSON.stringify(n[r++])}catch(e){return \"[Circular]\"}default:return e}})),u=n[r];r<i;u=n[++r])le(u)||!he(u)?o+=\" \"+u:o+=\" \"+oe(u);return o},X.deprecate=function(e,t){if(void 0!==Y&&!0===Y.noDeprecation)return e;if(void 0===Y)return function(){return X.deprecate(e,t).apply(this||Q,arguments)};var r=!1;return function(){if(!r){if(Y.throwDeprecation)throw new Error(t);Y.traceDeprecation?console.trace(t):console.error(t),r=!0;}return e.apply(this||Q,arguments)}};var re={},ne=/^$/;if(Y.env.NODE_DEBUG){var ie=Y.env.NODE_DEBUG;ie=ie.replace(/[|\\\\{}()[\\]^$+?.]/g,\"\\\\$&\").replace(/\\*/g,\".*\").replace(/,/g,\"$|^\").toUpperCase(),ne=new RegExp(\"^\"+ie+\"$\",\"i\");}function oe(e,t){var r={seen:[],stylize:fe};return arguments.length>=3&&(r.depth=arguments[2]),arguments.length>=4&&(r.colors=arguments[3]),ye(t)?r.showHidden=t:t&&X._extend(r,t),be(r.showHidden)&&(r.showHidden=!1),be(r.depth)&&(r.depth=2),be(r.colors)&&(r.colors=!1),be(r.customInspect)&&(r.customInspect=!0),r.colors&&(r.stylize=ue),ae(r,e,r.depth)}function ue(e,t){var r=oe.styles[t];return r?\"\u001B[\"+oe.colors[r][0]+\"m\"+e+\"\u001B[\"+oe.colors[r][1]+\"m\":e}function fe(e,t){return e}function ae(e,t,r){if(e.customInspect&&t&&we(t.inspect)&&t.inspect!==X.inspect&&(!t.constructor||t.constructor.prototype!==t)){var n=t.inspect(r,e);return ge(n)||(n=ae(e,n,r)),n}var i=function(e,t){if(be(t))return e.stylize(\"undefined\",\"undefined\");if(ge(t)){var r=\"'\"+JSON.stringify(t).replace(/^\"|\"$/g,\"\").replace(/'/g,\"\\\\'\").replace(/\\\\\"/g,'\"')+\"'\";return e.stylize(r,\"string\")}if(de(t))return e.stylize(\"\"+t,\"number\");if(ye(t))return e.stylize(\"\"+t,\"boolean\");if(le(t))return e.stylize(\"null\",\"null\")}(e,t);if(i)return i;var o=Object.keys(t),u=function(e){var t={};return e.forEach((function(e,r){t[e]=!0;})),t}(o);if(e.showHidden&&(o=Object.getOwnPropertyNames(t)),Ae(t)&&(o.indexOf(\"message\")>=0||o.indexOf(\"description\")>=0))return ce(t);if(0===o.length){if(we(t)){var f=t.name?\": \"+t.name:\"\";return e.stylize(\"[Function\"+f+\"]\",\"special\")}if(me(t))return e.stylize(RegExp.prototype.toString.call(t),\"regexp\");if(je(t))return e.stylize(Date.prototype.toString.call(t),\"date\");if(Ae(t))return ce(t)}var a,c=\"\",s=!1,p=[\"{\",\"}\"];(pe(t)&&(s=!0,p=[\"[\",\"]\"]),we(t))&&(c=\" [Function\"+(t.name?\": \"+t.name:\"\")+\"]\");return me(t)&&(c=\" \"+RegExp.prototype.toString.call(t)),je(t)&&(c=\" \"+Date.prototype.toUTCString.call(t)),Ae(t)&&(c=\" \"+ce(t)),0!==o.length||s&&0!=t.length?r<0?me(t)?e.stylize(RegExp.prototype.toString.call(t),\"regexp\"):e.stylize(\"[Object]\",\"special\"):(e.seen.push(t),a=s?function(e,t,r,n,i){for(var o=[],u=0,f=t.length;u<f;++u)ke(t,String(u))?o.push(se(e,t,r,n,String(u),!0)):o.push(\"\");return i.forEach((function(i){i.match(/^\\d+$/)||o.push(se(e,t,r,n,i,!0));})),o}(e,t,r,u,o):o.map((function(n){return se(e,t,r,u,n,s)})),e.seen.pop(),function(e,t,r){var n=0;if(e.reduce((function(e,t){return n++,t.indexOf(\"\\n\")>=0&&n++,e+t.replace(/\\u001b\\[\\d\\d?m/g,\"\").length+1}),0)>60)return r[0]+(\"\"===t?\"\":t+\"\\n \")+\" \"+e.join(\",\\n  \")+\" \"+r[1];return r[0]+t+\" \"+e.join(\", \")+\" \"+r[1]}(a,c,p)):p[0]+c+p[1]}function ce(e){return \"[\"+Error.prototype.toString.call(e)+\"]\"}function se(e,t,r,n,i,o){var u,f,a;if((a=Object.getOwnPropertyDescriptor(t,i)||{value:t[i]}).get?f=a.set?e.stylize(\"[Getter/Setter]\",\"special\"):e.stylize(\"[Getter]\",\"special\"):a.set&&(f=e.stylize(\"[Setter]\",\"special\")),ke(n,i)||(u=\"[\"+i+\"]\"),f||(e.seen.indexOf(a.value)<0?(f=le(r)?ae(e,a.value,null):ae(e,a.value,r-1)).indexOf(\"\\n\")>-1&&(f=o?f.split(\"\\n\").map((function(e){return \"  \"+e})).join(\"\\n\").substr(2):\"\\n\"+f.split(\"\\n\").map((function(e){return \"   \"+e})).join(\"\\n\")):f=e.stylize(\"[Circular]\",\"special\")),be(u)){if(o&&i.match(/^\\d+$/))return f;(u=JSON.stringify(\"\"+i)).match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)?(u=u.substr(1,u.length-2),u=e.stylize(u,\"name\")):(u=u.replace(/'/g,\"\\\\'\").replace(/\\\\\"/g,'\"').replace(/(^\"|\"$)/g,\"'\"),u=e.stylize(u,\"string\"));}return u+\": \"+f}function pe(e){return Array.isArray(e)}function ye(e){return \"boolean\"==typeof e}function le(e){return null===e}function de(e){return \"number\"==typeof e}function ge(e){return \"string\"==typeof e}function be(e){return void 0===e}function me(e){return he(e)&&\"[object RegExp]\"===ve(e)}function he(e){return \"object\"==typeof e&&null!==e}function je(e){return he(e)&&\"[object Date]\"===ve(e)}function Ae(e){return he(e)&&(\"[object Error]\"===ve(e)||e instanceof Error)}function we(e){return \"function\"==typeof e}function ve(e){return Object.prototype.toString.call(e)}function Oe(e){return e<10?\"0\"+e.toString(10):e.toString(10)}X.debuglog=function(e){if(e=e.toUpperCase(),!re[e])if(ne.test(e)){var t=Y.pid;re[e]=function(){var r=X.format.apply(X,arguments);console.error(\"%s %d: %s\",e,t,r);};}else re[e]=function(){};return re[e]},X.inspect=oe,oe.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},oe.styles={special:\"cyan\",number:\"yellow\",boolean:\"yellow\",undefined:\"grey\",null:\"bold\",string:\"green\",date:\"magenta\",regexp:\"red\"},X.types=o$2,X.isArray=pe,X.isBoolean=ye,X.isNull=le,X.isNullOrUndefined=function(e){return null==e},X.isNumber=de,X.isString=ge,X.isSymbol=function(e){return \"symbol\"==typeof e},X.isUndefined=be,X.isRegExp=me,X.types.isRegExp=me,X.isObject=he,X.isDate=je,X.types.isDate=je,X.isError=Ae,X.types.isNativeError=Ae,X.isFunction=we,X.isPrimitive=function(e){return null===e||\"boolean\"==typeof e||\"number\"==typeof e||\"string\"==typeof e||\"symbol\"==typeof e||void 0===e},X.isBuffer=i$1;var Se=[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];function Be(){var e=new Date,t=[Oe(e.getHours()),Oe(e.getMinutes()),Oe(e.getSeconds())].join(\":\");return [e.getDate(),Se[e.getMonth()],t].join(\" \")}function ke(e,t){return Object.prototype.hasOwnProperty.call(e,t)}X.log=function(){console.log(\"%s - %s\",Be(),X.format.apply(X,arguments));},X.inherits=t$2,X._extend=function(e,t){if(!t||!he(t))return e;for(var r=Object.keys(t),n=r.length;n--;)e[r[n]]=t[r[n]];return e};var Ee=\"undefined\"!=typeof Symbol?Symbol(\"util.promisify.custom\"):void 0;function De(e,t){if(!e){var r=new Error(\"Promise was rejected with a falsy value\");r.reason=e,e=r;}return t(e)}X.promisify=function(e){if(\"function\"!=typeof e)throw new TypeError('The \"original\" argument must be of type Function');if(Ee&&e[Ee]){var t;if(\"function\"!=typeof(t=e[Ee]))throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');return Object.defineProperty(t,Ee,{value:t,enumerable:!1,writable:!1,configurable:!0}),t}function t(){for(var t,r,n=new Promise((function(e,n){t=e,r=n;})),i=[],o=0;o<arguments.length;o++)i.push(arguments[o]);i.push((function(e,n){e?r(e):t(n);}));try{e.apply(this||Q,i);}catch(e){r(e);}return n}return Object.setPrototypeOf(t,Object.getPrototypeOf(e)),Ee&&Object.defineProperty(t,Ee,{value:t,enumerable:!1,writable:!1,configurable:!0}),Object.defineProperties(t,ee(e))},X.promisify.custom=Ee,X.callbackify=function(e){if(\"function\"!=typeof e)throw new TypeError('The \"original\" argument must be of type Function');function t(){for(var t=[],r=0;r<arguments.length;r++)t.push(arguments[r]);var n=t.pop();if(\"function\"!=typeof n)throw new TypeError(\"The last argument must be of type Function\");var i=this||Q,o=function(){return n.apply(i,arguments)};e.apply(this||Q,t).then((function(e){Y.nextTick(o.bind(null,null,e));}),(function(e){Y.nextTick(De.bind(null,e,o));}));}return Object.setPrototypeOf(t,Object.getPrototypeOf(e)),Object.defineProperties(t,ee(e)),t};\n\nexport { X, t$2 as t };\n", "import { X } from './chunk-b4205b57.js';\nimport './chunk-5decc758.js';\n\nX._extend;X.callbackify;X.debuglog;X.deprecate;X.format;X.inherits;X.inspect;X.isArray;X.isBoolean;X.isBuffer;X.isDate;X.isError;X.isFunction;X.isNull;X.isNullOrUndefined;X.isNumber;X.isObject;X.isPrimitive;X.isRegExp;X.isString;X.isSymbol;X.isUndefined;X.log;X.promisify;\n\nvar _extend = X._extend;\nvar callbackify = X.callbackify;\nvar debuglog = X.debuglog;\nvar deprecate = X.deprecate;\nvar format = X.format;\nvar inherits = X.inherits;\nvar inspect = X.inspect;\nvar isArray = X.isArray;\nvar isBoolean = X.isBoolean;\nvar isBuffer = X.isBuffer;\nvar isDate = X.isDate;\nvar isError = X.isError;\nvar isFunction = X.isFunction;\nvar isNull = X.isNull;\nvar isNullOrUndefined = X.isNullOrUndefined;\nvar isNumber = X.isNumber;\nvar isObject = X.isObject;\nvar isPrimitive = X.isPrimitive;\nvar isRegExp = X.isRegExp;\nvar isString = X.isString;\nvar isSymbol = X.isSymbol;\nvar isUndefined = X.isUndefined;\nvar log = X.log;\nvar promisify = X.promisify;\nvar types = X.types;\n\nconst TextEncoder = self.TextEncoder;\nconst TextDecoder = self.TextDecoder;\n\nexport { TextDecoder as T, _extend as _, TextEncoder as a, deprecate as b, callbackify as c, debuglog as d, inspect as e, format as f, isArray as g, isBoolean as h, inherits as i, isBuffer as j, isDate as k, isError as l, isFunction as m, isNull as n, isNullOrUndefined as o, promisify as p, isNumber as q, isObject as r, isPrimitive as s, isRegExp as t, isString as u, isSymbol as v, isUndefined as w, log as x, types as y };\n", "import './chunk-ce0fbc82.js';\nimport { X } from './chunk-b4205b57.js';\nexport { X as default } from './chunk-b4205b57.js';\nimport './chunk-5decc758.js';\n\nvar _extend = X._extend;\r\nvar callbackify = X.callbackify;\r\nvar debuglog = X.debuglog;\r\nvar deprecate = X.deprecate;\r\nvar format = X.format;\r\nvar inherits = X.inherits;\r\nvar inspect = X.inspect;\r\nvar isArray = X.isArray;\r\nvar isBoolean = X.isBoolean;\r\nvar isBuffer = X.isBuffer;\r\nvar isDate = X.isDate;\r\nvar isError = X.isError;\r\nvar isFunction = X.isFunction;\r\nvar isNull = X.isNull;\r\nvar isNullOrUndefined = X.isNullOrUndefined;\r\nvar isNumber = X.isNumber;\r\nvar isObject = X.isObject;\r\nvar isPrimitive = X.isPrimitive;\r\nvar isRegExp = X.isRegExp;\r\nvar isString = X.isString;\r\nvar isSymbol = X.isSymbol;\r\nvar isUndefined = X.isUndefined;\r\nvar log = X.log;\r\nvar promisify = X.promisify;\r\nvar types = X.types;\r\n\r\nconst TextEncoder = X.TextEncoder = globalThis.TextEncoder;\r\nconst TextDecoder = X.TextDecoder = globalThis.TextDecoder;\n\nexport { TextDecoder, TextEncoder, _extend, callbackify, debuglog, deprecate, format, inherits, inspect, isArray, isBoolean, isBuffer, isDate, isError, isFunction, isNull, isNullOrUndefined, isNumber, isObject, isPrimitive, isRegExp, isString, isSymbol, isUndefined, log, promisify, types };\n", "import type { InspectOptionsStylized } from 'util';\nimport type { BaseErrorJsonified } from './error-types';\n\nexport const customInspectSymbol = Symbol.for('nodejs.util.inspect.custom');\nexport const customInspectSymbolStackLess = Symbol.for('nodejs.util.inspect.custom.stack-less');\n\nexport abstract class BaseError extends Error {\n\tpublic toJSON(): BaseErrorJsonified {\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tmessage: this.message\n\t\t};\n\t}\n\n\tprotected [customInspectSymbol](depth: number, options: InspectOptionsStylized) {\n\t\treturn `${this[customInspectSymbolStackLess](depth, options)}\\n${this.stack!.slice(this.stack!.indexOf('\\n'))}`;\n\t}\n\n\tprotected abstract [customInspectSymbolStackLess](depth: number, options: InspectOptionsStylized): string;\n}\n", "import type {\n\tArrayConstraintName,\n\tBigIntConstraintName,\n\tBooleanConstraintName,\n\tDateConstraintName,\n\tNumberConstraintName,\n\tObjectConstraintName,\n\tStringConstraintName,\n\tTypedArrayConstraintName\n} from '../../constraints/type-exports';\nimport { BaseError } from './BaseError';\nimport type { BaseConstraintErrorJsonified } from './error-types';\n\nexport type ConstraintErrorNames =\n\t| TypedArrayConstraintName\n\t| ArrayConstraintName\n\t| BigIntConstraintName\n\t| BooleanConstraintName\n\t| DateConstraintName\n\t| NumberConstraintName\n\t| ObjectConstraintName\n\t| StringConstraintName;\n\nexport abstract class BaseConstraintError<T = unknown> extends BaseError {\n\tpublic readonly constraint: ConstraintErrorNames;\n\tpublic readonly given: T;\n\n\tpublic constructor(constraint: ConstraintErrorNames, message: string, given: T) {\n\t\tsuper(message);\n\t\tthis.constraint = constraint;\n\t\tthis.given = given;\n\t}\n\n\tpublic override toJSON(): BaseConstraintErrorJsonified<T> {\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tconstraint: this.constraint,\n\t\t\tgiven: this.given,\n\t\t\tmessage: this.message\n\t\t};\n\t}\n}\n", "import { inspect, type InspectOptionsStylized } from 'util';\nimport { BaseConstraintError, type ConstraintErrorNames } from './BaseConstraintError';\nimport { customInspectSymbolStackLess } from './BaseError';\nimport type { ExpectedConstraintErrorJsonified } from './error-types';\n\nexport class ExpectedConstraintError<T = unknown> extends BaseConstraintError<T> {\n\tpublic readonly expected: string;\n\n\tpublic constructor(constraint: ConstraintErrorNames, message: string, given: T, expected: string) {\n\t\tsuper(constraint, message, given);\n\t\tthis.expected = expected;\n\t}\n\n\tpublic override toJSON(): ExpectedConstraintErrorJsonified<T> {\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tconstraint: this.constraint,\n\t\t\tgiven: this.given,\n\t\t\texpected: this.expected,\n\t\t\tmessage: this.message\n\t\t};\n\t}\n\n\tprotected [customInspectSymbolStackLess](depth: number, options: InspectOptionsStylized): string {\n\t\tconst constraint = options.stylize(this.constraint, 'string');\n\t\tif (depth < 0) {\n\t\t\treturn options.stylize(`[ExpectedConstraintError: ${constraint}]`, 'special');\n\t\t}\n\n\t\tconst newOptions = { ...options, depth: options.depth === null ? null : options.depth! - 1 };\n\n\t\tconst padding = `\\n  ${options.stylize('|', 'undefined')} `;\n\t\tconst given = inspect(this.given, newOptions).replace(/\\n/g, padding);\n\n\t\tconst header = `${options.stylize('ExpectedConstraintError', 'special')} > ${constraint}`;\n\t\tconst message = options.stylize(this.message, 'regexp');\n\t\tconst expectedBlock = `\\n  ${options.stylize('Expected: ', 'string')}${options.stylize(this.expected, 'boolean')}`;\n\t\tconst givenBlock = `\\n  ${options.stylize('Received:', 'regexp')}${padding}${given}`;\n\t\treturn `${header}\\n  ${message}\\n${expectedBlock}\\n${givenBlock}`;\n\t}\n}\n", "export class Result<T, E extends Error = Error> {\n\tpublic readonly success: boolean;\n\tpublic readonly value?: T;\n\tpublic readonly error?: E;\n\n\tprivate constructor(success: boolean, value?: T, error?: E) {\n\t\tthis.success = success;\n\t\tif (success) {\n\t\t\tthis.value = value;\n\t\t} else {\n\t\t\tthis.error = error;\n\t\t}\n\t}\n\n\tpublic isOk(): this is { success: true; value: T } {\n\t\treturn this.success;\n\t}\n\n\tpublic isErr(): this is { success: false; error: E } {\n\t\treturn !this.success;\n\t}\n\n\tpublic unwrap(): T {\n\t\tif (this.isOk()) return this.value;\n\t\tthrow this.error as Error;\n\t}\n\n\tpublic static ok<T, E extends Error = Error>(value: T): Result<T, E> {\n\t\treturn new Result<T, E>(true, value);\n\t}\n\n\tpublic static err<T, E extends Error = Error>(error: E): Result<T, E> {\n\t\treturn new Result<T, E>(false, undefined, error);\n\t}\n}\n", "let validationEnabled = true;\n\n/**\n * Sets whether validators should run on the input, or if the input should be passed through.\n * @param enabled Whether validation should be done on inputs\n */\nexport function setGlobalValidationEnabled(enabled: boolean) {\n\tvalidationEnabled = enabled;\n}\n\n/**\n * @returns Whether validation is enabled\n */\nexport function getGlobalValidationEnabled() {\n\treturn validationEnabled;\n}\n", "// https://github.com/microsoft/TypeScript/issues/37663\ntype Fn = (...args: unknown[]) => unknown;\n\nexport function getValue<T, U = T extends Fn ? ReturnType<T> : T>(valueOrFn: T): U {\n\treturn typeof valueOrFn === 'function' ? valueOrFn() : valueOrFn;\n}\n", "import type { IConstraint } from '../constraints/base/IConstraint';\nimport { whenConstraint, type WhenKey, type WhenOptions } from '../constraints/ObjectConstrains';\nimport { getGlobalValidationEnabled } from '../lib/configs';\nimport type { BaseConstraintError } from '../lib/errors/BaseConstraintError';\nimport type { BaseError } from '../lib/errors/BaseError';\nimport type { CombinedError } from '../lib/errors/CombinedError';\nimport type { CombinedPropertyError } from '../lib/errors/CombinedPropertyError';\nimport type { UnknownEnumValueError } from '../lib/errors/UnknownEnumValueError';\nimport type { ValidationError } from '../lib/errors/ValidationError';\nimport { Result } from '../lib/Result';\nimport type { InferResultType, ValidatorOptions } from '../lib/util-types';\nimport { ArrayValidator, DefaultValidator, LiteralValidator, NullishValidator, SetValidator, UnionValidator } from './imports';\nimport { getValue } from './util/getValue';\n\nexport abstract class BaseValidator<T> {\n\tpublic description?: string;\n\tprotected validatorOptions: ValidatorOptions;\n\tprotected parent?: object;\n\tprotected constraints: readonly IConstraint<T>[] = [];\n\tprotected isValidationEnabled: boolean | (() => boolean) | null = null;\n\n\tpublic constructor(validatorOptions: ValidatorOptions = {}, constraints: readonly IConstraint<T>[] = []) {\n\t\tthis.constraints = constraints;\n\t\tthis.validatorOptions = validatorOptions;\n\t}\n\n\tpublic setParent(parent: object): this {\n\t\tthis.parent = parent;\n\t\treturn this;\n\t}\n\n\tpublic optional(options: ValidatorOptions = this.validatorOptions): UnionValidator<T | undefined> {\n\t\treturn new UnionValidator([new LiteralValidator(undefined, options), this.clone()], options);\n\t}\n\n\tpublic nullable(options: ValidatorOptions = this.validatorOptions): UnionValidator<T | null> {\n\t\treturn new UnionValidator([new LiteralValidator(null, options), this.clone()], options);\n\t}\n\n\tpublic nullish(options: ValidatorOptions = this.validatorOptions): UnionValidator<T | null | undefined> {\n\t\treturn new UnionValidator([new NullishValidator(options), this.clone()], options);\n\t}\n\n\tpublic array(options: ValidatorOptions = this.validatorOptions): ArrayValidator<T[]> {\n\t\treturn new ArrayValidator<T[]>(this.clone(), options);\n\t}\n\n\tpublic set(options: ValidatorOptions = this.validatorOptions): SetValidator<T> {\n\t\treturn new SetValidator<T>(this.clone(), options);\n\t}\n\n\tpublic or<O>(...predicates: readonly BaseValidator<O>[]): UnionValidator<T | O> {\n\t\treturn new UnionValidator<T | O>([this.clone(), ...predicates], this.validatorOptions);\n\t}\n\n\tpublic transform(cb: (value: T) => T, options?: ValidatorOptions): this;\n\tpublic transform<O>(cb: (value: T) => O, options?: ValidatorOptions): BaseValidator<O>;\n\tpublic transform<O>(cb: (value: T) => O, options: ValidatorOptions = this.validatorOptions): BaseValidator<O> {\n\t\treturn this.addConstraint(\n\t\t\t{\n\t\t\t\trun: (input) => Result.ok(cb(input) as unknown as T)\n\t\t\t},\n\t\t\toptions\n\t\t) as unknown as BaseValidator<O>;\n\t}\n\n\tpublic reshape(cb: (input: T) => Result<T>, options?: ValidatorOptions): this;\n\tpublic reshape<R extends Result<unknown>, O = InferResultType<R>>(cb: (input: T) => R, options?: ValidatorOptions): BaseValidator<O>;\n\tpublic reshape<R extends Result<unknown>, O = InferResultType<R>>(\n\t\tcb: (input: T) => R,\n\t\toptions: ValidatorOptions = this.validatorOptions\n\t): BaseValidator<O> {\n\t\treturn this.addConstraint(\n\t\t\t{\n\t\t\t\trun: cb as unknown as (input: T) => Result<T, BaseConstraintError<T>>\n\t\t\t},\n\t\t\toptions\n\t\t) as unknown as BaseValidator<O>;\n\t}\n\n\tpublic default(\n\t\tvalue: Exclude<T, undefined> | (() => Exclude<T, undefined>),\n\t\toptions: ValidatorOptions = this.validatorOptions\n\t): DefaultValidator<Exclude<T, undefined>> {\n\t\treturn new DefaultValidator(this.clone() as unknown as BaseValidator<Exclude<T, undefined>>, value, options);\n\t}\n\n\tpublic when<Key extends WhenKey, This extends BaseValidator<any> = this>(\n\t\tkey: Key,\n\t\toptions: WhenOptions<This, Key>,\n\t\tvalidatorOptions?: ValidatorOptions\n\t): this {\n\t\treturn this.addConstraint(whenConstraint<This, T, Key>(key, options, this as unknown as This, validatorOptions));\n\t}\n\n\tpublic describe(description: string): this {\n\t\tconst clone = this.clone();\n\t\tclone.description = description;\n\t\treturn clone;\n\t}\n\n\tpublic run(value: unknown): Result<T, BaseError> {\n\t\tlet result = this.handle(value) as Result<T, BaseError>;\n\t\tif (result.isErr()) return result;\n\n\t\tfor (const constraint of this.constraints) {\n\t\t\tresult = constraint.run(result.value as T, this.parent);\n\t\t\tif (result.isErr()) break;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic parse<R extends T = T>(value: unknown): R {\n\t\t// If validation is disabled (at the validator or global level), we only run the `handle` method, which will do some basic checks\n\t\t// (like that the input is a string for a string validator)\n\t\tif (!this.shouldRunConstraints) {\n\t\t\treturn this.handle(value).unwrap() as R;\n\t\t}\n\n\t\treturn this.constraints.reduce((v, constraint) => constraint.run(v).unwrap(), this.handle(value).unwrap()) as R;\n\t}\n\n\tpublic is<R extends T = T>(value: unknown): value is R {\n\t\treturn this.run(value).isOk();\n\t}\n\n\t/**\n\t * Sets if the validator should also run constraints or just do basic checks.\n\t * @param isValidationEnabled Whether this validator should be enabled or disabled. You can pass boolean or a function returning boolean which will be called just before parsing.\n\t * Set to `null` to go off of the global configuration.\n\t */\n\tpublic setValidationEnabled(isValidationEnabled: boolean | (() => boolean) | null): this {\n\t\tconst clone = this.clone();\n\t\tclone.isValidationEnabled = isValidationEnabled;\n\t\treturn clone;\n\t}\n\n\tpublic getValidationEnabled() {\n\t\treturn getValue(this.isValidationEnabled);\n\t}\n\n\tprotected get shouldRunConstraints(): boolean {\n\t\treturn getValue(this.isValidationEnabled) ?? getGlobalValidationEnabled();\n\t}\n\n\tprotected clone(): this {\n\t\tconst clone: this = Reflect.construct(this.constructor, [this.validatorOptions, this.constraints]);\n\t\tclone.isValidationEnabled = this.isValidationEnabled;\n\t\treturn clone;\n\t}\n\n\tprotected abstract handle(value: unknown): Result<T, ValidatorError>;\n\n\tprotected addConstraint(constraint: IConstraint<T>, validatorOptions: ValidatorOptions = this.validatorOptions): this {\n\t\tconst clone = this.clone();\n\t\tclone.validatorOptions = validatorOptions;\n\t\tclone.constraints = clone.constraints.concat(constraint);\n\t\treturn clone;\n\t}\n}\n\nexport type ValidatorError = ValidationError | CombinedError | CombinedPropertyError | UnknownEnumValueError;\n", "import fastDeepEqual from 'fast-deep-equal/es6/index.js';\nimport uniqWith from 'lodash/uniqWith.js';\n\nexport function isUnique(input: unknown[]) {\n\tif (input.length < 2) return true;\n\tconst uniqueArray = uniqWith(input, fastDeepEqual);\n\treturn uniqueArray.length === input.length;\n}\n", "export function lessThan(a: number, b: number): boolean;\nexport function lessThan(a: bigint, b: bigint): boolean;\nexport function lessThan(a: number | bigint, b: number | bigint): boolean {\n\treturn a < b;\n}\n\nexport function lessThanOrEqual(a: number, b: number): boolean;\nexport function lessThanOrEqual(a: bigint, b: bigint): boolean;\nexport function lessThanOrEqual(a: number | bigint, b: number | bigint): boolean {\n\treturn a <= b;\n}\n\nexport function greaterThan(a: number, b: number): boolean;\nexport function greaterThan(a: bigint, b: bigint): boolean;\nexport function greaterThan(a: number | bigint, b: number | bigint): boolean {\n\treturn a > b;\n}\n\nexport function greaterThanOrEqual(a: number, b: number): boolean;\nexport function greaterThanOrEqual(a: bigint, b: bigint): boolean;\nexport function greaterThanOrEqual(a: number | bigint, b: number | bigint): boolean {\n\treturn a >= b;\n}\n\nexport function equal(a: number, b: number): boolean;\nexport function equal(a: bigint, b: bigint): boolean;\nexport function equal(a: number | bigint, b: number | bigint): boolean {\n\treturn a === b;\n}\n\nexport function notEqual(a: number, b: number): boolean;\nexport function notEqual(a: bigint, b: bigint): boolean;\nexport function notEqual(a: number | bigint, b: number | bigint): boolean {\n\treturn a !== b;\n}\n\nexport interface Comparator {\n\t(a: number, b: number): boolean;\n\t(a: bigint, b: bigint): boolean;\n}\n", "import { ExpectedConstraintError } from '../lib/errors/ExpectedConstraintError';\nimport { Result } from '../lib/Result';\nimport type { ValidatorOptions } from '../lib/util-types';\nimport type { IConstraint } from './base/IConstraint';\nimport { isUnique } from './util/isUnique';\nimport { equal, greaterThan, greaterThanOrEqual, lessThan, lessThanOrEqual, notEqual, type Comparator } from './util/operators';\n\nexport type ArrayConstraintName = `s.array(T).${\n\t| 'unique'\n\t| `length${\n\t\t\t| 'LessThan'\n\t\t\t| 'LessThanOrEqual'\n\t\t\t| 'GreaterThan'\n\t\t\t| 'GreaterThanOrEqual'\n\t\t\t| 'Equal'\n\t\t\t| 'NotEqual'\n\t\t\t| 'Range'\n\t\t\t| 'RangeInclusive'\n\t\t\t| 'RangeExclusive'}`}()`;\n\nfunction arrayLengthComparator<T>(\n\tcomparator: Comparator,\n\tname: ArrayConstraintName,\n\texpected: string,\n\tlength: number,\n\toptions?: ValidatorOptions\n): IConstraint<T[]> {\n\treturn {\n\t\trun(input: T[]) {\n\t\t\treturn comparator(input.length, length) //\n\t\t\t\t? Result.ok(input)\n\t\t\t\t: Result.err(new ExpectedConstraintError(name, options?.message ?? 'Invalid Array length', input, expected));\n\t\t}\n\t};\n}\n\nexport function arrayLengthLessThan<T>(value: number, options?: ValidatorOptions): IConstraint<T[]> {\n\tconst expected = `expected.length < ${value}`;\n\treturn arrayLengthComparator(lessThan, 's.array(T).lengthLessThan()', expected, value, options);\n}\n\nexport function arrayLengthLessThanOrEqual<T>(value: number, options?: ValidatorOptions): IConstraint<T[]> {\n\tconst expected = `expected.length <= ${value}`;\n\treturn arrayLengthComparator(lessThanOrEqual, 's.array(T).lengthLessThanOrEqual()', expected, value, options);\n}\n\nexport function arrayLengthGreaterThan<T>(value: number, options?: ValidatorOptions): IConstraint<T[]> {\n\tconst expected = `expected.length > ${value}`;\n\treturn arrayLengthComparator(greaterThan, 's.array(T).lengthGreaterThan()', expected, value, options);\n}\n\nexport function arrayLengthGreaterThanOrEqual<T>(value: number, options?: ValidatorOptions): IConstraint<T[]> {\n\tconst expected = `expected.length >= ${value}`;\n\treturn arrayLengthComparator(greaterThanOrEqual, 's.array(T).lengthGreaterThanOrEqual()', expected, value, options);\n}\n\nexport function arrayLengthEqual<T>(value: number, options?: ValidatorOptions): IConstraint<T[]> {\n\tconst expected = `expected.length === ${value}`;\n\treturn arrayLengthComparator(equal, 's.array(T).lengthEqual()', expected, value, options);\n}\n\nexport function arrayLengthNotEqual<T>(value: number, options?: ValidatorOptions): IConstraint<T[]> {\n\tconst expected = `expected.length !== ${value}`;\n\treturn arrayLengthComparator(notEqual, 's.array(T).lengthNotEqual()', expected, value, options);\n}\n\nexport function arrayLengthRange<T>(start: number, endBefore: number, options?: ValidatorOptions): IConstraint<T[]> {\n\tconst expected = `expected.length >= ${start} && expected.length < ${endBefore}`;\n\treturn {\n\t\trun(input: T[]) {\n\t\t\treturn input.length >= start && input.length < endBefore //\n\t\t\t\t? Result.ok(input)\n\t\t\t\t: Result.err(new ExpectedConstraintError('s.array(T).lengthRange()', options?.message ?? 'Invalid Array length', input, expected));\n\t\t}\n\t};\n}\n\nexport function arrayLengthRangeInclusive<T>(start: number, end: number, options?: ValidatorOptions): IConstraint<T[]> {\n\tconst expected = `expected.length >= ${start} && expected.length <= ${end}`;\n\treturn {\n\t\trun(input: T[]) {\n\t\t\treturn input.length >= start && input.length <= end //\n\t\t\t\t? Result.ok(input)\n\t\t\t\t: Result.err(\n\t\t\t\t\t\tnew ExpectedConstraintError('s.array(T).lengthRangeInclusive()', options?.message ?? 'Invalid Array length', input, expected)\n\t\t\t\t\t);\n\t\t}\n\t};\n}\n\nexport function arrayLengthRangeExclusive<T>(startAfter: number, endBefore: number, options?: ValidatorOptions): IConstraint<T[]> {\n\tconst expected = `expected.length > ${startAfter} && expected.length < ${endBefore}`;\n\treturn {\n\t\trun(input: T[]) {\n\t\t\treturn input.length > startAfter && input.length < endBefore //\n\t\t\t\t? Result.ok(input)\n\t\t\t\t: Result.err(\n\t\t\t\t\t\tnew ExpectedConstraintError('s.array(T).lengthRangeExclusive()', options?.message ?? 'Invalid Array length', input, expected)\n\t\t\t\t\t);\n\t\t}\n\t};\n}\n\nexport function uniqueArray(options?: ValidatorOptions): IConstraint<unknown[]> {\n\treturn {\n\t\trun(input: unknown[]) {\n\t\t\treturn isUnique(input) //\n\t\t\t\t? Result.ok(input)\n\t\t\t\t: Result.err(\n\t\t\t\t\t\tnew ExpectedConstraintError(\n\t\t\t\t\t\t\t's.array(T).unique()',\n\t\t\t\t\t\t\toptions?.message ?? 'Array values are not unique',\n\t\t\t\t\t\t\tinput,\n\t\t\t\t\t\t\t'Expected all values to be unique'\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t}\n\t};\n}\n", "import type { InspectOptionsStylized } from 'util';\nimport type { ValidatorOptions } from '../util-types';\nimport { BaseError, customInspectSymbolStackLess } from './BaseError';\n\nexport class CombinedPropertyError extends BaseError {\n\tpublic readonly errors: [PropertyKey, BaseError][];\n\n\tpublic constructor(errors: [PropertyKey, BaseError][], validatorOptions?: ValidatorOptions) {\n\t\tsuper(validatorOptions?.message ?? 'Received one or more errors');\n\n\t\tthis.errors = errors;\n\t}\n\n\tprotected [customInspectSymbolStackLess](depth: number, options: InspectOptionsStylized): string {\n\t\tif (depth < 0) {\n\t\t\treturn options.stylize('[CombinedPropertyError]', 'special');\n\t\t}\n\n\t\tconst newOptions = { ...options, depth: options.depth === null ? null : options.depth! - 1, compact: true };\n\n\t\tconst padding = `\\n  ${options.stylize('|', 'undefined')} `;\n\n\t\tconst header = `${options.stylize('CombinedPropertyError', 'special')} (${options.stylize(this.errors.length.toString(), 'number')})`;\n\t\tconst message = options.stylize(this.message, 'regexp');\n\t\tconst errors = this.errors\n\t\t\t.map(([key, error]) => {\n\t\t\t\tconst property = CombinedPropertyError.formatProperty(key, options);\n\t\t\t\tconst body = error[customInspectSymbolStackLess](depth - 1, newOptions).replace(/\\n/g, padding);\n\n\t\t\t\treturn `  input${property}${padding}${body}`;\n\t\t\t})\n\t\t\t.join('\\n\\n');\n\t\treturn `${header}\\n  ${message}\\n\\n${errors}`;\n\t}\n\n\tprivate static formatProperty(key: PropertyKey, options: InspectOptionsStylized): string {\n\t\tif (typeof key === 'string') return options.stylize(`.${key}`, 'symbol');\n\t\tif (typeof key === 'number') return `[${options.stylize(key.toString(), 'number')}]`;\n\t\treturn `[${options.stylize('Symbol', 'symbol')}(${key.description})]`;\n\t}\n}\n", "import { inspect, type InspectOptionsStylized } from 'util';\nimport { BaseError, customInspectSymbolStackLess } from './BaseError';\nimport type { ValidationErrorJsonified } from './error-types';\n\nexport class ValidationError extends BaseError {\n\tpublic readonly validator: string;\n\tpublic readonly given: unknown;\n\n\tpublic constructor(validator: string, message: string, given: unknown) {\n\t\tsuper(message);\n\n\t\tthis.validator = validator;\n\t\tthis.given = given;\n\t}\n\n\tpublic override toJSON(): ValidationErrorJsonified {\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tmessage: 'Unknown validation error occurred.',\n\t\t\tvalidator: this.validator,\n\t\t\tgiven: this.given\n\t\t};\n\t}\n\n\tprotected [customInspectSymbolStackLess](depth: number, options: InspectOptionsStylized): string {\n\t\tconst validator = options.stylize(this.validator, 'string');\n\t\tif (depth < 0) {\n\t\t\treturn options.stylize(`[ValidationError: ${validator}]`, 'special');\n\t\t}\n\n\t\tconst newOptions = { ...options, depth: options.depth === null ? null : options.depth! - 1, compact: true };\n\n\t\tconst padding = `\\n  ${options.stylize('|', 'undefined')} `;\n\t\tconst given = inspect(this.given, newOptions).replace(/\\n/g, padding);\n\n\t\tconst header = `${options.stylize('ValidationError', 'special')} > ${validator}`;\n\t\tconst message = options.stylize(this.message, 'regexp');\n\t\tconst givenBlock = `\\n  ${options.stylize('Received:', 'regexp')}${padding}${given}`;\n\t\treturn `${header}\\n  ${message}\\n${givenBlock}`;\n\t}\n}\n", "import {\n\tarrayLengthEqual,\n\tarrayLengthGreaterThan,\n\tarrayLengthGreaterThanOrEqual,\n\tarrayLengthLessThan,\n\tarrayLengthLessThanOrEqual,\n\tarrayLengthNotEqual,\n\tarrayLengthRange,\n\tarrayLengthRangeExclusive,\n\tarrayLengthRangeInclusive,\n\tuniqueArray\n} from '../constraints/ArrayConstraints';\nimport type { IConstraint } from '../constraints/base/IConstraint';\nimport type { BaseError } from '../lib/errors/BaseError';\nimport { CombinedPropertyError } from '../lib/errors/CombinedPropertyError';\nimport { ValidationError } from '../lib/errors/ValidationError';\nimport { Result } from '../lib/Result';\nimport type { ExpandSmallerTuples, Tuple, UnshiftTuple, ValidatorOptions } from '../lib/util-types';\nimport { BaseValidator } from './imports';\n\nexport class ArrayValidator<T extends unknown[], I = T[number]> extends BaseValidator<T> {\n\tprivate readonly validator: BaseValidator<I>;\n\n\tpublic constructor(validator: BaseValidator<I>, validatorOptions: ValidatorOptions = {}, constraints: readonly IConstraint<T>[] = []) {\n\t\tsuper(validatorOptions, constraints);\n\t\tthis.validator = validator;\n\t}\n\n\tpublic lengthLessThan<N extends number>(\n\t\tlength: N,\n\t\toptions: ValidatorOptions = this.validatorOptions\n\t): ArrayValidator<ExpandSmallerTuples<UnshiftTuple<[...Tuple<I, N>]>>> {\n\t\treturn this.addConstraint(arrayLengthLessThan(length, options) as IConstraint<T>) as any;\n\t}\n\n\tpublic lengthLessThanOrEqual<N extends number>(\n\t\tlength: N,\n\t\toptions: ValidatorOptions = this.validatorOptions\n\t): ArrayValidator<ExpandSmallerTuples<[...Tuple<I, N>]>> {\n\t\treturn this.addConstraint(arrayLengthLessThanOrEqual(length, options) as IConstraint<T>) as any;\n\t}\n\n\tpublic lengthGreaterThan<N extends number>(\n\t\tlength: N,\n\t\toptions: ValidatorOptions = this.validatorOptions\n\t): ArrayValidator<[...Tuple<I, N>, I, ...T]> {\n\t\treturn this.addConstraint(arrayLengthGreaterThan(length, options) as IConstraint<T>) as any;\n\t}\n\n\tpublic lengthGreaterThanOrEqual<N extends number>(\n\t\tlength: N,\n\t\toptions: ValidatorOptions = this.validatorOptions\n\t): ArrayValidator<[...Tuple<I, N>, ...T]> {\n\t\treturn this.addConstraint(arrayLengthGreaterThanOrEqual(length, options) as IConstraint<T>) as any;\n\t}\n\n\tpublic lengthEqual<N extends number>(length: N, options: ValidatorOptions = this.validatorOptions): ArrayValidator<[...Tuple<I, N>]> {\n\t\treturn this.addConstraint(arrayLengthEqual(length, options) as IConstraint<T>) as any;\n\t}\n\n\tpublic lengthNotEqual<N extends number>(length: N, options: ValidatorOptions = this.validatorOptions): ArrayValidator<[...Tuple<I, N>]> {\n\t\treturn this.addConstraint(arrayLengthNotEqual(length, options) as IConstraint<T>) as any;\n\t}\n\n\tpublic lengthRange<S extends number, E extends number>(\n\t\tstart: S,\n\t\tendBefore: E,\n\t\toptions: ValidatorOptions = this.validatorOptions\n\t): ArrayValidator<Exclude<ExpandSmallerTuples<UnshiftTuple<[...Tuple<I, E>]>>, ExpandSmallerTuples<UnshiftTuple<[...Tuple<I, S>]>>>> {\n\t\treturn this.addConstraint(arrayLengthRange(start, endBefore, options) as IConstraint<T>) as any;\n\t}\n\n\tpublic lengthRangeInclusive<S extends number, E extends number>(\n\t\tstartAt: S,\n\t\tendAt: E,\n\t\toptions: ValidatorOptions = this.validatorOptions\n\t): ArrayValidator<Exclude<ExpandSmallerTuples<[...Tuple<I, E>]>, ExpandSmallerTuples<UnshiftTuple<[...Tuple<I, S>]>>>> {\n\t\treturn this.addConstraint(arrayLengthRangeInclusive(startAt, endAt, options) as IConstraint<T>) as any;\n\t}\n\n\tpublic lengthRangeExclusive<S extends number, E extends number>(\n\t\tstartAfter: S,\n\t\tendBefore: E,\n\t\toptions: ValidatorOptions = this.validatorOptions\n\t): ArrayValidator<Exclude<ExpandSmallerTuples<UnshiftTuple<[...Tuple<I, E>]>>, ExpandSmallerTuples<[...Tuple<T, S>]>>> {\n\t\treturn this.addConstraint(arrayLengthRangeExclusive(startAfter, endBefore, options) as IConstraint<T>) as any;\n\t}\n\n\tpublic unique(options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn this.addConstraint(uniqueArray(options) as IConstraint<T>);\n\t}\n\n\tprotected override clone(): this {\n\t\treturn Reflect.construct(this.constructor, [this.validator, this.validatorOptions, this.constraints]);\n\t}\n\n\tprotected handle(values: unknown): Result<T, ValidationError | CombinedPropertyError> {\n\t\tif (!Array.isArray(values)) {\n\t\t\treturn Result.err(new ValidationError('s.array(T)', this.validatorOptions.message ?? 'Expected an array', values));\n\t\t}\n\n\t\tif (!this.shouldRunConstraints) {\n\t\t\treturn Result.ok(values as T);\n\t\t}\n\n\t\tconst errors: [number, BaseError][] = [];\n\t\tconst transformed: T = [] as unknown as T;\n\n\t\tfor (let i = 0; i < values.length; i++) {\n\t\t\tconst result = this.validator.run(values[i]);\n\t\t\tif (result.isOk()) transformed.push(result.value);\n\t\t\telse errors.push([i, result.error!]);\n\t\t}\n\n\t\treturn errors.length === 0 //\n\t\t\t? Result.ok(transformed)\n\t\t\t: Result.err(new CombinedPropertyError(errors, this.validatorOptions));\n\t}\n}\n", "import { ExpectedConstraintError } from '../lib/errors/ExpectedConstraintError';\nimport { Result } from '../lib/Result';\nimport type { ValidatorOptions } from '../lib/util-types';\nimport type { IConstraint } from './base/IConstraint';\nimport { equal, greaterThan, greaterThanOrEqual, lessThan, lessThanOrEqual, notEqual, type Comparator } from './util/operators';\n\nexport type BigIntConstraintName = `s.bigint().${\n\t| 'lessThan'\n\t| 'lessThanOrEqual'\n\t| 'greaterThan'\n\t| 'greaterThanOrEqual'\n\t| 'equal'\n\t| 'notEqual'\n\t| 'divisibleBy'}()`;\n\nfunction bigintComparator(\n\tcomparator: Comparator,\n\tname: BigIntConstraintName,\n\texpected: string,\n\tnumber: bigint,\n\toptions?: ValidatorOptions\n): IConstraint<bigint> {\n\treturn {\n\t\trun(input: bigint) {\n\t\t\treturn comparator(input, number) //\n\t\t\t\t? Result.ok(input)\n\t\t\t\t: Result.err(new ExpectedConstraintError(name, options?.message ?? 'Invalid bigint value', input, expected));\n\t\t}\n\t};\n}\n\nexport function bigintLessThan(value: bigint, options?: ValidatorOptions): IConstraint<bigint> {\n\tconst expected = `expected < ${value}n`;\n\treturn bigintComparator(lessThan, 's.bigint().lessThan()', expected, value, options);\n}\n\nexport function bigintLessThanOrEqual(value: bigint, options?: ValidatorOptions): IConstraint<bigint> {\n\tconst expected = `expected <= ${value}n`;\n\treturn bigintComparator(lessThanOrEqual, 's.bigint().lessThanOrEqual()', expected, value, options);\n}\n\nexport function bigintGreaterThan(value: bigint, options?: ValidatorOptions): IConstraint<bigint> {\n\tconst expected = `expected > ${value}n`;\n\treturn bigintComparator(greaterThan, 's.bigint().greaterThan()', expected, value, options);\n}\n\nexport function bigintGreaterThanOrEqual(value: bigint, options?: ValidatorOptions): IConstraint<bigint> {\n\tconst expected = `expected >= ${value}n`;\n\treturn bigintComparator(greaterThanOrEqual, 's.bigint().greaterThanOrEqual()', expected, value, options);\n}\n\nexport function bigintEqual(value: bigint, options?: ValidatorOptions): IConstraint<bigint> {\n\tconst expected = `expected === ${value}n`;\n\treturn bigintComparator(equal, 's.bigint().equal()', expected, value, options);\n}\n\nexport function bigintNotEqual(value: bigint, options?: ValidatorOptions): IConstraint<bigint> {\n\tconst expected = `expected !== ${value}n`;\n\treturn bigintComparator(notEqual, 's.bigint().notEqual()', expected, value, options);\n}\n\nexport function bigintDivisibleBy(divider: bigint, options?: ValidatorOptions): IConstraint<bigint> {\n\tconst expected = `expected % ${divider}n === 0n`;\n\treturn {\n\t\trun(input: bigint) {\n\t\t\treturn input % divider === 0n //\n\t\t\t\t? Result.ok(input)\n\t\t\t\t: Result.err(new ExpectedConstraintError('s.bigint().divisibleBy()', options?.message ?? 'BigInt is not divisible', input, expected));\n\t\t}\n\t};\n}\n", "import type { IConstraint } from '../constraints/base/IConstraint';\nimport {\n\tbigintDivisibleBy,\n\tbigintEqual,\n\tbigintGreaterThan,\n\tbigintGreaterThanOrEqual,\n\tbigintLessThan,\n\tbigintLessThanOrEqual,\n\tbigintNotEqual\n} from '../constraints/BigIntConstraints';\nimport { ValidationError } from '../lib/errors/ValidationError';\nimport { Result } from '../lib/Result';\nimport type { ValidatorOptions } from '../lib/util-types';\nimport { BaseValidator } from './imports';\n\nexport class BigIntValidator<T extends bigint> extends BaseValidator<T> {\n\tpublic lessThan(number: bigint, options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn this.addConstraint(bigintLessThan(number, options) as IConstraint<T>);\n\t}\n\n\tpublic lessThanOrEqual(number: bigint, options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn this.addConstraint(bigintLessThanOrEqual(number, options) as IConstraint<T>);\n\t}\n\n\tpublic greaterThan(number: bigint, options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn this.addConstraint(bigintGreaterThan(number, options) as IConstraint<T>);\n\t}\n\n\tpublic greaterThanOrEqual(number: bigint, options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn this.addConstraint(bigintGreaterThanOrEqual(number, options) as IConstraint<T>);\n\t}\n\n\tpublic equal<N extends bigint>(number: N, options: ValidatorOptions = this.validatorOptions): BigIntValidator<N> {\n\t\treturn this.addConstraint(bigintEqual(number, options) as IConstraint<T>) as unknown as BigIntValidator<N>;\n\t}\n\n\tpublic notEqual(number: bigint, options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn this.addConstraint(bigintNotEqual(number, options) as IConstraint<T>);\n\t}\n\n\tpublic positive(options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn this.greaterThanOrEqual(0n, options);\n\t}\n\n\tpublic negative(options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn this.lessThan(0n, options);\n\t}\n\n\tpublic divisibleBy(number: bigint, options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn this.addConstraint(bigintDivisibleBy(number, options) as IConstraint<T>);\n\t}\n\n\tpublic abs(options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn this.transform((value) => (value < 0 ? -value : value) as T, options);\n\t}\n\n\tpublic intN(bits: number, options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn this.transform((value) => BigInt.asIntN(bits, value) as T, options);\n\t}\n\n\tpublic uintN(bits: number, options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn this.transform((value) => BigInt.asUintN(bits, value) as T, options);\n\t}\n\n\tprotected handle(value: unknown): Result<T, ValidationError> {\n\t\treturn typeof value === 'bigint' //\n\t\t\t? Result.ok(value as T)\n\t\t\t: Result.err(new ValidationError('s.bigint()', this.validatorOptions.message ?? 'Expected a bigint primitive', value));\n\t}\n}\n", "import { ExpectedConstraintError } from '../lib/errors/ExpectedConstraintError';\nimport { Result } from '../lib/Result';\nimport type { ValidatorOptions } from '../lib/util-types';\nimport type { IConstraint } from './base/IConstraint';\n\nexport type BooleanConstraintName = `s.boolean().${boolean}()`;\n\nexport function booleanTrue(options?: ValidatorOptions): IConstraint<boolean, true> {\n\treturn {\n\t\trun(input: boolean) {\n\t\t\treturn input //\n\t\t\t\t? Result.ok(input)\n\t\t\t\t: Result.err(new ExpectedConstraintError('s.boolean().true()', options?.message ?? 'Invalid boolean value', input, 'true'));\n\t\t}\n\t};\n}\n\nexport function booleanFalse(options?: ValidatorOptions): IConstraint<boolean, false> {\n\treturn {\n\t\trun(input: boolean) {\n\t\t\treturn input //\n\t\t\t\t? Result.err(new ExpectedConstraintError('s.boolean().false()', options?.message ?? 'Invalid boolean value', input, 'false'))\n\t\t\t\t: Result.ok(input);\n\t\t}\n\t};\n}\n", "import type { IConstraint } from '../constraints/base/IConstraint';\nimport { booleanFalse, booleanTrue } from '../constraints/BooleanConstraints';\nimport { ValidationError } from '../lib/errors/ValidationError';\nimport { Result } from '../lib/Result';\nimport type { ValidatorOptions } from '../lib/util-types';\nimport { BaseValidator } from './imports';\n\nexport class BooleanValidator<T extends boolean = boolean> extends BaseValidator<T> {\n\tpublic true(options: ValidatorOptions = this.validatorOptions): BooleanValidator<true> {\n\t\treturn this.addConstraint(booleanTrue(options) as IConstraint<T>) as BooleanValidator<true>;\n\t}\n\n\tpublic false(options: ValidatorOptions = this.validatorOptions): BooleanValidator<false> {\n\t\treturn this.addConstraint(booleanFalse(options) as IConstraint<T>) as BooleanValidator<false>;\n\t}\n\n\tpublic equal<R extends true | false>(value: R, options: ValidatorOptions = this.validatorOptions): BooleanValidator<R> {\n\t\treturn (value ? this.true(options) : this.false(options)) as BooleanValidator<R>;\n\t}\n\n\tpublic notEqual<R extends true | false>(value: R, options: ValidatorOptions = this.validatorOptions): BooleanValidator<R> {\n\t\treturn (value ? this.false(options) : this.true(options)) as BooleanValidator<R>;\n\t}\n\n\tprotected handle(value: unknown): Result<T, ValidationError> {\n\t\treturn typeof value === 'boolean' //\n\t\t\t? Result.ok(value as T)\n\t\t\t: Result.err(new ValidationError('s.boolean()', this.validatorOptions.message ?? 'Expected a boolean primitive', value));\n\t}\n}\n", "import { ExpectedConstraintError } from '../lib/errors/ExpectedConstraintError';\nimport { Result } from '../lib/Result';\nimport type { ValidatorOptions } from '../lib/util-types';\nimport type { IConstraint } from './base/IConstraint';\nimport { equal, greaterThan, greaterThanOrEqual, lessThan, lessThanOrEqual, notEqual, type Comparator } from './util/operators';\n\nexport type DateConstraintName = `s.date().${\n\t| 'lessThan'\n\t| 'lessThanOrEqual'\n\t| 'greaterThan'\n\t| 'greaterThanOrEqual'\n\t| 'equal'\n\t| 'notEqual'\n\t| 'valid'\n\t| 'invalid'}()`;\n\nfunction dateComparator(\n\tcomparator: Comparator,\n\tname: DateConstraintName,\n\texpected: string,\n\tnumber: number,\n\toptions?: ValidatorOptions\n): IConstraint<Date> {\n\treturn {\n\t\trun(input: Date) {\n\t\t\treturn comparator(input.getTime(), number) //\n\t\t\t\t? Result.ok(input)\n\t\t\t\t: Result.err(new ExpectedConstraintError(name, options?.message ?? 'Invalid Date value', input, expected));\n\t\t}\n\t};\n}\n\nexport function dateLessThan(value: Date, options?: ValidatorOptions): IConstraint<Date> {\n\tconst expected = `expected < ${value.toISOString()}`;\n\treturn dateComparator(lessThan, 's.date().lessThan()', expected, value.getTime(), options);\n}\n\nexport function dateLessThanOrEqual(value: Date, options?: ValidatorOptions): IConstraint<Date> {\n\tconst expected = `expected <= ${value.toISOString()}`;\n\treturn dateComparator(lessThanOrEqual, 's.date().lessThanOrEqual()', expected, value.getTime(), options);\n}\n\nexport function dateGreaterThan(value: Date, options?: ValidatorOptions): IConstraint<Date> {\n\tconst expected = `expected > ${value.toISOString()}`;\n\treturn dateComparator(greaterThan, 's.date().greaterThan()', expected, value.getTime(), options);\n}\n\nexport function dateGreaterThanOrEqual(value: Date, options?: ValidatorOptions): IConstraint<Date> {\n\tconst expected = `expected >= ${value.toISOString()}`;\n\treturn dateComparator(greaterThanOrEqual, 's.date().greaterThanOrEqual()', expected, value.getTime(), options);\n}\n\nexport function dateEqual(value: Date, options?: ValidatorOptions): IConstraint<Date> {\n\tconst expected = `expected === ${value.toISOString()}`;\n\treturn dateComparator(equal, 's.date().equal()', expected, value.getTime(), options);\n}\n\nexport function dateNotEqual(value: Date, options?: ValidatorOptions): IConstraint<Date> {\n\tconst expected = `expected !== ${value.toISOString()}`;\n\treturn dateComparator(notEqual, 's.date().notEqual()', expected, value.getTime(), options);\n}\n\nexport function dateInvalid(options?: ValidatorOptions): IConstraint<Date> {\n\treturn {\n\t\trun(input: Date) {\n\t\t\treturn Number.isNaN(input.getTime()) //\n\t\t\t\t? Result.ok(input)\n\t\t\t\t: Result.err(new ExpectedConstraintError('s.date().invalid()', options?.message ?? 'Invalid Date value', input, 'expected === NaN'));\n\t\t}\n\t};\n}\n\nexport function dateValid(options?: ValidatorOptions): IConstraint<Date> {\n\treturn {\n\t\trun(input: Date) {\n\t\t\treturn Number.isNaN(input.getTime()) //\n\t\t\t\t? Result.err(new ExpectedConstraintError('s.date().valid()', options?.message ?? 'Invalid Date value', input, 'expected !== NaN'))\n\t\t\t\t: Result.ok(input);\n\t\t}\n\t};\n}\n", "import {\n\tdateEqual,\n\tdateGreaterThan,\n\tdateGreaterThanOrEqual,\n\tdateInvalid,\n\tdateLessThan,\n\tdateLessThanOrEqual,\n\tdateNotEqual,\n\tdateValid\n} from '../constraints/DateConstraints';\nimport { ValidationError } from '../lib/errors/ValidationError';\nimport { Result } from '../lib/Result';\nimport type { ValidatorOptions } from '../lib/util-types';\nimport { BaseValidator } from './imports';\n\nexport class DateValidator extends BaseValidator<Date> {\n\tpublic lessThan(date: Date | number | string, options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn this.addConstraint(dateLessThan(new Date(date), options));\n\t}\n\n\tpublic lessThanOrEqual(date: Date | number | string, options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn this.addConstraint(dateLessThanOrEqual(new Date(date), options));\n\t}\n\n\tpublic greaterThan(date: Date | number | string, options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn this.addConstraint(dateGreaterThan(new Date(date), options));\n\t}\n\n\tpublic greaterThanOrEqual(date: Date | number | string, options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn this.addConstraint(dateGreaterThanOrEqual(new Date(date), options));\n\t}\n\n\tpublic equal(date: Date | number | string, options: ValidatorOptions = this.validatorOptions): this {\n\t\tconst resolved = new Date(date);\n\t\treturn Number.isNaN(resolved.getTime()) //\n\t\t\t? this.invalid(options)\n\t\t\t: this.addConstraint(dateEqual(resolved, options));\n\t}\n\n\tpublic notEqual(date: Date | number | string, options: ValidatorOptions = this.validatorOptions): this {\n\t\tconst resolved = new Date(date);\n\t\treturn Number.isNaN(resolved.getTime()) //\n\t\t\t? this.valid(options)\n\t\t\t: this.addConstraint(dateNotEqual(resolved, options));\n\t}\n\n\tpublic valid(options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn this.addConstraint(dateValid(options));\n\t}\n\n\tpublic invalid(options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn this.addConstraint(dateInvalid(options));\n\t}\n\n\tprotected handle(value: unknown): Result<Date, ValidationError> {\n\t\treturn value instanceof Date //\n\t\t\t? Result.ok(value)\n\t\t\t: Result.err(new ValidationError('s.date()', this.validatorOptions.message ?? 'Expected a Date', value));\n\t}\n}\n", "import { inspect, type InspectOptionsStylized } from 'util';\nimport { customInspectSymbolStackLess } from './BaseError';\nimport type { ExpectedValidationErrorJsonified } from './error-types';\nimport { ValidationError } from './ValidationError';\n\nexport class ExpectedValidationError<T> extends ValidationError {\n\tpublic readonly expected: T;\n\n\tpublic constructor(validator: string, message: string, given: unknown, expected: T) {\n\t\tsuper(validator, message, given);\n\t\tthis.expected = expected;\n\t}\n\n\tpublic override toJSON(): ExpectedValidationErrorJsonified<T> {\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tvalidator: this.validator,\n\t\t\tgiven: this.given,\n\t\t\texpected: this.expected,\n\t\t\tmessage: this.message\n\t\t};\n\t}\n\n\tprotected [customInspectSymbolStackLess](depth: number, options: InspectOptionsStylized): string {\n\t\tconst validator = options.stylize(this.validator, 'string');\n\t\tif (depth < 0) {\n\t\t\treturn options.stylize(`[ExpectedValidationError: ${validator}]`, 'special');\n\t\t}\n\n\t\tconst newOptions = { ...options, depth: options.depth === null ? null : options.depth! - 1 };\n\n\t\tconst padding = `\\n  ${options.stylize('|', 'undefined')} `;\n\t\tconst expected = inspect(this.expected, newOptions).replace(/\\n/g, padding);\n\t\tconst given = inspect(this.given, newOptions).replace(/\\n/g, padding);\n\n\t\tconst header = `${options.stylize('ExpectedValidationError', 'special')} > ${validator}`;\n\t\tconst message = options.stylize(this.message, 'regexp');\n\t\tconst expectedBlock = `\\n  ${options.stylize('Expected:', 'string')}${padding}${expected}`;\n\t\tconst givenBlock = `\\n  ${options.stylize('Received:', 'regexp')}${padding}${given}`;\n\t\treturn `${header}\\n  ${message}\\n${expectedBlock}\\n${givenBlock}`;\n\t}\n}\n", "import type { IConstraint } from '../constraints/base/IConstraint';\nimport { ExpectedValidationError } from '../lib/errors/ExpectedValidationError';\nimport { Result } from '../lib/Result';\nimport type { Constructor, ValidatorOptions } from '../lib/util-types';\nimport { BaseValidator } from './imports';\n\nexport class InstanceValidator<T> extends BaseValidator<T> {\n\tpublic readonly expected: Constructor<T>;\n\n\tpublic constructor(expected: Constructor<T>, validatorOptions: ValidatorOptions = {}, constraints: readonly IConstraint<T>[] = []) {\n\t\tsuper(validatorOptions, constraints);\n\t\tthis.expected = expected;\n\t}\n\n\tprotected handle(value: unknown): Result<T, ExpectedValidationError<Constructor<T>>> {\n\t\treturn value instanceof this.expected //\n\t\t\t? Result.ok(value)\n\t\t\t: Result.err(new ExpectedValidationError('s.instance(V)', this.validatorOptions.message ?? 'Expected', value, this.expected));\n\t}\n\n\tprotected override clone(): this {\n\t\treturn Reflect.construct(this.constructor, [this.expected, this.validatorOptions, this.constraints]);\n\t}\n}\n", "import type { IConstraint } from '../constraints/base/IConstraint';\nimport { ExpectedValidationError } from '../lib/errors/ExpectedValidationError';\nimport { Result } from '../lib/Result';\nimport type { ValidatorOptions } from '../lib/util-types';\nimport { BaseValidator } from './imports';\n\nexport class LiteralValidator<T> extends BaseValidator<T> {\n\tpublic readonly expected: T;\n\n\tpublic constructor(literal: T, validatorOptions: ValidatorOptions = {}, constraints: readonly IConstraint<T>[] = []) {\n\t\tsuper(validatorOptions, constraints);\n\t\tthis.expected = literal;\n\t}\n\n\tprotected handle(value: unknown): Result<T, ExpectedValidationError<T>> {\n\t\treturn Object.is(value, this.expected) //\n\t\t\t? Result.ok(value as T)\n\t\t\t: Result.err(\n\t\t\t\t\tnew ExpectedValidationError('s.literal(V)', this.validatorOptions.message ?? 'Expected values to be equals', value, this.expected)\n\t\t\t\t);\n\t}\n\n\tprotected override clone(): this {\n\t\treturn Reflect.construct(this.constructor, [this.expected, this.validatorOptions, this.constraints]);\n\t}\n}\n", "import { ValidationError } from '../lib/errors/ValidationError';\nimport { Result } from '../lib/Result';\nimport { BaseValidator } from './imports';\n\nexport class NeverValidator extends BaseValidator<never> {\n\tprotected handle(value: unknown): Result<never, ValidationError> {\n\t\treturn Result.err(new ValidationError('s.never()', this.validatorOptions.message ?? 'Expected a value to not be passed', value));\n\t}\n}\n", "import { ValidationError } from '../lib/errors/ValidationError';\nimport { Result } from '../lib/Result';\nimport { BaseValidator } from './imports';\n\nexport class NullishValidator extends BaseValidator<undefined | null> {\n\tprotected handle(value: unknown): Result<undefined | null, ValidationError> {\n\t\treturn value === undefined || value === null //\n\t\t\t? Result.ok(value)\n\t\t\t: Result.err(new ValidationError('s.nullish()', this.validatorOptions.message ?? 'Expected undefined or null', value));\n\t}\n}\n", "import { ExpectedConstraintError } from '../lib/errors/ExpectedConstraintError';\nimport { Result } from '../lib/Result';\nimport type { ValidatorOptions } from '../lib/util-types';\n\nimport type { IConstraint } from './base/IConstraint';\nimport { equal, greaterThan, greaterThanOrEqual, lessThan, lessThanOrEqual, notEqual, type Comparator } from './util/operators';\n\nexport type NumberConstraintName = `s.number().${\n\t| 'lessThan'\n\t| 'lessThanOrEqual'\n\t| 'greaterThan'\n\t| 'greaterThanOrEqual'\n\t| 'equal'\n\t| 'equal'\n\t| 'notEqual'\n\t| 'notEqual'\n\t| 'int'\n\t| 'safeInt'\n\t| 'finite'\n\t| 'divisibleBy'}(${string})`;\n\nfunction numberComparator(\n\tcomparator: Comparator,\n\tname: NumberConstraintName,\n\texpected: string,\n\tnumber: number,\n\toptions?: ValidatorOptions\n): IConstraint<number> {\n\treturn {\n\t\trun(input: number) {\n\t\t\treturn comparator(input, number) //\n\t\t\t\t? Result.ok(input)\n\t\t\t\t: Result.err(new ExpectedConstraintError(name, options?.message ?? 'Invalid number value', input, expected));\n\t\t}\n\t};\n}\n\nexport function numberLessThan(value: number, options?: ValidatorOptions): IConstraint<number> {\n\tconst expected = `expected < ${value}`;\n\treturn numberComparator(lessThan, 's.number().lessThan()', expected, value, options);\n}\n\nexport function numberLessThanOrEqual(value: number, options?: ValidatorOptions): IConstraint<number> {\n\tconst expected = `expected <= ${value}`;\n\treturn numberComparator(lessThanOrEqual, 's.number().lessThanOrEqual()', expected, value, options);\n}\n\nexport function numberGreaterThan(value: number, options?: ValidatorOptions): IConstraint<number> {\n\tconst expected = `expected > ${value}`;\n\treturn numberComparator(greaterThan, 's.number().greaterThan()', expected, value, options);\n}\n\nexport function numberGreaterThanOrEqual(value: number, options?: ValidatorOptions): IConstraint<number> {\n\tconst expected = `expected >= ${value}`;\n\treturn numberComparator(greaterThanOrEqual, 's.number().greaterThanOrEqual()', expected, value, options);\n}\n\nexport function numberEqual(value: number, options?: ValidatorOptions): IConstraint<number> {\n\tconst expected = `expected === ${value}`;\n\treturn numberComparator(equal, 's.number().equal()', expected, value, options);\n}\n\nexport function numberNotEqual(value: number, options?: ValidatorOptions): IConstraint<number> {\n\tconst expected = `expected !== ${value}`;\n\treturn numberComparator(notEqual, 's.number().notEqual()', expected, value, options);\n}\n\nexport function numberInt(options?: ValidatorOptions): IConstraint<number> {\n\treturn {\n\t\trun(input: number) {\n\t\t\treturn Number.isInteger(input) //\n\t\t\t\t? Result.ok(input)\n\t\t\t\t: Result.err(\n\t\t\t\t\t\tnew ExpectedConstraintError(\n\t\t\t\t\t\t\t's.number().int()',\n\t\t\t\t\t\t\toptions?.message ?? 'Given value is not an integer',\n\t\t\t\t\t\t\tinput,\n\t\t\t\t\t\t\t'Number.isInteger(expected) to be true'\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t}\n\t};\n}\n\nexport function numberSafeInt(options?: ValidatorOptions): IConstraint<number> {\n\treturn {\n\t\trun(input: number) {\n\t\t\treturn Number.isSafeInteger(input) //\n\t\t\t\t? Result.ok(input)\n\t\t\t\t: Result.err(\n\t\t\t\t\t\tnew ExpectedConstraintError(\n\t\t\t\t\t\t\t's.number().safeInt()',\n\t\t\t\t\t\t\toptions?.message ?? 'Given value is not a safe integer',\n\t\t\t\t\t\t\tinput,\n\t\t\t\t\t\t\t'Number.isSafeInteger(expected) to be true'\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t}\n\t};\n}\n\nexport function numberFinite(options?: ValidatorOptions): IConstraint<number> {\n\treturn {\n\t\trun(input: number) {\n\t\t\treturn Number.isFinite(input) //\n\t\t\t\t? Result.ok(input)\n\t\t\t\t: Result.err(\n\t\t\t\t\t\tnew ExpectedConstraintError(\n\t\t\t\t\t\t\t's.number().finite()',\n\t\t\t\t\t\t\toptions?.message ?? 'Given value is not finite',\n\t\t\t\t\t\t\tinput,\n\t\t\t\t\t\t\t'Number.isFinite(expected) to be true'\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t}\n\t};\n}\n\nexport function numberNaN(options?: ValidatorOptions): IConstraint<number> {\n\treturn {\n\t\trun(input: number) {\n\t\t\treturn Number.isNaN(input) //\n\t\t\t\t? Result.ok(input)\n\t\t\t\t: Result.err(\n\t\t\t\t\t\tnew ExpectedConstraintError('s.number().equal(NaN)', options?.message ?? 'Invalid number value', input, 'expected === NaN')\n\t\t\t\t\t);\n\t\t}\n\t};\n}\n\nexport function numberNotNaN(options?: ValidatorOptions): IConstraint<number> {\n\treturn {\n\t\trun(input: number) {\n\t\t\treturn Number.isNaN(input) //\n\t\t\t\t? Result.err(\n\t\t\t\t\t\tnew ExpectedConstraintError('s.number().notEqual(NaN)', options?.message ?? 'Invalid number value', input, 'expected !== NaN')\n\t\t\t\t\t)\n\t\t\t\t: Result.ok(input);\n\t\t}\n\t};\n}\n\nexport function numberDivisibleBy(divider: number, options?: ValidatorOptions): IConstraint<number> {\n\tconst expected = `expected % ${divider} === 0`;\n\treturn {\n\t\trun(input: number) {\n\t\t\treturn input % divider === 0 //\n\t\t\t\t? Result.ok(input)\n\t\t\t\t: Result.err(new ExpectedConstraintError('s.number().divisibleBy()', options?.message ?? 'Number is not divisible', input, expected));\n\t\t}\n\t};\n}\n", "import type { IConstraint } from '../constraints/base/IConstraint';\nimport {\n\tnumberDivisibleBy,\n\tnumberEqual,\n\tnumberFinite,\n\tnumberGreaterThan,\n\tnumberGreaterThanOrEqual,\n\tnumberInt,\n\tnumberLessThan,\n\tnumberLessThanOrEqual,\n\tnumberNaN,\n\tnumberNotEqual,\n\tnumberNotNaN,\n\tnumberSafeInt\n} from '../constraints/NumberConstraints';\nimport { ValidationError } from '../lib/errors/ValidationError';\nimport { Result } from '../lib/Result';\nimport type { ValidatorOptions } from '../lib/util-types';\nimport { BaseValidator } from './imports';\n\nexport class NumberValidator<T extends number> extends BaseValidator<T> {\n\tpublic lessThan(number: number, options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn this.addConstraint(numberLessThan(number, options) as IConstraint<T>);\n\t}\n\n\tpublic lessThanOrEqual(number: number, options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn this.addConstraint(numberLessThanOrEqual(number, options) as IConstraint<T>);\n\t}\n\n\tpublic greaterThan(number: number, options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn this.addConstraint(numberGreaterThan(number, options) as IConstraint<T>);\n\t}\n\n\tpublic greaterThanOrEqual(number: number, options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn this.addConstraint(numberGreaterThanOrEqual(number, options) as IConstraint<T>);\n\t}\n\n\tpublic equal<N extends number>(number: N, options: ValidatorOptions = this.validatorOptions): NumberValidator<N> {\n\t\treturn Number.isNaN(number) //\n\t\t\t? (this.addConstraint(numberNaN(options) as IConstraint<T>) as unknown as NumberValidator<N>)\n\t\t\t: (this.addConstraint(numberEqual(number, options) as IConstraint<T>) as unknown as NumberValidator<N>);\n\t}\n\n\tpublic notEqual(number: number, options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn Number.isNaN(number) //\n\t\t\t? this.addConstraint(numberNotNaN(options) as IConstraint<T>)\n\t\t\t: this.addConstraint(numberNotEqual(number, options) as IConstraint<T>);\n\t}\n\n\tpublic int(options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn this.addConstraint(numberInt(options) as IConstraint<T>);\n\t}\n\n\tpublic safeInt(options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn this.addConstraint(numberSafeInt(options) as IConstraint<T>);\n\t}\n\n\tpublic finite(options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn this.addConstraint(numberFinite(options) as IConstraint<T>);\n\t}\n\n\tpublic positive(options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn this.greaterThanOrEqual(0, options);\n\t}\n\n\tpublic negative(options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn this.lessThan(0, options);\n\t}\n\n\tpublic divisibleBy(divider: number, options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn this.addConstraint(numberDivisibleBy(divider, options) as IConstraint<T>);\n\t}\n\n\tpublic abs(options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn this.transform(Math.abs as (value: number) => T, options);\n\t}\n\n\tpublic sign(options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn this.transform(Math.sign as (value: number) => T, options);\n\t}\n\n\tpublic trunc(options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn this.transform(Math.trunc as (value: number) => T, options);\n\t}\n\n\tpublic floor(options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn this.transform(Math.floor as (value: number) => T, options);\n\t}\n\n\tpublic fround(options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn this.transform(Math.fround as (value: number) => T, options);\n\t}\n\n\tpublic round(options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn this.transform(Math.round as (value: number) => T, options);\n\t}\n\n\tpublic ceil(options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn this.transform(Math.ceil as (value: number) => T, options);\n\t}\n\n\tprotected handle(value: unknown): Result<T, ValidationError> {\n\t\treturn typeof value === 'number' //\n\t\t\t? Result.ok(value as T)\n\t\t\t: Result.err(new ValidationError('s.number()', this.validatorOptions.message ?? 'Expected a number primitive', value));\n\t}\n}\n", "import type { InspectOptionsStylized } from 'util';\nimport type { ValidatorOptions } from '../util-types';\nimport { BaseError, customInspectSymbolStackLess } from './BaseError';\nimport type { MissingPropertyErrorJsonified } from './error-types';\n\nexport class MissingPropertyError extends BaseError {\n\tpublic readonly property: PropertyKey;\n\n\tpublic constructor(property: PropertyKey, validatorOptions?: ValidatorOptions) {\n\t\tsuper(validatorOptions?.message ?? 'A required property is missing');\n\t\tthis.property = property;\n\t}\n\n\tpublic override toJSON(): MissingPropertyErrorJsonified {\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tmessage: this.message,\n\t\t\tproperty: this.property\n\t\t};\n\t}\n\n\tprotected [customInspectSymbolStackLess](depth: number, options: InspectOptionsStylized): string {\n\t\tconst property = options.stylize(this.property.toString(), 'string');\n\t\tif (depth < 0) {\n\t\t\treturn options.stylize(`[MissingPropertyError: ${property}]`, 'special');\n\t\t}\n\n\t\tconst header = `${options.stylize('MissingPropertyError', 'special')} > ${property}`;\n\t\tconst message = options.stylize(this.message, 'regexp');\n\t\treturn `${header}\\n  ${message}`;\n\t}\n}\n", "import { inspect, type InspectOptionsStylized } from 'util';\nimport type { ValidatorOptions } from '../util-types';\nimport { BaseError, customInspectSymbolStackLess } from './BaseError';\nimport type { UnknownEnumKeyErrorJsonified } from './error-types';\n\nexport class UnknownPropertyError extends BaseError {\n\tpublic readonly property: PropertyKey;\n\tpublic readonly value: unknown;\n\n\tpublic constructor(property: PropertyKey, value: unknown, options?: ValidatorOptions) {\n\t\tsuper(options?.message ?? 'Received unexpected property');\n\n\t\tthis.property = property;\n\t\tthis.value = value;\n\t}\n\n\tpublic override toJSON(): UnknownEnumKeyErrorJsonified {\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tmessage: this.message,\n\t\t\tproperty: this.property,\n\t\t\tvalue: this.value\n\t\t};\n\t}\n\n\tprotected [customInspectSymbolStackLess](depth: number, options: InspectOptionsStylized): string {\n\t\tconst property = options.stylize(this.property.toString(), 'string');\n\t\tif (depth < 0) {\n\t\t\treturn options.stylize(`[UnknownPropertyError: ${property}]`, 'special');\n\t\t}\n\n\t\tconst newOptions = { ...options, depth: options.depth === null ? null : options.depth! - 1, compact: true };\n\n\t\tconst padding = `\\n  ${options.stylize('|', 'undefined')} `;\n\t\tconst given = inspect(this.value, newOptions).replace(/\\n/g, padding);\n\n\t\tconst header = `${options.stylize('UnknownPropertyError', 'special')} > ${property}`;\n\t\tconst message = options.stylize(this.message, 'regexp');\n\t\tconst givenBlock = `\\n  ${options.stylize('Received:', 'regexp')}${padding}${given}`;\n\t\treturn `${header}\\n  ${message}\\n${givenBlock}`;\n\t}\n}\n", "import type { IConstraint } from '../constraints/base/IConstraint';\nimport { Result } from '../lib/Result';\nimport type { ValidatorOptions } from '../lib/util-types';\nimport type { ValidatorError } from './BaseValidator';\nimport { BaseValidator } from './imports';\nimport { getValue } from './util/getValue';\n\nexport class DefaultValidator<T> extends BaseValidator<T> {\n\tprivate readonly validator: BaseValidator<T>;\n\tprivate defaultValue: T | (() => T);\n\n\tpublic constructor(\n\t\tvalidator: BaseValidator<T>,\n\t\tvalue: T | (() => T),\n\t\tvalidatorOptions: ValidatorOptions = {},\n\t\tconstraints: readonly IConstraint<T>[] = []\n\t) {\n\t\tsuper(validatorOptions, constraints);\n\t\tthis.validator = validator;\n\t\tthis.defaultValue = value;\n\t}\n\n\tpublic override default(\n\t\tvalue: Exclude<T, undefined> | (() => Exclude<T, undefined>),\n\t\toptions = this.validatorOptions\n\t): DefaultValidator<Exclude<T, undefined>> {\n\t\tconst clone = this.clone() as unknown as DefaultValidator<Exclude<T, undefined>>;\n\t\tclone.validatorOptions = options;\n\t\tclone.defaultValue = value;\n\t\treturn clone;\n\t}\n\n\tprotected handle(value: unknown): Result<T, ValidatorError> {\n\t\treturn typeof value === 'undefined' //\n\t\t\t? Result.ok(getValue(this.defaultValue))\n\t\t\t: this.validator['handle'](value); // eslint-disable-line @typescript-eslint/dot-notation\n\t}\n\n\tprotected override clone(): this {\n\t\treturn Reflect.construct(this.constructor, [this.validator, this.defaultValue, this.validatorOptions, this.constraints]);\n\t}\n}\n", "import type { InspectOptionsStylized } from 'util';\nimport type { ValidatorOptions } from '../util-types';\nimport { BaseError, customInspectSymbolStackLess } from './BaseError';\n\nexport class CombinedError extends BaseError {\n\tpublic readonly errors: readonly BaseError[];\n\n\tpublic constructor(errors: readonly BaseError[], validatorOptions?: ValidatorOptions) {\n\t\tsuper(validatorOptions?.message ?? 'Received one or more errors');\n\n\t\tthis.errors = errors;\n\t}\n\n\tprotected [customInspectSymbolStackLess](depth: number, options: InspectOptionsStylized): string {\n\t\tif (depth < 0) {\n\t\t\treturn options.stylize('[CombinedError]', 'special');\n\t\t}\n\n\t\tconst newOptions = { ...options, depth: options.depth === null ? null : options.depth! - 1, compact: true };\n\n\t\tconst padding = `\\n  ${options.stylize('|', 'undefined')} `;\n\n\t\tconst header = `${options.stylize('CombinedError', 'special')} (${options.stylize(this.errors.length.toString(), 'number')})`;\n\t\tconst message = options.stylize(this.message, 'regexp');\n\t\tconst errors = this.errors\n\t\t\t.map((error, i) => {\n\t\t\t\tconst index = options.stylize((i + 1).toString(), 'number');\n\t\t\t\tconst body = error[customInspectSymbolStackLess](depth - 1, newOptions).replace(/\\n/g, padding);\n\n\t\t\t\treturn `  ${index} ${body}`;\n\t\t\t})\n\t\t\t.join('\\n\\n');\n\t\treturn `${header}\\n  ${message}\\n\\n${errors}`;\n\t}\n}\n", "import type { IConstraint } from '../constraints/base/IConstraint';\nimport type { BaseError } from '../lib/errors/BaseError';\nimport { CombinedError } from '../lib/errors/CombinedError';\nimport type { ValidationError } from '../lib/errors/ValidationError';\nimport { Result } from '../lib/Result';\nimport type { ValidatorOptions } from '../lib/util-types';\nimport { BaseValidator, LiteralValidator, NullishValidator } from './imports';\n\nexport class UnionValidator<T> extends BaseValidator<T> {\n\tprivate validators: readonly BaseValidator<T>[];\n\n\tpublic constructor(validators: readonly BaseValidator<T>[], validatorOptions?: ValidatorOptions, constraints: readonly IConstraint<T>[] = []) {\n\t\tsuper(validatorOptions, constraints);\n\t\tthis.validators = validators;\n\t}\n\n\tpublic override optional(options: ValidatorOptions = this.validatorOptions): UnionValidator<T | undefined> {\n\t\tif (this.validators.length === 0)\n\t\t\treturn new UnionValidator<T | undefined>([new LiteralValidator(undefined, options)], this.validatorOptions, this.constraints);\n\n\t\tconst [validator] = this.validators;\n\t\tif (validator instanceof LiteralValidator) {\n\t\t\t// If already optional, return a clone:\n\t\t\tif (validator.expected === undefined) return this.clone();\n\n\t\t\t// If it's nullable, convert the nullable validator into a nullish validator to optimize `null | undefined`:\n\t\t\tif (validator.expected === null) {\n\t\t\t\treturn new UnionValidator<T | null | undefined>(\n\t\t\t\t\t[new NullishValidator(options), ...this.validators.slice(1)],\n\t\t\t\t\tthis.validatorOptions,\n\t\t\t\t\tthis.constraints\n\t\t\t\t) as UnionValidator<T | undefined>;\n\t\t\t}\n\t\t} else if (validator instanceof NullishValidator) {\n\t\t\t// If it's already nullish (which validates optional), return a clone:\n\t\t\treturn this.clone();\n\t\t}\n\n\t\treturn new UnionValidator([new LiteralValidator(undefined, options), ...this.validators], this.validatorOptions);\n\t}\n\n\tpublic required(options: ValidatorOptions = this.validatorOptions): UnionValidator<Exclude<T, undefined>> {\n\t\ttype RequiredValidator = UnionValidator<Exclude<T, undefined>>;\n\n\t\tif (this.validators.length === 0) return this.clone() as unknown as RequiredValidator;\n\n\t\tconst [validator] = this.validators;\n\t\tif (validator instanceof LiteralValidator) {\n\t\t\tif (validator.expected === undefined) {\n\t\t\t\treturn new UnionValidator(this.validators.slice(1), this.validatorOptions, this.constraints) as RequiredValidator;\n\t\t\t}\n\t\t} else if (validator instanceof NullishValidator) {\n\t\t\treturn new UnionValidator(\n\t\t\t\t[new LiteralValidator(null, options), ...this.validators.slice(1)],\n\t\t\t\tthis.validatorOptions,\n\t\t\t\tthis.constraints\n\t\t\t) as RequiredValidator;\n\t\t}\n\n\t\treturn this.clone() as unknown as RequiredValidator;\n\t}\n\n\tpublic override nullable(options: ValidatorOptions = this.validatorOptions): UnionValidator<T | null> {\n\t\tif (this.validators.length === 0) {\n\t\t\treturn new UnionValidator<T | null>([new LiteralValidator(null, options)], this.validatorOptions, this.constraints);\n\t\t}\n\n\t\tconst [validator] = this.validators;\n\t\tif (validator instanceof LiteralValidator) {\n\t\t\t// If already nullable, return a clone:\n\t\t\tif (validator.expected === null) return this.clone();\n\n\t\t\t// If it's optional, convert the optional validator into a nullish validator to optimize `null | undefined`:\n\t\t\tif (validator.expected === undefined) {\n\t\t\t\treturn new UnionValidator<T | null | undefined>(\n\t\t\t\t\t[new NullishValidator(options), ...this.validators.slice(1)],\n\t\t\t\t\tthis.validatorOptions,\n\t\t\t\t\tthis.constraints\n\t\t\t\t) as UnionValidator<T | null>;\n\t\t\t}\n\t\t} else if (validator instanceof NullishValidator) {\n\t\t\t// If it's already nullish (which validates nullable), return a clone:\n\t\t\treturn this.clone();\n\t\t}\n\n\t\treturn new UnionValidator([new LiteralValidator(null, options), ...this.validators], this.validatorOptions);\n\t}\n\n\tpublic override nullish(options: ValidatorOptions = this.validatorOptions): UnionValidator<T | null | undefined> {\n\t\tif (this.validators.length === 0) {\n\t\t\treturn new UnionValidator<T | null | undefined>([new NullishValidator(options)], options, this.constraints);\n\t\t}\n\n\t\tconst [validator] = this.validators;\n\t\tif (validator instanceof LiteralValidator) {\n\t\t\t// If already nullable or optional, promote the union to nullish:\n\t\t\tif (validator.expected === null || validator.expected === undefined) {\n\t\t\t\treturn new UnionValidator<T | null | undefined>(\n\t\t\t\t\t[new NullishValidator(options), ...this.validators.slice(1)],\n\t\t\t\t\toptions,\n\t\t\t\t\tthis.constraints\n\t\t\t\t);\n\t\t\t}\n\t\t} else if (validator instanceof NullishValidator) {\n\t\t\t// If it's already nullish, return a clone:\n\t\t\treturn this.clone();\n\t\t}\n\n\t\treturn new UnionValidator<T | null | undefined>([new NullishValidator(options), ...this.validators], options);\n\t}\n\n\tpublic override or<O>(...predicates: readonly BaseValidator<O>[]): UnionValidator<T | O> {\n\t\treturn new UnionValidator<T | O>([...this.validators, ...predicates], this.validatorOptions);\n\t}\n\n\tprotected override clone(): this {\n\t\treturn Reflect.construct(this.constructor, [this.validators, this.validatorOptions, this.constraints]);\n\t}\n\n\tprotected handle(value: unknown): Result<T, ValidationError | CombinedError> {\n\t\tconst errors: BaseError[] = [];\n\n\t\tfor (const validator of this.validators) {\n\t\t\tconst result = validator.run(value);\n\t\t\tif (result.isOk()) return result as Result<T, CombinedError>;\n\t\t\terrors.push(result.error!);\n\t\t}\n\n\t\treturn Result.err(new CombinedError(errors, this.validatorOptions));\n\t}\n}\n", "import type { IConstraint } from '../constraints/base/IConstraint';\nimport type { BaseError } from '../lib/errors/BaseError';\nimport { CombinedPropertyError } from '../lib/errors/CombinedPropertyError';\nimport { MissingPropertyError } from '../lib/errors/MissingPropertyError';\nimport { UnknownPropertyError } from '../lib/errors/UnknownPropertyError';\nimport { ValidationError } from '../lib/errors/ValidationError';\nimport { Result } from '../lib/Result';\nimport type { MappedObjectValidator, UndefinedToOptional, ValidatorOptions } from '../lib/util-types';\nimport { BaseValidator } from './BaseValidator';\nimport { DefaultValidator } from './DefaultValidator';\nimport { LiteralValidator } from './LiteralValidator';\nimport { NullishValidator } from './NullishValidator';\nimport { UnionValidator } from './UnionValidator';\n\nexport class ObjectValidator<T extends object, I = UndefinedToOptional<T>> extends BaseValidator<I> {\n\tpublic readonly shape: MappedObjectValidator<T>;\n\tpublic readonly strategy: ObjectValidatorStrategy;\n\tprivate readonly keys: readonly (keyof I)[] = [];\n\tprivate readonly handleStrategy: (value: object) => Result<I, CombinedPropertyError>;\n\n\tprivate readonly requiredKeys = new Map<keyof I, BaseValidator<unknown>>();\n\tprivate readonly possiblyUndefinedKeys = new Map<keyof I, BaseValidator<unknown>>();\n\tprivate readonly possiblyUndefinedKeysWithDefaults = new Map<keyof I, DefaultValidator<unknown>>();\n\n\tpublic constructor(\n\t\tshape: MappedObjectValidator<T>,\n\t\tstrategy: ObjectValidatorStrategy = ObjectValidatorStrategy.Ignore,\n\t\tvalidatorOptions: ValidatorOptions = {},\n\t\tconstraints: readonly IConstraint<I>[] = []\n\t) {\n\t\tsuper(validatorOptions, constraints);\n\t\tthis.shape = shape;\n\t\tthis.strategy = strategy;\n\n\t\tswitch (this.strategy) {\n\t\t\tcase ObjectValidatorStrategy.Ignore:\n\t\t\t\tthis.handleStrategy = (value) => this.handleIgnoreStrategy(value);\n\t\t\t\tbreak;\n\t\t\tcase ObjectValidatorStrategy.Strict: {\n\t\t\t\tthis.handleStrategy = (value) => this.handleStrictStrategy(value);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase ObjectValidatorStrategy.Passthrough:\n\t\t\t\tthis.handleStrategy = (value) => this.handlePassthroughStrategy(value);\n\t\t\t\tbreak;\n\t\t}\n\n\t\tconst shapeEntries = Object.entries(shape) as [keyof I, BaseValidator<T>][];\n\t\tthis.keys = shapeEntries.map(([key]) => key);\n\n\t\tfor (const [key, validator] of shapeEntries) {\n\t\t\tif (validator instanceof UnionValidator) {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/dot-notation\n\t\t\t\tconst [possiblyLiteralOrNullishPredicate] = validator['validators'];\n\n\t\t\t\tif (possiblyLiteralOrNullishPredicate instanceof NullishValidator) {\n\t\t\t\t\tthis.possiblyUndefinedKeys.set(key, validator);\n\t\t\t\t} else if (possiblyLiteralOrNullishPredicate instanceof LiteralValidator) {\n\t\t\t\t\tif (possiblyLiteralOrNullishPredicate.expected === undefined) {\n\t\t\t\t\t\tthis.possiblyUndefinedKeys.set(key, validator);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.requiredKeys.set(key, validator);\n\t\t\t\t\t}\n\t\t\t\t} else if (validator instanceof DefaultValidator) {\n\t\t\t\t\tthis.possiblyUndefinedKeysWithDefaults.set(key, validator);\n\t\t\t\t} else {\n\t\t\t\t\tthis.requiredKeys.set(key, validator);\n\t\t\t\t}\n\t\t\t} else if (validator instanceof NullishValidator) {\n\t\t\t\tthis.possiblyUndefinedKeys.set(key, validator);\n\t\t\t} else if (validator instanceof LiteralValidator) {\n\t\t\t\tif (validator.expected === undefined) {\n\t\t\t\t\tthis.possiblyUndefinedKeys.set(key, validator);\n\t\t\t\t} else {\n\t\t\t\t\tthis.requiredKeys.set(key, validator);\n\t\t\t\t}\n\t\t\t} else if (validator instanceof DefaultValidator) {\n\t\t\t\tthis.possiblyUndefinedKeysWithDefaults.set(key, validator);\n\t\t\t} else {\n\t\t\t\tthis.requiredKeys.set(key, validator);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic strict(options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn Reflect.construct(this.constructor, [this.shape, ObjectValidatorStrategy.Strict, options, this.constraints]);\n\t}\n\n\tpublic ignore(options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn Reflect.construct(this.constructor, [this.shape, ObjectValidatorStrategy.Ignore, options, this.constraints]);\n\t}\n\n\tpublic passthrough(options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn Reflect.construct(this.constructor, [this.shape, ObjectValidatorStrategy.Passthrough, options, this.constraints]);\n\t}\n\n\tpublic partial(options: ValidatorOptions = this.validatorOptions): ObjectValidator<{ [Key in keyof I]?: I[Key] }> {\n\t\tconst shape = Object.fromEntries(this.keys.map((key) => [key, this.shape[key as unknown as keyof typeof this.shape].optional(options)]));\n\t\treturn Reflect.construct(this.constructor, [shape, this.strategy, options, this.constraints]);\n\t}\n\n\tpublic required(options: ValidatorOptions = this.validatorOptions): ObjectValidator<{ [Key in keyof I]-?: I[Key] }> {\n\t\tconst shape = Object.fromEntries(\n\t\t\tthis.keys.map((key) => {\n\t\t\t\tlet validator = this.shape[key as unknown as keyof typeof this.shape];\n\t\t\t\tif (validator instanceof UnionValidator) validator = validator.required(options);\n\t\t\t\treturn [key, validator];\n\t\t\t})\n\t\t);\n\t\treturn Reflect.construct(this.constructor, [shape, this.strategy, options, this.constraints]);\n\t}\n\n\tpublic extend<ET extends object>(\n\t\tschema: ObjectValidator<ET> | MappedObjectValidator<ET>,\n\t\toptions: ValidatorOptions = this.validatorOptions\n\t): ObjectValidator<T & ET> {\n\t\tconst shape = { ...this.shape, ...(schema instanceof ObjectValidator ? schema.shape : schema) };\n\t\treturn Reflect.construct(this.constructor, [shape, this.strategy, options, this.constraints]);\n\t}\n\n\tpublic pick<K extends keyof I>(\n\t\tkeys: readonly K[],\n\t\toptions: ValidatorOptions = this.validatorOptions\n\t): ObjectValidator<{ [Key in keyof Pick<I, K>]: I[Key] }> {\n\t\tconst shape = Object.fromEntries(\n\t\t\tkeys.filter((key) => this.keys.includes(key)).map((key) => [key, this.shape[key as unknown as keyof typeof this.shape]])\n\t\t);\n\t\treturn Reflect.construct(this.constructor, [shape, this.strategy, options, this.constraints]);\n\t}\n\n\tpublic omit<K extends keyof I>(\n\t\tkeys: readonly K[],\n\t\toptions: ValidatorOptions = this.validatorOptions\n\t): ObjectValidator<{ [Key in keyof Omit<I, K>]: I[Key] }> {\n\t\tconst shape = Object.fromEntries(\n\t\t\tthis.keys.filter((key) => !keys.includes(key as any)).map((key) => [key, this.shape[key as unknown as keyof typeof this.shape]])\n\t\t);\n\t\treturn Reflect.construct(this.constructor, [shape, this.strategy, options, this.constraints]);\n\t}\n\n\tprotected override handle(value: unknown): Result<I, ValidationError | CombinedPropertyError> {\n\t\tconst typeOfValue = typeof value;\n\t\tif (typeOfValue !== 'object') {\n\t\t\treturn Result.err(\n\t\t\t\tnew ValidationError(\n\t\t\t\t\t's.object(T)',\n\t\t\t\t\tthis.validatorOptions.message ?? `Expected the value to be an object, but received ${typeOfValue} instead`,\n\t\t\t\t\tvalue\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn Result.err(new ValidationError('s.object(T)', this.validatorOptions.message ?? 'Expected the value to not be null', value));\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\treturn Result.err(new ValidationError('s.object(T)', this.validatorOptions.message ?? 'Expected the value to not be an array', value));\n\t\t}\n\n\t\tif (!this.shouldRunConstraints) {\n\t\t\treturn Result.ok(value as I);\n\t\t}\n\n\t\tfor (const predicate of Object.values(this.shape) as BaseValidator<any>[]) {\n\t\t\tpredicate.setParent(this.parent ?? value!);\n\t\t}\n\n\t\treturn this.handleStrategy(value as object);\n\t}\n\n\tprotected override clone(): this {\n\t\treturn Reflect.construct(this.constructor, [this.shape, this.strategy, this.validatorOptions, this.constraints]);\n\t}\n\n\tprivate handleIgnoreStrategy(value: object): Result<I, CombinedPropertyError> {\n\t\tconst errors: [PropertyKey, BaseError][] = [];\n\t\tconst finalObject = {} as I;\n\t\tconst inputEntries = new Map(Object.entries(value) as [keyof I, unknown][]);\n\n\t\tconst runPredicate = (key: keyof I, predicate: BaseValidator<unknown>) => {\n\t\t\tconst result = predicate.run(value[key as keyof object]);\n\n\t\t\tif (result.isOk()) {\n\t\t\t\tfinalObject[key] = result.value as I[keyof I];\n\t\t\t} else {\n\t\t\t\tconst error = result.error!;\n\t\t\t\terrors.push([key, error]);\n\t\t\t}\n\t\t};\n\n\t\tfor (const [key, predicate] of this.requiredKeys) {\n\t\t\tif (inputEntries.delete(key)) {\n\t\t\t\trunPredicate(key, predicate);\n\t\t\t} else {\n\t\t\t\terrors.push([key, new MissingPropertyError(key, this.validatorOptions)]);\n\t\t\t}\n\t\t}\n\n\t\t// Run possibly undefined keys that also have defaults even if there are no more keys to process (this is necessary so we fill in those defaults)\n\t\tfor (const [key, validator] of this.possiblyUndefinedKeysWithDefaults) {\n\t\t\tinputEntries.delete(key);\n\t\t\trunPredicate(key, validator);\n\t\t}\n\n\t\t// Early exit if there are no more properties to validate in the object and there are errors to report\n\t\tif (inputEntries.size === 0) {\n\t\t\treturn errors.length === 0 //\n\t\t\t\t? Result.ok(finalObject)\n\t\t\t\t: Result.err(new CombinedPropertyError(errors, this.validatorOptions));\n\t\t}\n\n\t\t// In the event the remaining keys to check are less than the number of possible undefined keys, we check those\n\t\t// as it could yield a faster execution\n\t\tconst checkInputEntriesInsteadOfSchemaKeys = this.possiblyUndefinedKeys.size > inputEntries.size;\n\n\t\tif (checkInputEntriesInsteadOfSchemaKeys) {\n\t\t\tfor (const [key] of inputEntries) {\n\t\t\t\tconst predicate = this.possiblyUndefinedKeys.get(key);\n\n\t\t\t\tif (predicate) {\n\t\t\t\t\trunPredicate(key, predicate);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (const [key, predicate] of this.possiblyUndefinedKeys) {\n\t\t\t\tif (inputEntries.delete(key)) {\n\t\t\t\t\trunPredicate(key, predicate);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn errors.length === 0 //\n\t\t\t? Result.ok(finalObject)\n\t\t\t: Result.err(new CombinedPropertyError(errors, this.validatorOptions));\n\t}\n\n\tprivate handleStrictStrategy(value: object): Result<I, CombinedPropertyError> {\n\t\tconst errors: [PropertyKey, BaseError][] = [];\n\t\tconst finalResult = {} as I;\n\t\tconst inputEntries = new Map(Object.entries(value) as [keyof I, unknown][]);\n\n\t\tconst runPredicate = (key: keyof I, predicate: BaseValidator<unknown>) => {\n\t\t\tconst result = predicate.run(value[key as keyof object]);\n\n\t\t\tif (result.isOk()) {\n\t\t\t\tfinalResult[key] = result.value as I[keyof I];\n\t\t\t} else {\n\t\t\t\tconst error = result.error!;\n\t\t\t\terrors.push([key, error]);\n\t\t\t}\n\t\t};\n\n\t\tfor (const [key, predicate] of this.requiredKeys) {\n\t\t\tif (inputEntries.delete(key)) {\n\t\t\t\trunPredicate(key, predicate);\n\t\t\t} else {\n\t\t\t\terrors.push([key, new MissingPropertyError(key, this.validatorOptions)]);\n\t\t\t}\n\t\t}\n\n\t\t// Run possibly undefined keys that also have defaults even if there are no more keys to process (this is necessary so we fill in those defaults)\n\t\tfor (const [key, validator] of this.possiblyUndefinedKeysWithDefaults) {\n\t\t\tinputEntries.delete(key);\n\t\t\trunPredicate(key, validator);\n\t\t}\n\n\t\tfor (const [key, predicate] of this.possiblyUndefinedKeys) {\n\t\t\t// All of these validators are assumed to be possibly undefined, so if we have gone through the entire object and there's still validators,\n\t\t\t// safe to assume we're done here\n\t\t\tif (inputEntries.size === 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (inputEntries.delete(key)) {\n\t\t\t\trunPredicate(key, predicate);\n\t\t\t}\n\t\t}\n\n\t\tif (inputEntries.size !== 0) {\n\t\t\tfor (const [key, value] of inputEntries.entries()) {\n\t\t\t\terrors.push([key, new UnknownPropertyError(key, value, this.validatorOptions)]);\n\t\t\t}\n\t\t}\n\n\t\treturn errors.length === 0 //\n\t\t\t? Result.ok(finalResult)\n\t\t\t: Result.err(new CombinedPropertyError(errors, this.validatorOptions));\n\t}\n\n\tprivate handlePassthroughStrategy(value: object): Result<I, CombinedPropertyError> {\n\t\tconst result = this.handleIgnoreStrategy(value);\n\t\treturn result.isErr() ? result : Result.ok({ ...value, ...result.value } as I);\n\t}\n}\n\nexport enum ObjectValidatorStrategy {\n\tIgnore,\n\tStrict,\n\tPassthrough\n}\n", "import type { ValidationError } from '../lib/errors/ValidationError';\nimport { Result } from '../lib/Result';\nimport { BaseValidator } from './imports';\n\nexport class PassthroughValidator<T extends any | unknown> extends BaseValidator<T> {\n\tprotected handle(value: unknown): Result<T, ValidationError> {\n\t\treturn Result.ok(value as T);\n\t}\n}\n", "import type { IConstraint } from '../constraints/base/IConstraint';\nimport type { BaseError } from '../lib/errors/BaseError';\nimport { CombinedPropertyError } from '../lib/errors/CombinedPropertyError';\nimport { ValidationError } from '../lib/errors/ValidationError';\nimport { Result } from '../lib/Result';\nimport type { ValidatorOptions } from '../lib/util-types';\nimport { BaseValidator } from './imports';\n\nexport class RecordValidator<T> extends BaseValidator<Record<string, T>> {\n\tprivate readonly validator: BaseValidator<T>;\n\n\tpublic constructor(\n\t\tvalidator: BaseValidator<T>,\n\t\tvalidatorOptions: ValidatorOptions = {},\n\t\tconstraints: readonly IConstraint<Record<string, T>>[] = []\n\t) {\n\t\tsuper(validatorOptions, constraints);\n\t\tthis.validator = validator;\n\t}\n\n\tprotected override clone(): this {\n\t\treturn Reflect.construct(this.constructor, [this.validator, this.validatorOptions, this.constraints]);\n\t}\n\n\tprotected handle(value: unknown): Result<Record<string, T>, ValidationError | CombinedPropertyError> {\n\t\tif (typeof value !== 'object') {\n\t\t\treturn Result.err(new ValidationError('s.record(T)', this.validatorOptions.message ?? 'Expected an object', value));\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn Result.err(new ValidationError('s.record(T)', this.validatorOptions.message ?? 'Expected the value to not be null', value));\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\treturn Result.err(new ValidationError('s.record(T)', this.validatorOptions.message ?? 'Expected the value to not be an array', value));\n\t\t}\n\n\t\tif (!this.shouldRunConstraints) {\n\t\t\treturn Result.ok(value as Record<string, T>);\n\t\t}\n\n\t\tconst errors: [string, BaseError][] = [];\n\t\tconst transformed: Record<string, T> = {};\n\n\t\tfor (const [key, val] of Object.entries(value!)) {\n\t\t\tconst result = this.validator.run(val);\n\t\t\tif (result.isOk()) transformed[key] = result.value;\n\t\t\telse errors.push([key, result.error!]);\n\t\t}\n\n\t\treturn errors.length === 0 //\n\t\t\t? Result.ok(transformed)\n\t\t\t: Result.err(new CombinedPropertyError(errors, this.validatorOptions));\n\t}\n}\n", "import type { IConstraint } from '../constraints/base/IConstraint';\nimport type { BaseError } from '../lib/errors/BaseError';\nimport { CombinedError } from '../lib/errors/CombinedError';\nimport { ValidationError } from '../lib/errors/ValidationError';\nimport { Result } from '../lib/Result';\nimport type { ValidatorOptions } from '../lib/util-types';\nimport { BaseValidator } from './imports';\n\nexport class SetValidator<T> extends BaseValidator<Set<T>> {\n\tprivate readonly validator: BaseValidator<T>;\n\n\tpublic constructor(validator: BaseValidator<T>, validatorOptions?: ValidatorOptions, constraints: readonly IConstraint<Set<T>>[] = []) {\n\t\tsuper(validatorOptions, constraints);\n\t\tthis.validator = validator;\n\t}\n\n\tprotected override clone(): this {\n\t\treturn Reflect.construct(this.constructor, [this.validator, this.validatorOptions, this.constraints]);\n\t}\n\n\tprotected handle(values: unknown): Result<Set<T>, ValidationError | CombinedError> {\n\t\tif (!(values instanceof Set)) {\n\t\t\treturn Result.err(new ValidationError('s.set(T)', this.validatorOptions.message ?? 'Expected a set', values));\n\t\t}\n\n\t\tif (!this.shouldRunConstraints) {\n\t\t\treturn Result.ok(values);\n\t\t}\n\n\t\tconst errors: BaseError[] = [];\n\t\tconst transformed = new Set<T>();\n\n\t\tfor (const value of values) {\n\t\t\tconst result = this.validator.run(value);\n\t\t\tif (result.isOk()) transformed.add(result.value);\n\t\t\telse errors.push(result.error!);\n\t\t}\n\n\t\treturn errors.length === 0 //\n\t\t\t? Result.ok(transformed)\n\t\t\t: Result.err(new CombinedError(errors, this.validatorOptions));\n\t}\n}\n", "/**\n * @license MIT\n * @copyright 2020 Colin McDonnell\n * @see https://github.com/colinhacks/zod/blob/master/LICENSE\n */\nconst accountRegex = /^(?!\\.)(?!.*\\.\\.)([A-Z0-9_+-\\.]*)[A-Z0-9_+-]$/i;\n\n/**\n * Validates an email address string based on various checks:\n * - It must be a non nullish and non empty string\n * - It must include at least an `@` symbol`\n * - The account name may not exceed 64 characters\n * - The domain name may not exceed 255 characters\n * - The domain must include at least one `.` symbol\n * - Each part of the domain, split by `.` must not exceed 63 characters\n * - The email address must be [RFC-5322](https://datatracker.ietf.org/doc/html/rfc5322) compliant\n * @param email The email to validate\n * @returns `true` if the email is valid, `false` otherwise\n *\n * @remark Based on the following sources:\n * - `email-validator` by [manisharaan](https://github.com/manishsaraan) ([code](https://github.com/manishsaraan/email-validator/blob/master/index.js))\n * - [Comparing E-mail Address Validating Regular Expressions](http://fightingforalostcause.net/misc/2006/compare-email-regex.php)\n * - [Validating Email Addresses by Derrick Pallas](http://thedailywtf.com/Articles/Validating_Email_Addresses.aspx)\n * - [StackOverflow answer by bortzmeyer](http://stackoverflow.com/questions/201323/what-is-the-best-regular-expression-for-validating-email-addresses/201378#201378)\n * - [The wikipedia page on Email addresses](https://en.wikipedia.org/wiki/Email_address)\n */\nexport function validateEmail(email: string): boolean {\n\t// 1. Non-nullish and non-empty string check.\n\t//\n\t// If a nullish or empty email was provided then do an early exit\n\tif (!email) return false;\n\n\t// Find the location of the @ symbol:\n\tconst atIndex = email.indexOf('@');\n\n\t// 2. @ presence check.\n\t//\n\t// If the email does not have the @ symbol, it's automatically invalid:\n\tif (atIndex === -1) return false;\n\n\t// 3. <account> maximum length check.\n\t//\n\t// From <account>@<domain>, if <account> exceeds 64 characters, then the\n\t// position of the @ symbol is 64 or greater. In this case, the email is\n\t// invalid:\n\tif (atIndex > 64) return false;\n\n\tconst domainIndex = atIndex + 1;\n\n\t// 7.1. Duplicated @ symbol check.\n\t//\n\t// If there's a second @ symbol, the email is automatically invalid:\n\tif (email.includes('@', domainIndex)) return false;\n\n\t// 4. <domain> maximum length check.\n\t//\n\t// From <account>@<domain>, if <domain> exceeds 255 characters, then it\n\t// means that the amount of characters between the start of <domain> and the\n\t// end of the string is separated by 255 or more characters.\n\tif (email.length - domainIndex > 255) return false;\n\n\t// Find the location of the . symbol in <domain>:\n\tlet dotIndex = email.indexOf('.', domainIndex);\n\n\t// 5. <domain> dot (.) symbol check.\n\t//\n\t// From <account>@<domain>, if <domain> does not contain a dot (.) symbol,\n\t// then it means the domain is invalid.\n\tif (dotIndex === -1) return false;\n\n\t// 6. <domain> parts length.\n\t//\n\t// Assign a temporary variable to store the start of the last read domain\n\t// part, this would be at the start of <domain>.\n\t//\n\t// For a <domain> part to be correct, it must have at most, 63 characters.\n\t// We repeat this step for every sub-section of <domain> contained within\n\t// dot (.) symbols.\n\t//\n\t// The following step is a more optimized version of the following code:\n\t//\n\t// ```javascript\n\t// domain.split('.').some((part) => part.length > 63);\n\t// ```\n\tlet lastDotIndex = domainIndex;\n\tdo {\n\t\tif (dotIndex - lastDotIndex > 63) return false;\n\n\t\tlastDotIndex = dotIndex + 1;\n\t} while ((dotIndex = email.indexOf('.', lastDotIndex)) !== -1);\n\n\t// The loop iterates from the first to the n - 1 part, this line checks for\n\t// the last (n) part:\n\tif (email.length - lastDotIndex > 63) return false;\n\n\t// 7.2. Character checks.\n\t//\n\t// From <account>@<domain>:\n\t// - Extract the <account> part by slicing the input from start to the @\n\t//   character. Validate afterwards.\n\t// - Extract the <domain> part by slicing the input from the start of\n\t//   <domain>. Validate afterwards.\n\t//\n\t// Note: we inline the variables so <domain> isn't created unless the\n\t//       <account> check passes.\n\treturn accountRegex.test(email.slice(0, atIndex)) && validateEmailDomain(email.slice(domainIndex));\n}\n\nfunction validateEmailDomain(domain: string): boolean {\n\ttry {\n\t\treturn new URL(`http://${domain}`).hostname === domain;\n\t} catch {\n\t\treturn false;\n\t}\n}\n", "/**\n * Code ported from https://github.com/nodejs/node/blob/5fad0b93667ffc6e4def52996b9529ac99b26319/lib/internal/net.js\n */\n\n// IPv4 Segment\nconst v4Seg = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';\nconst v4Str = `(${v4Seg}[.]){3}${v4Seg}`;\nconst IPv4Reg = new RegExp(`^${v4Str}$`);\n\n// IPv6 Segment\nconst v6Seg = '(?:[0-9a-fA-F]{1,4})';\nconst IPv6Reg = new RegExp(\n\t'^(' +\n\t\t`(?:${v6Seg}:){7}(?:${v6Seg}|:)|` +\n\t\t`(?:${v6Seg}:){6}(?:${v4Str}|:${v6Seg}|:)|` +\n\t\t`(?:${v6Seg}:){5}(?::${v4Str}|(:${v6Seg}){1,2}|:)|` +\n\t\t`(?:${v6Seg}:){4}(?:(:${v6Seg}){0,1}:${v4Str}|(:${v6Seg}){1,3}|:)|` +\n\t\t`(?:${v6Seg}:){3}(?:(:${v6Seg}){0,2}:${v4Str}|(:${v6Seg}){1,4}|:)|` +\n\t\t`(?:${v6Seg}:){2}(?:(:${v6Seg}){0,3}:${v4Str}|(:${v6Seg}){1,5}|:)|` +\n\t\t`(?:${v6Seg}:){1}(?:(:${v6Seg}){0,4}:${v4Str}|(:${v6Seg}){1,6}|:)|` +\n\t\t`(?::((?::${v6Seg}){0,5}:${v4Str}|(?::${v6Seg}){1,7}|:))` +\n\t\t')(%[0-9a-zA-Z-.:]{1,})?$'\n);\n\nexport function isIPv4(s: string): boolean {\n\treturn IPv4Reg.test(s);\n}\n\nexport function isIPv6(s: string): boolean {\n\treturn IPv6Reg.test(s);\n}\n\nexport function isIP(s: string): number {\n\tif (isIPv4(s)) return 4;\n\tif (isIPv6(s)) return 6;\n\treturn 0;\n}\n", "export const phoneNumberRegex = /^((?:\\+|0{0,2})\\d{1,2}\\s?)?\\(?\\d{3}\\)?[\\s.-]?\\d{3}[\\s.-]?\\d{4}$/;\n\nexport function validatePhoneNumber(input: string) {\n\treturn phoneNumberRegex.test(input);\n}\n", "import { inspect, type InspectOptionsStylized } from 'util';\nimport { BaseConstraintError, type ConstraintErrorNames } from './BaseConstraintError';\nimport { customInspectSymbolStackLess } from './BaseError';\nimport type { MultiplePossibilitiesConstraintErrorJsonified } from './error-types';\n\nexport class MultiplePossibilitiesConstraintError<T = unknown> extends BaseConstraintError<T> {\n\tpublic readonly expected: readonly string[];\n\n\tpublic constructor(constraint: ConstraintErrorNames, message: string, given: T, expected: readonly string[]) {\n\t\tsuper(constraint, message, given);\n\t\tthis.expected = expected;\n\t}\n\n\tpublic override toJSON(): MultiplePossibilitiesConstraintErrorJsonified<T> {\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tmessage: this.message,\n\t\t\tconstraint: this.constraint,\n\t\t\tgiven: this.given,\n\t\t\texpected: this.expected\n\t\t};\n\t}\n\n\tprotected [customInspectSymbolStackLess](depth: number, options: InspectOptionsStylized): string {\n\t\tconst constraint = options.stylize(this.constraint, 'string');\n\t\tif (depth < 0) {\n\t\t\treturn options.stylize(`[MultiplePossibilitiesConstraintError: ${constraint}]`, 'special');\n\t\t}\n\n\t\tconst newOptions = { ...options, depth: options.depth === null ? null : options.depth! - 1 };\n\n\t\tconst verticalLine = options.stylize('|', 'undefined');\n\t\tconst padding = `\\n  ${verticalLine} `;\n\t\tconst given = inspect(this.given, newOptions).replace(/\\n/g, padding);\n\n\t\tconst header = `${options.stylize('MultiplePossibilitiesConstraintError', 'special')} > ${constraint}`;\n\t\tconst message = options.stylize(this.message, 'regexp');\n\n\t\tconst expectedPadding = `\\n  ${verticalLine} - `;\n\t\tconst expectedBlock = `\\n  ${options.stylize('Expected any of the following:', 'string')}${expectedPadding}${this.expected\n\t\t\t.map((possible) => options.stylize(possible, 'boolean'))\n\t\t\t.join(expectedPadding)}`;\n\t\tconst givenBlock = `\\n  ${options.stylize('Received:', 'regexp')}${padding}${given}`;\n\t\treturn `${header}\\n  ${message}\\n${expectedBlock}\\n${givenBlock}`;\n\t}\n}\n", "export function combinedErrorFn<P extends [...any], E extends Error>(...fns: ErrorFn<P, E>[]): ErrorFn<P, E> {\n\tswitch (fns.length) {\n\t\tcase 0:\n\t\t\treturn () => null;\n\t\tcase 1:\n\t\t\treturn fns[0];\n\t\tcase 2: {\n\t\t\tconst [fn0, fn1] = fns;\n\t\t\treturn (...params) => fn0(...params) || fn1(...params);\n\t\t}\n\t\tdefault: {\n\t\t\treturn (...params) => {\n\t\t\t\tfor (const fn of fns) {\n\t\t\t\t\tconst result = fn(...params);\n\t\t\t\t\tif (result) return result;\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\t\t\t};\n\t\t}\n\t}\n}\n\nexport type ErrorFn<P extends [...any], E extends Error> = (...params: P) => E | null;\n", "import { MultiplePossibilitiesConstraintError } from '../../lib/errors/MultiplePossibilitiesConstraintError';\nimport type { ValidatorOptions } from '../../lib/util-types';\nimport { combinedErrorFn, type ErrorFn } from './common/combinedResultFn';\n\nexport type StringProtocol = `${string}:`;\n\nexport type StringDomain = `${string}.${string}`;\n\nexport interface UrlOptions {\n\tallowedProtocols?: StringProtocol[];\n\tallowedDomains?: StringDomain[];\n}\n\nexport function createUrlValidators(options?: UrlOptions, validatorOptions?: ValidatorOptions) {\n\tconst fns: ErrorFn<[input: string, url: URL], MultiplePossibilitiesConstraintError<string>>[] = [];\n\n\tif (options?.allowedProtocols?.length) fns.push(allowedProtocolsFn(options.allowedProtocols, validatorOptions));\n\tif (options?.allowedDomains?.length) fns.push(allowedDomainsFn(options.allowedDomains, validatorOptions));\n\n\treturn combinedErrorFn(...fns);\n}\n\nfunction allowedProtocolsFn(allowedProtocols: StringProtocol[], options?: ValidatorOptions) {\n\treturn (input: string, url: URL) =>\n\t\tallowedProtocols.includes(url.protocol as StringProtocol)\n\t\t\t? null\n\t\t\t: new MultiplePossibilitiesConstraintError('s.string().url()', options?.message ?? 'Invalid URL protocol', input, allowedProtocols);\n}\n\nfunction allowedDomainsFn(allowedDomains: StringDomain[], options?: ValidatorOptions) {\n\treturn (input: string, url: URL) =>\n\t\tallowedDomains.includes(url.hostname as StringDomain)\n\t\t\t? null\n\t\t\t: new MultiplePossibilitiesConstraintError('s.string().url()', options?.message ?? 'Invalid URL domain', input, allowedDomains);\n}\n", "import { ExpectedConstraintError } from '../lib/errors/ExpectedConstraintError';\nimport { Result } from '../lib/Result';\nimport type { ValidatorOptions } from '../lib/util-types';\nimport type { IConstraint } from './base/IConstraint';\nimport { validateEmail } from './util/emailValidator';\nimport { isIP, isIPv4, isIPv6 } from './util/net';\nimport { equal, greaterThan, greaterThanOrEqual, lessThan, lessThanOrEqual, notEqual, type Comparator } from './util/operators';\nimport { validatePhoneNumber } from './util/phoneValidator';\nimport { createUrlValidators } from './util/urlValidators';\n\nexport type StringConstraintName = `s.string().${\n\t| `length${'LessThan' | 'LessThanOrEqual' | 'GreaterThan' | 'GreaterThanOrEqual' | 'Equal' | 'NotEqual'}`\n\t| 'regex'\n\t| 'url'\n\t| 'uuid'\n\t| 'email'\n\t| `ip${'v4' | 'v6' | ''}`\n\t| 'date'\n\t| 'phone'}()`;\n\nexport type StringProtocol = `${string}:`;\n\nexport type StringDomain = `${string}.${string}`;\n\nexport interface UrlOptions {\n\tallowedProtocols?: StringProtocol[];\n\tallowedDomains?: StringDomain[];\n}\n\nexport type UUIDVersion = 1 | 3 | 4 | 5;\n\nexport interface StringUuidOptions {\n\tversion?: UUIDVersion | `${UUIDVersion}-${UUIDVersion}` | null;\n\tnullable?: boolean;\n}\n\nfunction stringLengthComparator(\n\tcomparator: Comparator,\n\tname: StringConstraintName,\n\texpected: string,\n\tlength: number,\n\toptions?: ValidatorOptions\n): IConstraint<string> {\n\treturn {\n\t\trun(input: string) {\n\t\t\treturn comparator(input.length, length) //\n\t\t\t\t? Result.ok(input)\n\t\t\t\t: Result.err(new ExpectedConstraintError(name, options?.message ?? 'Invalid string length', input, expected));\n\t\t}\n\t};\n}\n\nexport function stringLengthLessThan(length: number, options?: ValidatorOptions): IConstraint<string> {\n\tconst expected = `expected.length < ${length}`;\n\treturn stringLengthComparator(lessThan, 's.string().lengthLessThan()', expected, length, options);\n}\n\nexport function stringLengthLessThanOrEqual(length: number, options?: ValidatorOptions): IConstraint<string> {\n\tconst expected = `expected.length <= ${length}`;\n\treturn stringLengthComparator(lessThanOrEqual, 's.string().lengthLessThanOrEqual()', expected, length, options);\n}\n\nexport function stringLengthGreaterThan(length: number, options?: ValidatorOptions): IConstraint<string> {\n\tconst expected = `expected.length > ${length}`;\n\treturn stringLengthComparator(greaterThan, 's.string().lengthGreaterThan()', expected, length, options);\n}\n\nexport function stringLengthGreaterThanOrEqual(length: number, options?: ValidatorOptions): IConstraint<string> {\n\tconst expected = `expected.length >= ${length}`;\n\treturn stringLengthComparator(greaterThanOrEqual, 's.string().lengthGreaterThanOrEqual()', expected, length, options);\n}\n\nexport function stringLengthEqual(length: number, options?: ValidatorOptions): IConstraint<string> {\n\tconst expected = `expected.length === ${length}`;\n\treturn stringLengthComparator(equal, 's.string().lengthEqual()', expected, length, options);\n}\n\nexport function stringLengthNotEqual(length: number, options?: ValidatorOptions): IConstraint<string> {\n\tconst expected = `expected.length !== ${length}`;\n\treturn stringLengthComparator(notEqual, 's.string().lengthNotEqual()', expected, length, options);\n}\n\nexport function stringEmail(options?: ValidatorOptions): IConstraint<string> {\n\treturn {\n\t\trun(input: string) {\n\t\t\treturn validateEmail(input)\n\t\t\t\t? Result.ok(input)\n\t\t\t\t: Result.err(\n\t\t\t\t\t\tnew ExpectedConstraintError(\n\t\t\t\t\t\t\t's.string().email()',\n\t\t\t\t\t\t\toptions?.message ?? 'Invalid email address',\n\t\t\t\t\t\t\tinput,\n\t\t\t\t\t\t\t'expected to be an email address'\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t}\n\t};\n}\n\nfunction stringRegexValidator(type: StringConstraintName, expected: string, regex: RegExp, options?: ValidatorOptions): IConstraint<string> {\n\treturn {\n\t\trun(input: string) {\n\t\t\treturn regex.test(input) //\n\t\t\t\t? Result.ok(input)\n\t\t\t\t: Result.err(new ExpectedConstraintError(type, options?.message ?? 'Invalid string format', input, expected));\n\t\t}\n\t};\n}\n\nexport function stringUrl(options?: UrlOptions, validatorOptions?: ValidatorOptions): IConstraint<string> {\n\tconst validatorFn = createUrlValidators(options, validatorOptions);\n\treturn {\n\t\trun(input: string) {\n\t\t\tlet url: URL;\n\t\t\ttry {\n\t\t\t\turl = new URL(input);\n\t\t\t} catch {\n\t\t\t\treturn Result.err(\n\t\t\t\t\tnew ExpectedConstraintError('s.string().url()', validatorOptions?.message ?? 'Invalid URL', input, 'expected to match a URL')\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst validatorFnResult = validatorFn(input, url);\n\t\t\tif (validatorFnResult === null) return Result.ok(input);\n\t\t\treturn Result.err(validatorFnResult);\n\t\t}\n\t};\n}\n\nexport function stringIp(version?: 4 | 6, options?: ValidatorOptions): IConstraint<string> {\n\tconst ipVersion = version ? (`v${version}` as const) : '';\n\tconst validatorFn = version === 4 ? isIPv4 : version === 6 ? isIPv6 : isIP;\n\n\tconst name = `s.string().ip${ipVersion}()` as const;\n\tconst message = `Invalid IP${ipVersion} address`;\n\tconst expected = `expected to be an IP${ipVersion} address`;\n\treturn {\n\t\trun(input: string) {\n\t\t\treturn validatorFn(input)\n\t\t\t\t? Result.ok(input)\n\t\t\t\t: Result.err(new ExpectedConstraintError(name, options?.message ?? message, input, expected));\n\t\t}\n\t};\n}\n\nexport function stringRegex(regex: RegExp, options?: ValidatorOptions) {\n\treturn stringRegexValidator('s.string().regex()', `expected ${regex}.test(expected) to be true`, regex, options);\n}\n\nexport function stringUuid({ version = 4, nullable = false }: StringUuidOptions = {}, options?: ValidatorOptions) {\n\tversion ??= '1-5';\n\tconst regex = new RegExp(\n\t\t`^(?:[0-9A-F]{8}-[0-9A-F]{4}-[${version}][0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}${\n\t\t\tnullable ? '|00000000-0000-0000-0000-000000000000' : ''\n\t\t})$`,\n\t\t'i'\n\t);\n\tconst expected = `expected to match UUID${typeof version === 'number' ? `v${version}` : ` in range of ${version}`}`;\n\treturn stringRegexValidator('s.string().uuid()', expected, regex, options);\n}\n\nexport function stringDate(options?: ValidatorOptions): IConstraint<string> {\n\treturn {\n\t\trun(input: string) {\n\t\t\tconst time = Date.parse(input);\n\n\t\t\treturn Number.isNaN(time)\n\t\t\t\t? Result.err(\n\t\t\t\t\t\tnew ExpectedConstraintError(\n\t\t\t\t\t\t\t's.string().date()',\n\t\t\t\t\t\t\toptions?.message ?? 'Invalid date string',\n\t\t\t\t\t\t\tinput,\n\t\t\t\t\t\t\t'expected to be a valid date string (in the ISO 8601 or ECMA-262 format)'\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t: Result.ok(input);\n\t\t}\n\t};\n}\n\nexport function stringPhone(options?: ValidatorOptions): IConstraint<string> {\n\treturn {\n\t\trun(input: string) {\n\t\t\treturn validatePhoneNumber(input)\n\t\t\t\t? Result.ok(input)\n\t\t\t\t: Result.err(\n\t\t\t\t\t\tnew ExpectedConstraintError(\n\t\t\t\t\t\t\t's.string().phone()',\n\t\t\t\t\t\t\toptions?.message ?? 'Invalid phone number',\n\t\t\t\t\t\t\tinput,\n\t\t\t\t\t\t\t'expected to be a phone number'\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t}\n\t};\n}\n", "import type { IConstraint } from '../constraints/base/IConstraint';\nimport {\n\tstringDate,\n\tstringEmail,\n\tstringIp,\n\tstringLengthEqual,\n\tstringLengthGreaterThan,\n\tstringLengthGreaterThanOrEqual,\n\tstringLengthLessThan,\n\tstringLengthLessThanOrEqual,\n\tstringLengthNotEqual,\n\tstringPhone,\n\tstringRegex,\n\tstringUrl,\n\tstringUuid,\n\ttype StringUuidOptions,\n\ttype UrlOptions\n} from '../constraints/StringConstraints';\nimport { ValidationError } from '../lib/errors/ValidationError';\nimport { Result } from '../lib/Result';\nimport type { ValidatorOptions } from '../lib/util-types';\nimport { BaseValidator } from './imports';\n\nexport class StringValidator<T extends string> extends BaseValidator<T> {\n\tpublic lengthLessThan(length: number, options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn this.addConstraint(stringLengthLessThan(length, options) as IConstraint<T>);\n\t}\n\n\tpublic lengthLessThanOrEqual(length: number, options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn this.addConstraint(stringLengthLessThanOrEqual(length, options) as IConstraint<T>);\n\t}\n\n\tpublic lengthGreaterThan(length: number, options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn this.addConstraint(stringLengthGreaterThan(length, options) as IConstraint<T>);\n\t}\n\n\tpublic lengthGreaterThanOrEqual(length: number, options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn this.addConstraint(stringLengthGreaterThanOrEqual(length, options) as IConstraint<T>);\n\t}\n\n\tpublic lengthEqual(length: number, options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn this.addConstraint(stringLengthEqual(length, options) as IConstraint<T>);\n\t}\n\n\tpublic lengthNotEqual(length: number, options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn this.addConstraint(stringLengthNotEqual(length, options) as IConstraint<T>);\n\t}\n\n\tpublic email(options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn this.addConstraint(stringEmail(options) as IConstraint<T>);\n\t}\n\n\tpublic url(validatorOptions?: ValidatorOptions): this;\n\tpublic url(options?: UrlOptions, validatorOptions?: ValidatorOptions): this;\n\tpublic url(options?: UrlOptions | ValidatorOptions, validatorOptions: ValidatorOptions = this.validatorOptions): this {\n\t\tconst urlOptions = this.isUrlOptions(options);\n\n\t\tif (urlOptions) {\n\t\t\treturn this.addConstraint(stringUrl(options, validatorOptions) as IConstraint<T>);\n\t\t}\n\n\t\treturn this.addConstraint(stringUrl(undefined, validatorOptions) as IConstraint<T>);\n\t}\n\n\tpublic uuid(validatorOptions?: ValidatorOptions): this;\n\tpublic uuid(options?: StringUuidOptions, validatorOptions?: ValidatorOptions): this;\n\tpublic uuid(options?: StringUuidOptions | ValidatorOptions, validatorOptions: ValidatorOptions = this.validatorOptions): this {\n\t\tconst stringUuidOptions = this.isStringUuidOptions(options);\n\n\t\tif (stringUuidOptions) {\n\t\t\treturn this.addConstraint(stringUuid(options, validatorOptions) as IConstraint<T>);\n\t\t}\n\n\t\treturn this.addConstraint(stringUuid(undefined, validatorOptions) as IConstraint<T>);\n\t}\n\n\tpublic regex(regex: RegExp, options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn this.addConstraint(stringRegex(regex, options) as IConstraint<T>);\n\t}\n\n\tpublic date(options: ValidatorOptions = this.validatorOptions) {\n\t\treturn this.addConstraint(stringDate(options) as IConstraint<T>);\n\t}\n\n\tpublic ipv4(options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn this.ip(4, options);\n\t}\n\n\tpublic ipv6(options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn this.ip(6, options);\n\t}\n\n\tpublic ip(version?: 4 | 6, options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn this.addConstraint(stringIp(version, options) as IConstraint<T>);\n\t}\n\n\tpublic phone(options: ValidatorOptions = this.validatorOptions): this {\n\t\treturn this.addConstraint(stringPhone(options) as IConstraint<T>);\n\t}\n\n\tprotected handle(value: unknown): Result<T, ValidationError> {\n\t\treturn typeof value === 'string' //\n\t\t\t? Result.ok(value as T)\n\t\t\t: Result.err(new ValidationError('s.string()', this.validatorOptions.message ?? 'Expected a string primitive', value));\n\t}\n\n\tprivate isUrlOptions(options?: UrlOptions | ValidatorOptions): options is UrlOptions {\n\t\treturn (options as ValidatorOptions)?.message === undefined;\n\t}\n\n\tprivate isStringUuidOptions(options?: StringUuidOptions | ValidatorOptions): options is StringUuidOptions {\n\t\treturn (options as ValidatorOptions)?.message === undefined;\n\t}\n}\n", "import type { IConstraint } from '../constraints/base/IConstraint';\nimport type { BaseError } from '../lib/errors/BaseError';\nimport { CombinedPropertyError } from '../lib/errors/CombinedPropertyError';\nimport { ValidationError } from '../lib/errors/ValidationError';\nimport { Result } from '../lib/Result';\nimport type { ValidatorOptions } from '../lib/util-types';\nimport { BaseValidator } from './imports';\n\nexport class TupleValidator<T extends any[]> extends BaseValidator<[...T]> {\n\tprivate readonly validators: BaseValidator<[...T]>[] = [];\n\n\tpublic constructor(\n\t\tvalidators: BaseValidator<[...T]>[],\n\t\tvalidatorOptions: ValidatorOptions = {},\n\t\tconstraints: readonly IConstraint<[...T]>[] = []\n\t) {\n\t\tsuper(validatorOptions, constraints);\n\t\tthis.validators = validators;\n\t}\n\n\tprotected override clone(): this {\n\t\treturn Reflect.construct(this.constructor, [this.validators, this.validatorOptions, this.constraints]);\n\t}\n\n\tprotected handle(values: unknown): Result<[...T], ValidationError | CombinedPropertyError> {\n\t\tif (!Array.isArray(values)) {\n\t\t\treturn Result.err(new ValidationError('s.tuple(T)', this.validatorOptions.message ?? 'Expected an array', values));\n\t\t}\n\n\t\tif (values.length !== this.validators.length) {\n\t\t\treturn Result.err(\n\t\t\t\tnew ValidationError('s.tuple(T)', this.validatorOptions.message ?? `Expected an array of length ${this.validators.length}`, values)\n\t\t\t);\n\t\t}\n\n\t\tif (!this.shouldRunConstraints) {\n\t\t\treturn Result.ok(values as [...T]);\n\t\t}\n\n\t\tconst errors: [number, BaseError][] = [];\n\t\tconst transformed: T = [] as unknown as T;\n\n\t\tfor (let i = 0; i < values.length; i++) {\n\t\t\tconst result = this.validators[i].run(values[i]);\n\t\t\tif (result.isOk()) transformed.push(result.value);\n\t\t\telse errors.push([i, result.error!]);\n\t\t}\n\n\t\treturn errors.length === 0 //\n\t\t\t? Result.ok(transformed)\n\t\t\t: Result.err(new CombinedPropertyError(errors, this.validatorOptions));\n\t}\n}\n", "import type { IConstraint } from '../constraints/base/IConstraint';\nimport type { BaseError } from '../lib/errors/BaseError';\nimport { CombinedPropertyError } from '../lib/errors/CombinedPropertyError';\nimport { ValidationError } from '../lib/errors/ValidationError';\nimport { Result } from '../lib/Result';\nimport type { ValidatorOptions } from '../lib/util-types';\nimport { BaseValidator } from './imports';\n\nexport class MapValidator<K, V> extends BaseValidator<Map<K, V>> {\n\tprivate readonly keyValidator: BaseValidator<K>;\n\tprivate readonly valueValidator: BaseValidator<V>;\n\n\tpublic constructor(\n\t\tkeyValidator: BaseValidator<K>,\n\t\tvalueValidator: BaseValidator<V>,\n\t\tvalidatorOptions: ValidatorOptions = {},\n\t\tconstraints: readonly IConstraint<Map<K, V>>[] = []\n\t) {\n\t\tsuper(validatorOptions, constraints);\n\t\tthis.keyValidator = keyValidator;\n\t\tthis.valueValidator = valueValidator;\n\t}\n\n\tprotected override clone(): this {\n\t\treturn Reflect.construct(this.constructor, [this.keyValidator, this.valueValidator, this.validatorOptions, this.constraints]);\n\t}\n\n\tprotected handle(value: unknown): Result<Map<K, V>, ValidationError | CombinedPropertyError> {\n\t\tif (!(value instanceof Map)) {\n\t\t\treturn Result.err(new ValidationError('s.map(K, V)', this.validatorOptions.message ?? 'Expected a map', value));\n\t\t}\n\n\t\tif (!this.shouldRunConstraints) {\n\t\t\treturn Result.ok(value);\n\t\t}\n\n\t\tconst errors: [string, BaseError][] = [];\n\t\tconst transformed = new Map<K, V>();\n\n\t\tfor (const [key, val] of value.entries()) {\n\t\t\tconst keyResult = this.keyValidator.run(key);\n\t\t\tconst valueResult = this.valueValidator.run(val);\n\t\t\tconst { length } = errors;\n\t\t\tif (keyResult.isErr()) errors.push([key, keyResult.error]);\n\t\t\tif (valueResult.isErr()) errors.push([key, valueResult.error]);\n\t\t\tif (errors.length === length) transformed.set(keyResult.value!, valueResult.value!);\n\t\t}\n\n\t\treturn errors.length === 0 //\n\t\t\t? Result.ok(transformed)\n\t\t\t: Result.err(new CombinedPropertyError(errors, this.validatorOptions));\n\t}\n}\n", "import type { IConstraint } from '../constraints/base/IConstraint';\nimport type { Result } from '../lib/Result';\nimport type { Unwrap, ValidatorOptions } from '../lib/util-types';\nimport { BaseValidator, type ValidatorError } from './imports';\n\nexport class LazyValidator<T extends BaseValidator<unknown>, R = Unwrap<T>> extends BaseValidator<R> {\n\tprivate readonly validator: (value: unknown) => T;\n\n\tpublic constructor(validator: (value: unknown) => T, validatorOptions: ValidatorOptions = {}, constraints: readonly IConstraint<R>[] = []) {\n\t\tsuper(validatorOptions, constraints);\n\t\tthis.validator = validator;\n\t}\n\n\tprotected override clone(): this {\n\t\treturn Reflect.construct(this.constructor, [this.validator, this.validatorOptions, this.constraints]);\n\t}\n\n\tprotected handle(values: unknown): Result<R, ValidatorError> {\n\t\treturn this.validator(values).run(values) as Result<R, ValidatorError>;\n\t}\n}\n", "import type { InspectOptionsStylized } from 'util';\nimport type { ValidatorOptions } from '../util-types';\nimport { BaseError, customInspectSymbolStackLess } from './BaseError';\nimport type { UnknownEnumValueErrorJsonified } from './error-types';\n\nexport class UnknownEnumValueError extends BaseError {\n\tpublic readonly value: string | number;\n\tpublic readonly enumKeys: string[];\n\tpublic readonly enumMappings: Map<string | number, string | number>;\n\n\tpublic constructor(\n\t\tvalue: string | number,\n\t\tkeys: string[],\n\t\tenumMappings: Map<string | number, string | number>,\n\t\tvalidatorOptions?: ValidatorOptions\n\t) {\n\t\tsuper(validatorOptions?.message ?? 'Expected the value to be one of the following enum values:');\n\n\t\tthis.value = value;\n\t\tthis.enumKeys = keys;\n\t\tthis.enumMappings = enumMappings;\n\t}\n\n\tpublic override toJSON(): UnknownEnumValueErrorJsonified {\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tmessage: this.message,\n\t\t\tvalue: this.value,\n\t\t\tenumKeys: this.enumKeys,\n\t\t\tenumMappings: [...this.enumMappings.entries()]\n\t\t};\n\t}\n\n\tprotected [customInspectSymbolStackLess](depth: number, options: InspectOptionsStylized): string {\n\t\tconst value = options.stylize(this.value.toString(), 'string');\n\t\tif (depth < 0) {\n\t\t\treturn options.stylize(`[UnknownEnumValueError: ${value}]`, 'special');\n\t\t}\n\n\t\tconst padding = `\\n  ${options.stylize('|', 'undefined')} `;\n\t\tconst pairs = this.enumKeys\n\t\t\t.map((key) => {\n\t\t\t\tconst enumValue = this.enumMappings.get(key)!;\n\t\t\t\treturn `${options.stylize(key, 'string')} or ${options.stylize(\n\t\t\t\t\tenumValue.toString(),\n\t\t\t\t\ttypeof enumValue === 'number' ? 'number' : 'string'\n\t\t\t\t)}`;\n\t\t\t})\n\t\t\t.join(padding);\n\n\t\tconst header = `${options.stylize('UnknownEnumValueError', 'special')} > ${value}`;\n\t\tconst message = options.stylize(this.message, 'regexp');\n\t\tconst pairsBlock = `${padding}${pairs}`;\n\t\treturn `${header}\\n  ${message}\\n${pairsBlock}`;\n\t}\n}\n", "import { UnknownEnumValueError } from '../lib/errors/UnknownEnumValueError';\nimport { ValidationError } from '../lib/errors/ValidationError';\nimport { Result } from '../lib/Result';\nimport type { ValidatorOptions } from '../lib/util-types';\nimport { BaseValidator } from './imports';\n\nexport class NativeEnumValidator<T extends NativeEnumLike> extends BaseValidator<T[keyof T]> {\n\tpublic readonly enumShape: T;\n\tpublic readonly hasNumericElements: boolean = false;\n\tprivate readonly enumKeys: string[];\n\tprivate readonly enumMapping = new Map<string | number, T[keyof T]>();\n\n\tpublic constructor(enumShape: T, validatorOptions: ValidatorOptions = {}) {\n\t\tsuper(validatorOptions);\n\t\tthis.enumShape = enumShape;\n\n\t\tthis.enumKeys = Object.keys(enumShape).filter((key) => {\n\t\t\treturn typeof enumShape[enumShape[key]] !== 'number';\n\t\t});\n\n\t\tfor (const key of this.enumKeys) {\n\t\t\tconst enumValue = enumShape[key] as T[keyof T];\n\n\t\t\tthis.enumMapping.set(key, enumValue);\n\t\t\tthis.enumMapping.set(enumValue, enumValue);\n\n\t\t\tif (typeof enumValue === 'number') {\n\t\t\t\tthis.hasNumericElements = true;\n\t\t\t\tthis.enumMapping.set(`${enumValue}`, enumValue);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected override handle(value: unknown): Result<T[keyof T], ValidationError | UnknownEnumValueError> {\n\t\tconst typeOfValue = typeof value;\n\n\t\tif (typeOfValue === 'number') {\n\t\t\tif (!this.hasNumericElements) {\n\t\t\t\treturn Result.err(\n\t\t\t\t\tnew ValidationError('s.nativeEnum(T)', this.validatorOptions.message ?? 'Expected the value to be a string', value)\n\t\t\t\t);\n\t\t\t}\n\t\t} else if (typeOfValue !== 'string') {\n\t\t\t// typeOfValue !== 'number' is implied here\n\t\t\treturn Result.err(\n\t\t\t\tnew ValidationError('s.nativeEnum(T)', this.validatorOptions.message ?? 'Expected the value to be a string or number', value)\n\t\t\t);\n\t\t}\n\n\t\tconst casted = value as string | number;\n\n\t\tconst possibleEnumValue = this.enumMapping.get(casted);\n\n\t\treturn typeof possibleEnumValue === 'undefined'\n\t\t\t? Result.err(new UnknownEnumValueError(casted, this.enumKeys, this.enumMapping, this.validatorOptions))\n\t\t\t: Result.ok(possibleEnumValue);\n\t}\n\n\tprotected override clone(): this {\n\t\treturn Reflect.construct(this.constructor, [this.enumShape, this.validatorOptions]);\n\t}\n}\n\nexport interface NativeEnumLike {\n\t[key: string]: string | number;\n\t[key: number]: string;\n}\n", "import { ExpectedConstraintError } from '../lib/errors/ExpectedConstraintError';\nimport { Result } from '../lib/Result';\nimport type { ValidatorOptions } from '../lib/util-types';\nimport type { IConstraint } from './base/IConstraint';\nimport { equal, greaterThan, greaterThanOrEqual, lessThan, lessThanOrEqual, notEqual, type Comparator } from './util/operators';\nimport type { TypedArray } from './util/typedArray';\n\nexport type TypedArrayConstraintName = `s.typedArray(T).${'byteLength' | 'length'}${\n\t| 'LessThan'\n\t| 'LessThanOrEqual'\n\t| 'GreaterThan'\n\t| 'GreaterThanOrEqual'\n\t| 'Equal'\n\t| 'NotEqual'\n\t| 'Range'\n\t| 'RangeInclusive'\n\t| 'RangeExclusive'}()`;\n\nfunction typedArrayByteLengthComparator<T extends TypedArray>(\n\tcomparator: Comparator,\n\tname: TypedArrayConstraintName,\n\texpected: string,\n\tlength: number,\n\toptions?: ValidatorOptions\n): IConstraint<T> {\n\treturn {\n\t\trun(input: T) {\n\t\t\treturn comparator(input.byteLength, length) //\n\t\t\t\t? Result.ok(input)\n\t\t\t\t: Result.err(new ExpectedConstraintError(name, options?.message ?? 'Invalid Typed Array byte length', input, expected));\n\t\t}\n\t};\n}\n\nexport function typedArrayByteLengthLessThan<T extends TypedArray>(value: number, options?: ValidatorOptions): IConstraint<T> {\n\tconst expected = `expected.byteLength < ${value}`;\n\treturn typedArrayByteLengthComparator(lessThan, 's.typedArray(T).byteLengthLessThan()', expected, value, options);\n}\n\nexport function typedArrayByteLengthLessThanOrEqual<T extends TypedArray>(value: number, options?: ValidatorOptions): IConstraint<T> {\n\tconst expected = `expected.byteLength <= ${value}`;\n\treturn typedArrayByteLengthComparator(lessThanOrEqual, 's.typedArray(T).byteLengthLessThanOrEqual()', expected, value, options);\n}\n\nexport function typedArrayByteLengthGreaterThan<T extends TypedArray>(value: number, options?: ValidatorOptions): IConstraint<T> {\n\tconst expected = `expected.byteLength > ${value}`;\n\treturn typedArrayByteLengthComparator(greaterThan, 's.typedArray(T).byteLengthGreaterThan()', expected, value, options);\n}\n\nexport function typedArrayByteLengthGreaterThanOrEqual<T extends TypedArray>(value: number, options?: ValidatorOptions): IConstraint<T> {\n\tconst expected = `expected.byteLength >= ${value}`;\n\treturn typedArrayByteLengthComparator(greaterThanOrEqual, 's.typedArray(T).byteLengthGreaterThanOrEqual()', expected, value, options);\n}\n\nexport function typedArrayByteLengthEqual<T extends TypedArray>(value: number, options?: ValidatorOptions): IConstraint<T> {\n\tconst expected = `expected.byteLength === ${value}`;\n\treturn typedArrayByteLengthComparator(equal, 's.typedArray(T).byteLengthEqual()', expected, value, options);\n}\n\nexport function typedArrayByteLengthNotEqual<T extends TypedArray>(value: number, options?: ValidatorOptions): IConstraint<T> {\n\tconst expected = `expected.byteLength !== ${value}`;\n\treturn typedArrayByteLengthComparator(notEqual, 's.typedArray(T).byteLengthNotEqual()', expected, value, options);\n}\n\nexport function typedArrayByteLengthRange<T extends TypedArray>(start: number, endBefore: number, options?: ValidatorOptions): IConstraint<T> {\n\tconst expected = `expected.byteLength >= ${start} && expected.byteLength < ${endBefore}`;\n\treturn {\n\t\trun(input: T) {\n\t\t\treturn input.byteLength >= start && input.byteLength < endBefore //\n\t\t\t\t? Result.ok(input)\n\t\t\t\t: Result.err(\n\t\t\t\t\t\tnew ExpectedConstraintError(\n\t\t\t\t\t\t\t's.typedArray(T).byteLengthRange()',\n\t\t\t\t\t\t\toptions?.message ?? 'Invalid Typed Array byte length',\n\t\t\t\t\t\t\tinput,\n\t\t\t\t\t\t\texpected\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t}\n\t};\n}\n\nexport function typedArrayByteLengthRangeInclusive<T extends TypedArray>(start: number, end: number, options?: ValidatorOptions) {\n\tconst expected = `expected.byteLength >= ${start} && expected.byteLength <= ${end}`;\n\treturn {\n\t\trun(input: T) {\n\t\t\treturn input.byteLength >= start && input.byteLength <= end //\n\t\t\t\t? Result.ok(input)\n\t\t\t\t: Result.err(\n\t\t\t\t\t\tnew ExpectedConstraintError(\n\t\t\t\t\t\t\t's.typedArray(T).byteLengthRangeInclusive()',\n\t\t\t\t\t\t\toptions?.message ?? 'Invalid Typed Array byte length',\n\t\t\t\t\t\t\tinput,\n\t\t\t\t\t\t\texpected\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t}\n\t};\n}\n\nexport function typedArrayByteLengthRangeExclusive<T extends TypedArray>(\n\tstartAfter: number,\n\tendBefore: number,\n\toptions?: ValidatorOptions\n): IConstraint<T> {\n\tconst expected = `expected.byteLength > ${startAfter} && expected.byteLength < ${endBefore}`;\n\treturn {\n\t\trun(input: T) {\n\t\t\treturn input.byteLength > startAfter && input.byteLength < endBefore //\n\t\t\t\t? Result.ok(input)\n\t\t\t\t: Result.err(\n\t\t\t\t\t\tnew ExpectedConstraintError(\n\t\t\t\t\t\t\t's.typedArray(T).byteLengthRangeExclusive()',\n\t\t\t\t\t\t\toptions?.message ?? 'Invalid Typed Array byte length',\n\t\t\t\t\t\t\tinput,\n\t\t\t\t\t\t\texpected\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t}\n\t};\n}\n\nfunction typedArrayLengthComparator<T extends TypedArray>(\n\tcomparator: Comparator,\n\tname: TypedArrayConstraintName,\n\texpected: string,\n\tlength: number,\n\toptions?: ValidatorOptions\n): IConstraint<T> {\n\treturn {\n\t\trun(input: T) {\n\t\t\treturn comparator(input.length, length) //\n\t\t\t\t? Result.ok(input)\n\t\t\t\t: Result.err(new ExpectedConstraintError(name, options?.message ?? 'Invalid Typed Array length', input, expected));\n\t\t}\n\t};\n}\n\nexport function typedArrayLengthLessThan<T extends TypedArray>(value: number, options?: ValidatorOptions): IConstraint<T> {\n\tconst expected = `expected.length < ${value}`;\n\treturn typedArrayLengthComparator(lessThan, 's.typedArray(T).lengthLessThan()', expected, value, options);\n}\n\nexport function typedArrayLengthLessThanOrEqual<T extends TypedArray>(value: number, options?: ValidatorOptions): IConstraint<T> {\n\tconst expected = `expected.length <= ${value}`;\n\treturn typedArrayLengthComparator(lessThanOrEqual, 's.typedArray(T).lengthLessThanOrEqual()', expected, value, options);\n}\n\nexport function typedArrayLengthGreaterThan<T extends TypedArray>(value: number, options?: ValidatorOptions): IConstraint<T> {\n\tconst expected = `expected.length > ${value}`;\n\treturn typedArrayLengthComparator(greaterThan, 's.typedArray(T).lengthGreaterThan()', expected, value, options);\n}\n\nexport function typedArrayLengthGreaterThanOrEqual<T extends TypedArray>(value: number, options?: ValidatorOptions): IConstraint<T> {\n\tconst expected = `expected.length >= ${value}`;\n\treturn typedArrayLengthComparator(greaterThanOrEqual, 's.typedArray(T).lengthGreaterThanOrEqual()', expected, value, options);\n}\n\nexport function typedArrayLengthEqual<T extends TypedArray>(value: number, options?: ValidatorOptions): IConstraint<T> {\n\tconst expected = `expected.length === ${value}`;\n\treturn typedArrayLengthComparator(equal, 's.typedArray(T).lengthEqual()', expected, value, options);\n}\n\nexport function typedArrayLengthNotEqual<T extends TypedArray>(value: number, options?: ValidatorOptions): IConstraint<T> {\n\tconst expected = `expected.length !== ${value}`;\n\treturn typedArrayLengthComparator(notEqual, 's.typedArray(T).lengthNotEqual()', expected, value, options);\n}\n\nexport function typedArrayLengthRange<T extends TypedArray>(start: number, endBefore: number, options?: ValidatorOptions): IConstraint<T> {\n\tconst expected = `expected.length >= ${start} && expected.length < ${endBefore}`;\n\treturn {\n\t\trun(input: T) {\n\t\t\treturn input.length >= start && input.length < endBefore //\n\t\t\t\t? Result.ok(input)\n\t\t\t\t: Result.err(\n\t\t\t\t\t\tnew ExpectedConstraintError(\n\t\t\t\t\t\t\t's.typedArray(T).lengthRange()',\n\t\t\t\t\t\t\toptions?.message ?? 'Invalid Typed Array length',\n\t\t\t\t\t\t\tinput,\n\t\t\t\t\t\t\texpected\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t}\n\t};\n}\n\nexport function typedArrayLengthRangeInclusive<T extends TypedArray>(start: number, end: number, options?: ValidatorOptions): IConstraint<T> {\n\tconst expected = `expected.length >= ${start} && expected.length <= ${end}`;\n\treturn {\n\t\trun(input: T) {\n\t\t\treturn input.length >= start && input.length <= end //\n\t\t\t\t? Result.ok(input)\n\t\t\t\t: Result.err(\n\t\t\t\t\t\tnew ExpectedConstraintError(\n\t\t\t\t\t\t\t's.typedArray(T).lengthRangeInclusive()',\n\t\t\t\t\t\t\toptions?.message ?? 'Invalid Typed Array length',\n\t\t\t\t\t\t\tinput,\n\t\t\t\t\t\t\texpected\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t}\n\t};\n}\n\nexport function typedArrayLengthRangeExclusive<T extends TypedArray>(\n\tstartAfter: number,\n\tendBefore: number,\n\toptions?: ValidatorOptions\n): IConstraint<T> {\n\tconst expected = `expected.length > ${startAfter} && expected.length < ${endBefore}`;\n\treturn {\n\t\trun(input: T) {\n\t\t\treturn input.length > startAfter && input.length < endBefore //\n\t\t\t\t? Result.ok(input)\n\t\t\t\t: Result.err(\n\t\t\t\t\t\tnew ExpectedConstraintError(\n\t\t\t\t\t\t\t's.typedArray(T).lengthRangeExclusive()',\n\t\t\t\t\t\t\toptions?.message ?? 'Invalid Typed Array length',\n\t\t\t\t\t\t\tinput,\n\t\t\t\t\t\t\texpected\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t}\n\t};\n}\n", "const vowels = ['a', 'e', 'i', 'o', 'u'];\n\nexport const aOrAn = (word: string) => {\n\treturn `${vowels.includes(word[0].toLowerCase()) ? 'an' : 'a'} ${word}`;\n};\n", "export type TypedArray =\n\t| Int8Array\n\t| Uint8Array\n\t| Uint8ClampedArray\n\t| Int16Array\n\t| Uint16Array\n\t| Int32Array\n\t| Uint32Array\n\t| Float32Array\n\t| Float64Array\n\t| BigInt64Array\n\t| BigUint64Array;\n\nexport const TypedArrays = {\n\tInt8Array: (x: unknown): x is Int8Array => x instanceof Int8Array,\n\tUint8Array: (x: unknown): x is Uint8Array => x instanceof Uint8Array,\n\tUint8ClampedArray: (x: unknown): x is Uint8ClampedArray => x instanceof Uint8ClampedArray,\n\tInt16Array: (x: unknown): x is Int16Array => x instanceof Int16Array,\n\tUint16Array: (x: unknown): x is Uint16Array => x instanceof Uint16Array,\n\tInt32Array: (x: unknown): x is Int32Array => x instanceof Int32Array,\n\tUint32Array: (x: unknown): x is Uint32Array => x instanceof Uint32Array,\n\tFloat32Array: (x: unknown): x is Float32Array => x instanceof Float32Array,\n\tFloat64Array: (x: unknown): x is Float64Array => x instanceof Float64Array,\n\tBigInt64Array: (x: unknown): x is BigInt64Array => x instanceof BigInt64Array,\n\tBigUint64Array: (x: unknown): x is BigUint64Array => x instanceof BigUint64Array,\n\tTypedArray: (x: unknown): x is TypedArray => ArrayBuffer.isView(x) && !(x instanceof DataView)\n} as const;\n\nexport type TypedArrayName = keyof typeof TypedArrays;\n", "import type { IConstraint } from '../constraints/base/IConstraint';\nimport {\n\ttypedArrayByteLengthEqual,\n\ttypedArrayByteLengthGreaterThan,\n\ttypedArrayByteLengthGreaterThanOrEqual,\n\ttypedArrayByteLengthLessThan,\n\ttypedArrayByteLengthLessThanOrEqual,\n\ttypedArrayByteLengthNotEqual,\n\ttypedArrayByteLengthRange,\n\ttypedArrayByteLengthRangeExclusive,\n\ttypedArrayByteLengthRangeInclusive,\n\ttypedArrayLengthEqual,\n\ttypedArrayLengthGreaterThan,\n\ttypedArrayLengthGreaterThanOrEqual,\n\ttypedArrayLengthLessThan,\n\ttypedArrayLengthLessThanOrEqual,\n\ttypedArrayLengthNotEqual,\n\ttypedArrayLengthRange,\n\ttypedArrayLengthRangeExclusive,\n\ttypedArrayLengthRangeInclusive\n} from '../constraints/TypedArrayLengthConstraints';\nimport { aOrAn } from '../constraints/util/common/vowels';\nimport { TypedArrays, type TypedArray, type TypedArrayName } from '../constraints/util/typedArray';\nimport { ValidationError } from '../lib/errors/ValidationError';\nimport { Result } from '../lib/Result';\nimport type { ValidatorOptions } from '../lib/util-types';\nimport { BaseValidator } from './imports';\n\nexport class TypedArrayValidator<T extends TypedArray> extends BaseValidator<T> {\n\tprivate readonly type: TypedArrayName;\n\n\tpublic constructor(type: TypedArrayName, validatorOptions: ValidatorOptions = {}, constraints: readonly IConstraint<T>[] = []) {\n\t\tsuper(validatorOptions, constraints);\n\t\tthis.type = type;\n\t}\n\n\tpublic byteLengthLessThan(length: number, options: ValidatorOptions = this.validatorOptions) {\n\t\treturn this.addConstraint(typedArrayByteLengthLessThan(length, options));\n\t}\n\n\tpublic byteLengthLessThanOrEqual(length: number, options: ValidatorOptions = this.validatorOptions) {\n\t\treturn this.addConstraint(typedArrayByteLengthLessThanOrEqual(length, options));\n\t}\n\n\tpublic byteLengthGreaterThan(length: number, options: ValidatorOptions = this.validatorOptions) {\n\t\treturn this.addConstraint(typedArrayByteLengthGreaterThan(length, options));\n\t}\n\n\tpublic byteLengthGreaterThanOrEqual(length: number, options: ValidatorOptions = this.validatorOptions) {\n\t\treturn this.addConstraint(typedArrayByteLengthGreaterThanOrEqual(length, options));\n\t}\n\n\tpublic byteLengthEqual(length: number, options: ValidatorOptions = this.validatorOptions) {\n\t\treturn this.addConstraint(typedArrayByteLengthEqual(length, options));\n\t}\n\n\tpublic byteLengthNotEqual(length: number, options: ValidatorOptions = this.validatorOptions) {\n\t\treturn this.addConstraint(typedArrayByteLengthNotEqual(length, options));\n\t}\n\n\tpublic byteLengthRange(start: number, endBefore: number, options: ValidatorOptions = this.validatorOptions) {\n\t\treturn this.addConstraint(typedArrayByteLengthRange(start, endBefore, options));\n\t}\n\n\tpublic byteLengthRangeInclusive(startAt: number, endAt: number, options: ValidatorOptions = this.validatorOptions) {\n\t\treturn this.addConstraint(typedArrayByteLengthRangeInclusive(startAt, endAt, options) as IConstraint<T>);\n\t}\n\n\tpublic byteLengthRangeExclusive(startAfter: number, endBefore: number, options: ValidatorOptions = this.validatorOptions) {\n\t\treturn this.addConstraint(typedArrayByteLengthRangeExclusive(startAfter, endBefore, options));\n\t}\n\n\tpublic lengthLessThan(length: number, options: ValidatorOptions = this.validatorOptions) {\n\t\treturn this.addConstraint(typedArrayLengthLessThan(length, options));\n\t}\n\n\tpublic lengthLessThanOrEqual(length: number, options: ValidatorOptions = this.validatorOptions) {\n\t\treturn this.addConstraint(typedArrayLengthLessThanOrEqual(length, options));\n\t}\n\n\tpublic lengthGreaterThan(length: number, options: ValidatorOptions = this.validatorOptions) {\n\t\treturn this.addConstraint(typedArrayLengthGreaterThan(length, options));\n\t}\n\n\tpublic lengthGreaterThanOrEqual(length: number, options: ValidatorOptions = this.validatorOptions) {\n\t\treturn this.addConstraint(typedArrayLengthGreaterThanOrEqual(length, options));\n\t}\n\n\tpublic lengthEqual(length: number, options: ValidatorOptions = this.validatorOptions) {\n\t\treturn this.addConstraint(typedArrayLengthEqual(length, options));\n\t}\n\n\tpublic lengthNotEqual(length: number, options: ValidatorOptions = this.validatorOptions) {\n\t\treturn this.addConstraint(typedArrayLengthNotEqual(length, options));\n\t}\n\n\tpublic lengthRange(start: number, endBefore: number, options: ValidatorOptions = this.validatorOptions) {\n\t\treturn this.addConstraint(typedArrayLengthRange(start, endBefore, options));\n\t}\n\n\tpublic lengthRangeInclusive(startAt: number, endAt: number, options: ValidatorOptions = this.validatorOptions) {\n\t\treturn this.addConstraint(typedArrayLengthRangeInclusive(startAt, endAt, options));\n\t}\n\n\tpublic lengthRangeExclusive(startAfter: number, endBefore: number, options: ValidatorOptions = this.validatorOptions) {\n\t\treturn this.addConstraint(typedArrayLengthRangeExclusive(startAfter, endBefore, options));\n\t}\n\n\tprotected override clone(): this {\n\t\treturn Reflect.construct(this.constructor, [this.type, this.validatorOptions, this.constraints]);\n\t}\n\n\tprotected handle(value: unknown): Result<T, ValidationError> {\n\t\treturn TypedArrays[this.type](value)\n\t\t\t? Result.ok(value as T)\n\t\t\t: Result.err(new ValidationError('s.typedArray()', this.validatorOptions.message ?? `Expected ${aOrAn(this.type)}`, value));\n\t}\n}\n", "import type { TypedArray, TypedArrayName } from '../constraints/util/typedArray';\nimport type { Unwrap, UnwrapTuple, ValidatorOptions } from '../lib/util-types';\nimport {\n\tArrayValidator,\n\tBaseValidator,\n\tBigIntValidator,\n\tBooleanValidator,\n\tDateValidator,\n\tInstanceValidator,\n\tLiteralValidator,\n\tMapValidator,\n\tNeverValidator,\n\tNullishValidator,\n\tNumberValidator,\n\tObjectValidator,\n\tObjectValidatorStrategy,\n\tPassthroughValidator,\n\tRecordValidator,\n\tSetValidator,\n\tStringValidator,\n\tTupleValidator,\n\tUnionValidator\n} from '../validators/imports';\nimport { LazyValidator } from '../validators/LazyValidator';\nimport { NativeEnumValidator, type NativeEnumLike } from '../validators/NativeEnumValidator';\nimport { TypedArrayValidator } from '../validators/TypedArrayValidator';\nimport type { Constructor, MappedObjectValidator } from './util-types';\n\nexport class Shapes {\n\tpublic string(options?: ValidatorOptions) {\n\t\treturn new StringValidator(options);\n\t}\n\n\tpublic number(options?: ValidatorOptions) {\n\t\treturn new NumberValidator(options);\n\t}\n\n\tpublic bigint(options?: ValidatorOptions) {\n\t\treturn new BigIntValidator(options);\n\t}\n\n\tpublic boolean(options?: ValidatorOptions) {\n\t\treturn new BooleanValidator(options);\n\t}\n\n\tpublic date(options?: ValidatorOptions) {\n\t\treturn new DateValidator(options);\n\t}\n\n\tpublic object<T extends object>(shape: MappedObjectValidator<T>, options?: ValidatorOptions) {\n\t\treturn new ObjectValidator<T>(shape, ObjectValidatorStrategy.Ignore, options);\n\t}\n\n\tpublic undefined(options?: ValidatorOptions) {\n\t\treturn this.literal(undefined, { equalsOptions: options });\n\t}\n\n\tpublic null(options?: ValidatorOptions) {\n\t\treturn this.literal(null, { equalsOptions: options });\n\t}\n\n\tpublic nullish(options?: ValidatorOptions) {\n\t\treturn new NullishValidator(options);\n\t}\n\n\tpublic any(options?: ValidatorOptions) {\n\t\treturn new PassthroughValidator<any>(options);\n\t}\n\n\tpublic unknown(options?: ValidatorOptions) {\n\t\treturn new PassthroughValidator<unknown>(options);\n\t}\n\n\tpublic never(options?: ValidatorOptions) {\n\t\treturn new NeverValidator(options);\n\t}\n\n\tpublic enum<T>(values: readonly T[], options?: ValidatorOptions) {\n\t\treturn this.union(\n\t\t\tvalues.map((value) => this.literal(value, { equalsOptions: options })),\n\t\t\toptions\n\t\t);\n\t}\n\n\tpublic nativeEnum<T extends NativeEnumLike>(enumShape: T, options?: ValidatorOptions): NativeEnumValidator<T> {\n\t\treturn new NativeEnumValidator(enumShape, options);\n\t}\n\n\tpublic literal<T>(value: T, options?: { dateOptions?: ValidatorOptions; equalsOptions?: ValidatorOptions }): BaseValidator<T> {\n\t\tif (value instanceof Date) {\n\t\t\treturn this.date(options?.dateOptions).equal(value, options?.equalsOptions) as unknown as BaseValidator<T>;\n\t\t}\n\n\t\treturn new LiteralValidator(value, options?.equalsOptions);\n\t}\n\n\tpublic instance<T>(expected: Constructor<T>, options?: ValidatorOptions): InstanceValidator<T> {\n\t\treturn new InstanceValidator(expected, options);\n\t}\n\n\tpublic union<T extends BaseValidator<any>[]>(validators: T, options?: ValidatorOptions): UnionValidator<Unwrap<T[number]>> {\n\t\treturn new UnionValidator(validators, options);\n\t}\n\n\tpublic array<T>(validator: BaseValidator<T[][number]>, options?: ValidatorOptions): ArrayValidator<T[], T[][number]>;\n\tpublic array<T extends unknown[]>(validator: BaseValidator<T[number]>, options?: ValidatorOptions): ArrayValidator<T, T[number]>;\n\tpublic array<T extends unknown[]>(validator: BaseValidator<T[number]>, options?: ValidatorOptions) {\n\t\treturn new ArrayValidator(validator, options);\n\t}\n\n\tpublic typedArray<T extends TypedArray>(type: TypedArrayName = 'TypedArray', options?: ValidatorOptions) {\n\t\treturn new TypedArrayValidator<T>(type, options);\n\t}\n\n\tpublic int8Array(options?: ValidatorOptions) {\n\t\treturn this.typedArray<Int8Array>('Int8Array', options);\n\t}\n\n\tpublic uint8Array(options?: ValidatorOptions) {\n\t\treturn this.typedArray<Uint8Array>('Uint8Array', options);\n\t}\n\n\tpublic uint8ClampedArray(options?: ValidatorOptions) {\n\t\treturn this.typedArray<Uint8ClampedArray>('Uint8ClampedArray', options);\n\t}\n\n\tpublic int16Array(options?: ValidatorOptions) {\n\t\treturn this.typedArray<Int16Array>('Int16Array', options);\n\t}\n\n\tpublic uint16Array(options?: ValidatorOptions) {\n\t\treturn this.typedArray<Uint16Array>('Uint16Array', options);\n\t}\n\n\tpublic int32Array(options?: ValidatorOptions) {\n\t\treturn this.typedArray<Int32Array>('Int32Array', options);\n\t}\n\n\tpublic uint32Array(options?: ValidatorOptions) {\n\t\treturn this.typedArray<Uint32Array>('Uint32Array', options);\n\t}\n\n\tpublic float32Array(options?: ValidatorOptions) {\n\t\treturn this.typedArray<Float32Array>('Float32Array', options);\n\t}\n\n\tpublic float64Array(options?: ValidatorOptions) {\n\t\treturn this.typedArray<Float64Array>('Float64Array', options);\n\t}\n\n\tpublic bigInt64Array(options?: ValidatorOptions) {\n\t\treturn this.typedArray<BigInt64Array>('BigInt64Array', options);\n\t}\n\n\tpublic bigUint64Array(options?: ValidatorOptions) {\n\t\treturn this.typedArray<BigUint64Array>('BigUint64Array', options);\n\t}\n\n\tpublic tuple<T extends [...BaseValidator<any>[]]>(validators: [...T], options?: ValidatorOptions): TupleValidator<UnwrapTuple<T>> {\n\t\treturn new TupleValidator(validators, options);\n\t}\n\n\tpublic set<T>(validator: BaseValidator<T>, options?: ValidatorOptions) {\n\t\treturn new SetValidator(validator, options);\n\t}\n\n\tpublic record<T>(validator: BaseValidator<T>, options?: ValidatorOptions) {\n\t\treturn new RecordValidator(validator, options);\n\t}\n\n\tpublic map<T, U>(keyValidator: BaseValidator<T>, valueValidator: BaseValidator<U>, options?: ValidatorOptions) {\n\t\treturn new MapValidator(keyValidator, valueValidator, options);\n\t}\n\n\tpublic lazy<T extends BaseValidator<unknown>>(validator: (value: unknown) => T, options?: ValidatorOptions) {\n\t\treturn new LazyValidator(validator, options);\n\t}\n}\n", "import { Shapes } from './lib/Shapes';\n\nexport const s = new Shapes();\n\nexport * from './lib/Result';\nexport * from './lib/configs';\nexport * from './lib/errors/BaseError';\nexport * from './lib/errors/CombinedError';\nexport * from './lib/errors/CombinedPropertyError';\nexport * from './lib/errors/ExpectedConstraintError';\nexport * from './lib/errors/ExpectedValidationError';\nexport * from './lib/errors/MissingPropertyError';\nexport * from './lib/errors/MultiplePossibilitiesConstraintError';\nexport * from './lib/errors/UnknownEnumValueError';\nexport * from './lib/errors/UnknownPropertyError';\nexport * from './lib/errors/ValidationError';\nexport * from './type-exports';\n", "export * from './escapers.js';\nexport * from './formatters.js';\n\n/**\n * The {@link https://github.com/discordjs/discord.js/blob/main/packages/formatters#readme | @discordjs/formatters} version\n * that you are currently using.\n *\n * @privateRemarks This needs to explicitly be `string` so it is not typed as a \"const string\" that gets injected by esbuild.\n */\nexport const version = '0.6.0' as string;\n", "/* eslint-disable prefer-named-capture-group */\n\n/**\n * The options that affect what will be escaped.\n */\nexport interface EscapeMarkdownOptions {\n\t/**\n\t * Whether to escape bold text.\n\t *\n\t * @defaultValue `true`\n\t */\n\tbold?: boolean;\n\n\t/**\n\t * Whether to escape bulleted lists.\n\t *\n\t * @defaultValue `false`\n\t */\n\tbulletedList?: boolean;\n\n\t/**\n\t * Whether to escape code blocks.\n\t *\n\t * @defaultValue `true`\n\t */\n\tcodeBlock?: boolean;\n\n\t/**\n\t * Whether to escape text inside code blocks.\n\t *\n\t * @defaultValue `true`\n\t */\n\tcodeBlockContent?: boolean;\n\n\t/**\n\t * Whether to escape `\\`.\n\t *\n\t * @defaultValue `true`\n\t */\n\tescape?: boolean;\n\n\t/**\n\t * Whether to escape headings.\n\t *\n\t * @defaultValue `false`\n\t */\n\theading?: boolean;\n\n\t/**\n\t * Whether to escape inline code.\n\t *\n\t * @defaultValue `true`\n\t */\n\tinlineCode?: boolean;\n\n\t/**\n\t * Whether to escape text inside inline code.\n\t *\n\t * @defaultValue `true`\n\t */\n\tinlineCodeContent?: boolean;\n\t/**\n\t * Whether to escape italics.\n\t *\n\t * @defaultValue `true`\n\t */\n\titalic?: boolean;\n\n\t/**\n\t * Whether to escape masked links.\n\t *\n\t * @defaultValue `false`\n\t */\n\tmaskedLink?: boolean;\n\n\t/**\n\t * Whether to escape numbered lists.\n\t *\n\t * @defaultValue `false`\n\t */\n\tnumberedList?: boolean;\n\n\t/**\n\t * Whether to escape spoilers.\n\t *\n\t * @defaultValue `true`\n\t */\n\tspoiler?: boolean;\n\n\t/**\n\t * Whether to escape strikethroughs.\n\t *\n\t * @defaultValue `true`\n\t */\n\tstrikethrough?: boolean;\n\n\t/**\n\t * Whether to escape underlines.\n\t *\n\t * @defaultValue `true`\n\t */\n\tunderline?: boolean;\n}\n\n/**\n * Escapes any Discord-flavored markdown in a string.\n *\n * @param text - Content to escape\n * @param options - Options for escaping the markdown\n */\nexport function escapeMarkdown(text: string, options: EscapeMarkdownOptions = {}): string {\n\tconst {\n\t\tcodeBlock = true,\n\t\tinlineCode = true,\n\t\tbold = true,\n\t\titalic = true,\n\t\tunderline = true,\n\t\tstrikethrough = true,\n\t\tspoiler = true,\n\t\tcodeBlockContent = true,\n\t\tinlineCodeContent = true,\n\t\tescape = true,\n\t\theading = false,\n\t\tbulletedList = false,\n\t\tnumberedList = false,\n\t\tmaskedLink = false,\n\t} = options;\n\n\tif (!codeBlockContent) {\n\t\treturn text\n\t\t\t.split('```')\n\t\t\t.map((subString, index, array) => {\n\t\t\t\tif (index % 2 && index !== array.length - 1) return subString;\n\t\t\t\treturn escapeMarkdown(subString, {\n\t\t\t\t\tinlineCode,\n\t\t\t\t\tbold,\n\t\t\t\t\titalic,\n\t\t\t\t\tunderline,\n\t\t\t\t\tstrikethrough,\n\t\t\t\t\tspoiler,\n\t\t\t\t\tinlineCodeContent,\n\t\t\t\t\tescape,\n\t\t\t\t\theading,\n\t\t\t\t\tbulletedList,\n\t\t\t\t\tnumberedList,\n\t\t\t\t\tmaskedLink,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.join(codeBlock ? '\\\\`\\\\`\\\\`' : '```');\n\t}\n\n\tif (!inlineCodeContent) {\n\t\treturn text\n\t\t\t.split(/(?<=^|[^`])`(?=[^`]|$)/g)\n\t\t\t.map((subString, index, array) => {\n\t\t\t\tif (index % 2 && index !== array.length - 1) return subString;\n\t\t\t\treturn escapeMarkdown(subString, {\n\t\t\t\t\tcodeBlock,\n\t\t\t\t\tbold,\n\t\t\t\t\titalic,\n\t\t\t\t\tunderline,\n\t\t\t\t\tstrikethrough,\n\t\t\t\t\tspoiler,\n\t\t\t\t\tescape,\n\t\t\t\t\theading,\n\t\t\t\t\tbulletedList,\n\t\t\t\t\tnumberedList,\n\t\t\t\t\tmaskedLink,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.join(inlineCode ? '\\\\`' : '`');\n\t}\n\n\tlet res = text;\n\tif (escape) res = escapeEscape(res);\n\tif (inlineCode) res = escapeInlineCode(res);\n\tif (codeBlock) res = escapeCodeBlock(res);\n\tif (italic) res = escapeItalic(res);\n\tif (bold) res = escapeBold(res);\n\tif (underline) res = escapeUnderline(res);\n\tif (strikethrough) res = escapeStrikethrough(res);\n\tif (spoiler) res = escapeSpoiler(res);\n\tif (heading) res = escapeHeading(res);\n\tif (bulletedList) res = escapeBulletedList(res);\n\tif (numberedList) res = escapeNumberedList(res);\n\tif (maskedLink) res = escapeMaskedLink(res);\n\treturn res;\n}\n\n/**\n * Escapes code block markdown in a string.\n *\n * @param text - Content to escape\n */\nexport function escapeCodeBlock(text: string): string {\n\treturn text.replaceAll('```', '\\\\`\\\\`\\\\`');\n}\n\n/**\n * Escapes inline code markdown in a string.\n *\n * @param text - Content to escape\n */\nexport function escapeInlineCode(text: string): string {\n\treturn text.replaceAll(/(?<=^|[^`])``?(?=[^`]|$)/g, (match) => (match.length === 2 ? '\\\\`\\\\`' : '\\\\`'));\n}\n\n/**\n * Escapes italic markdown in a string.\n *\n * @param text - Content to escape\n */\nexport function escapeItalic(text: string): string {\n\tlet idx = 0;\n\tconst newText = text.replaceAll(/(?<=^|[^*])\\*([^*]|\\*\\*|$)/g, (_, match) => {\n\t\tif (match === '**') return ++idx % 2 ? `\\\\*${match}` : `${match}\\\\*`;\n\t\treturn `\\\\*${match}`;\n\t});\n\tidx = 0;\n\treturn newText.replaceAll(/(?<=^|[^_])(?<!<a?:.+|https?:\\/\\/\\S+)_(?!:\\d+>)([^_]|__|$)/g, (_, match) => {\n\t\tif (match === '__') return ++idx % 2 ? `\\\\_${match}` : `${match}\\\\_`;\n\t\treturn `\\\\_${match}`;\n\t});\n}\n\n/**\n * Escapes bold markdown in a string.\n *\n * @param text - Content to escape\n */\nexport function escapeBold(text: string): string {\n\tlet idx = 0;\n\treturn text.replaceAll(/\\*\\*(\\*)?/g, (_, match) => {\n\t\tif (match) return ++idx % 2 ? `${match}\\\\*\\\\*` : `\\\\*\\\\*${match}`;\n\t\treturn '\\\\*\\\\*';\n\t});\n}\n\n/**\n * Escapes underline markdown in a string.\n *\n * @param text - Content to escape\n */\nexport function escapeUnderline(text: string): string {\n\tlet idx = 0;\n\treturn text.replaceAll(/(?<!<a?:.+|https?:\\/\\/\\S+)__(_)?(?!:\\d+>)/g, (_, match) => {\n\t\tif (match) return ++idx % 2 ? `${match}\\\\_\\\\_` : `\\\\_\\\\_${match}`;\n\t\treturn '\\\\_\\\\_';\n\t});\n}\n\n/**\n * Escapes strikethrough markdown in a string.\n *\n * @param text - Content to escape\n */\nexport function escapeStrikethrough(text: string): string {\n\treturn text.replaceAll('~~', '\\\\~\\\\~');\n}\n\n/**\n * Escapes spoiler markdown in a string.\n *\n * @param text - Content to escape\n */\nexport function escapeSpoiler(text: string): string {\n\treturn text.replaceAll('||', '\\\\|\\\\|');\n}\n\n/**\n * Escapes escape characters in a string.\n *\n * @param text - Content to escape\n */\nexport function escapeEscape(text: string): string {\n\treturn text.replaceAll('\\\\', '\\\\\\\\');\n}\n\n/**\n * Escapes heading characters in a string.\n *\n * @param text - Content to escape\n */\nexport function escapeHeading(text: string): string {\n\treturn text.replaceAll(/^( {0,2})([*-] )?( *)(#{1,3} )/gm, '$1$2$3\\\\$4');\n}\n\n/**\n * Escapes bulleted list characters in a string.\n *\n * @param text - Content to escape\n */\nexport function escapeBulletedList(text: string): string {\n\treturn text.replaceAll(/^( *)([*-])( +)/gm, '$1\\\\$2$3');\n}\n\n/**\n * Escapes numbered list characters in a string.\n *\n * @param text - Content to escape\n */\nexport function escapeNumberedList(text: string): string {\n\treturn text.replaceAll(/^( *\\d+)\\./gm, '$1\\\\.');\n}\n\n/**\n * Escapes masked link characters in a string.\n *\n * @param text - Content to escape\n */\nexport function escapeMaskedLink(text: string): string {\n\treturn text.replaceAll(/\\[.+]\\(.+\\)/gm, '\\\\$&');\n}\n", "import type { URL } from 'node:url';\nimport type { Snowflake } from 'discord-api-types/globals';\n\n/**\n * Wraps the content inside a code block with no language.\n *\n * @typeParam Content - This is inferred by the supplied content\n * @param content - The content to wrap\n */\nexport function codeBlock<Content extends string>(content: Content): `\\`\\`\\`\\n${Content}\\n\\`\\`\\``;\n\n/**\n * Wraps the content inside a code block with the specified language.\n *\n * @typeParam Language - This is inferred by the supplied language\n * @typeParam Content - This is inferred by the supplied content\n * @param language - The language for the code block\n * @param content - The content to wrap\n */\nexport function codeBlock<Language extends string, Content extends string>(\n\tlanguage: Language,\n\tcontent: Content,\n): `\\`\\`\\`${Language}\\n${Content}\\n\\`\\`\\``;\n\nexport function codeBlock(language: string, content?: string): string {\n\treturn content === undefined ? `\\`\\`\\`\\n${language}\\n\\`\\`\\`` : `\\`\\`\\`${language}\\n${content}\\n\\`\\`\\``;\n}\n\n/**\n * Wraps the content inside \\`backticks\\` which formats it as inline code.\n *\n * @typeParam Content - This is inferred by the supplied content\n * @param content - The content to wrap\n */\nexport function inlineCode<Content extends string>(content: Content): `\\`${Content}\\`` {\n\treturn `\\`${content}\\``;\n}\n\n/**\n * Formats the content into italic text.\n *\n * @typeParam Content - This is inferred by the supplied content\n * @param content - The content to wrap\n */\nexport function italic<Content extends string>(content: Content): `_${Content}_` {\n\treturn `_${content}_`;\n}\n\n/**\n * Formats the content into bold text.\n *\n * @typeParam Content - This is inferred by the supplied content\n * @param content - The content to wrap\n */\nexport function bold<Content extends string>(content: Content): `**${Content}**` {\n\treturn `**${content}**`;\n}\n\n/**\n * Formats the content into underscored text.\n *\n * @typeParam Content - This is inferred by the supplied content\n * @param content - The content to wrap\n * @deprecated Use {@link underline} instead.\n */\nexport function underscore<Content extends string>(content: Content): `__${Content}__` {\n\treturn underline(content);\n}\n\n/**\n * Formats the content into underlined text.\n *\n * @typeParam Content - This is inferred by the supplied content\n * @param content - The content to wrap\n */\nexport function underline<Content extends string>(content: Content): `__${Content}__` {\n\treturn `__${content}__`;\n}\n\n/**\n * Formats the content into strike-through text.\n *\n * @typeParam Content - This is inferred by the supplied content\n * @param content - The content to wrap\n */\nexport function strikethrough<Content extends string>(content: Content): `~~${Content}~~` {\n\treturn `~~${content}~~`;\n}\n\n/**\n * Formats the content into a quote.\n *\n * @remarks This needs to be at the start of the line for Discord to format it.\n * @typeParam Content - This is inferred by the supplied content\n * @param content - The content to wrap\n */\nexport function quote<Content extends string>(content: Content): `> ${Content}` {\n\treturn `> ${content}`;\n}\n\n/**\n * Formats the content into a block quote.\n *\n * @remarks This needs to be at the start of the line for Discord to format it.\n * @typeParam Content - This is inferred by the supplied content\n * @param content - The content to wrap\n */\nexport function blockQuote<Content extends string>(content: Content): `>>> ${Content}` {\n\treturn `>>> ${content}`;\n}\n\n/**\n * Wraps the URL into `<>` which stops it from embedding.\n *\n * @typeParam Content - This is inferred by the supplied content\n * @param url - The URL to wrap\n */\nexport function hideLinkEmbed<Content extends string>(url: Content): `<${Content}>`;\n\n/**\n * Wraps the URL into `<>` which stops it from embedding.\n *\n * @param url - The URL to wrap\n */\nexport function hideLinkEmbed(url: URL): `<${string}>`;\n\nexport function hideLinkEmbed(url: URL | string) {\n\treturn `<${url}>`;\n}\n\n/**\n * Formats the content and the URL into a masked URL.\n *\n * @typeParam Content - This is inferred by the supplied content\n * @param content - The content to display\n * @param url - The URL the content links to\n */\nexport function hyperlink<Content extends string>(content: Content, url: URL): `[${Content}](${string})`;\n\n/**\n * Formats the content and the URL into a masked URL.\n *\n * @typeParam Content - This is inferred by the supplied content\n * @typeParam Url - This is inferred by the supplied URL\n * @param content - The content to display\n * @param url - The URL the content links to\n */\nexport function hyperlink<Content extends string, Url extends string>(\n\tcontent: Content,\n\turl: Url,\n): `[${Content}](${Url})`;\n\n/**\n * Formats the content and the URL into a masked URL with a custom tooltip.\n *\n * @typeParam Content - This is inferred by the supplied content\n * @typeParam Title - This is inferred by the supplied title\n * @param content - The content to display\n * @param url - The URL the content links to\n * @param title - The title shown when hovering on the masked link\n */\nexport function hyperlink<Content extends string, Title extends string>(\n\tcontent: Content,\n\turl: URL,\n\ttitle: Title,\n): `[${Content}](${string} \"${Title}\")`;\n\n/**\n * Formats the content and the URL into a masked URL with a custom tooltip.\n *\n * @typeParam Content - This is inferred by the supplied content\n * @typeParam Url - This is inferred by the supplied URL\n * @typeParam Title - This is inferred by the supplied title\n * @param content - The content to display\n * @param url - The URL the content links to\n * @param title - The title shown when hovering on the masked link\n */\nexport function hyperlink<Content extends string, Url extends string, Title extends string>(\n\tcontent: Content,\n\turl: Url,\n\ttitle: Title,\n): `[${Content}](${Url} \"${Title}\")`;\n\nexport function hyperlink(content: string, url: URL | string, title?: string) {\n\treturn title ? `[${content}](${url} \"${title}\")` : `[${content}](${url})`;\n}\n\n/**\n * Formats the content into a spoiler.\n *\n * @typeParam Content - This is inferred by the supplied content\n * @param content - The content to wrap\n */\nexport function spoiler<Content extends string>(content: Content): `||${Content}||` {\n\treturn `||${content}||`;\n}\n\n/**\n * Formats a user id into a user mention.\n *\n * @typeParam UserId - This is inferred by the supplied user id\n * @param userId - The user id to format\n */\nexport function userMention<UserId extends Snowflake>(userId: UserId): `<@${UserId}>` {\n\treturn `<@${userId}>`;\n}\n\n/**\n * Formats a channel id into a channel mention.\n *\n * @typeParam ChannelId - This is inferred by the supplied channel id\n * @param channelId - The channel id to format\n */\nexport function channelMention<ChannelId extends Snowflake>(channelId: ChannelId): `<#${ChannelId}>` {\n\treturn `<#${channelId}>`;\n}\n\n/**\n * Formats a role id into a role mention.\n *\n * @typeParam RoleId - This is inferred by the supplied role id\n * @param roleId - The role id to format\n */\nexport function roleMention<RoleId extends Snowflake>(roleId: RoleId): `<@&${RoleId}>` {\n\treturn `<@&${roleId}>`;\n}\n\n/**\n * Formats an application command name, subcommand group name, subcommand name, and id into an application command mention.\n *\n * @typeParam CommandName - This is inferred by the supplied command name\n * @typeParam SubcommandGroupName - This is inferred by the supplied subcommand group name\n * @typeParam SubcommandName - This is inferred by the supplied subcommand name\n * @typeParam CommandId - This is inferred by the supplied command id\n * @param commandName - The application command name to format\n * @param subcommandGroupName - The subcommand group name to format\n * @param subcommandName - The subcommand name to format\n * @param commandId - The application command id to format\n */\nexport function chatInputApplicationCommandMention<\n\tCommandName extends string,\n\tSubcommandGroupName extends string,\n\tSubcommandName extends string,\n\tCommandId extends Snowflake,\n>(\n\tcommandName: CommandName,\n\tsubcommandGroupName: SubcommandGroupName,\n\tsubcommandName: SubcommandName,\n\tcommandId: CommandId,\n): `</${CommandName} ${SubcommandGroupName} ${SubcommandName}:${CommandId}>`;\n\n/**\n * Formats an application command name, subcommand name, and id into an application command mention.\n *\n * @typeParam CommandName - This is inferred by the supplied command name\n * @typeParam SubcommandName - This is inferred by the supplied subcommand name\n * @typeParam CommandId - This is inferred by the supplied command id\n * @param commandName - The application command name to format\n * @param subcommandName - The subcommand name to format\n * @param commandId - The application command id to format\n */\nexport function chatInputApplicationCommandMention<\n\tCommandName extends string,\n\tSubcommandName extends string,\n\tCommandId extends Snowflake,\n>(\n\tcommandName: CommandName,\n\tsubcommandName: SubcommandName,\n\tcommandId: CommandId,\n): `</${CommandName} ${SubcommandName}:${CommandId}>`;\n\n/**\n * Formats an application command name and id into an application command mention.\n *\n * @typeParam CommandName - This is inferred by the supplied command name\n * @typeParam CommandId - This is inferred by the supplied command id\n * @param commandName - The application command name to format\n * @param commandId - The application command id to format\n */\nexport function chatInputApplicationCommandMention<CommandName extends string, CommandId extends Snowflake>(\n\tcommandName: CommandName,\n\tcommandId: CommandId,\n): `</${CommandName}:${CommandId}>`;\n\nexport function chatInputApplicationCommandMention<\n\tCommandName extends string,\n\tSubcommandGroupName extends Snowflake | string,\n\tSubcommandName extends Snowflake | string,\n\tCommandId extends Snowflake,\n>(\n\tcommandName: CommandName,\n\tsubcommandGroupName: SubcommandGroupName,\n\tsubcommandName?: SubcommandName,\n\tcommandId?: CommandId,\n):\n\t| `</${CommandName} ${SubcommandGroupName} ${SubcommandName}:${CommandId}>`\n\t| `</${CommandName} ${SubcommandGroupName}:${SubcommandName}>`\n\t| `</${CommandName}:${SubcommandGroupName}>` {\n\tif (commandId !== undefined) {\n\t\treturn `</${commandName} ${subcommandGroupName} ${subcommandName!}:${commandId}>`;\n\t}\n\n\tif (subcommandName !== undefined) {\n\t\treturn `</${commandName} ${subcommandGroupName}:${subcommandName}>`;\n\t}\n\n\treturn `</${commandName}:${subcommandGroupName}>`;\n}\n\n/**\n * Formats a non-animated emoji id into a fully qualified emoji identifier.\n *\n * @typeParam EmojiId - This is inferred by the supplied emoji id\n * @param emojiId - The emoji id to format\n */\nexport function formatEmoji<EmojiId extends Snowflake>(emojiId: EmojiId, animated?: false): `<:_:${EmojiId}>`;\n\n/**\n * Formats an animated emoji id into a fully qualified emoji identifier.\n *\n * @typeParam EmojiId - This is inferred by the supplied emoji id\n * @param emojiId - The emoji id to format\n * @param animated - Whether the emoji is animated\n */\nexport function formatEmoji<EmojiId extends Snowflake>(emojiId: EmojiId, animated?: true): `<a:_:${EmojiId}>`;\n\n/**\n * Formats an emoji id into a fully qualified emoji identifier.\n *\n * @typeParam EmojiId - This is inferred by the supplied emoji id\n * @param emojiId - The emoji id to format\n * @param animated - Whether the emoji is animated\n */\nexport function formatEmoji<EmojiId extends Snowflake>(\n\temojiId: EmojiId,\n\tanimated?: boolean,\n): `<:_:${EmojiId}>` | `<a:_:${EmojiId}>`;\n\n/**\n * Formats a non-animated emoji id and name into a fully qualified emoji identifier.\n *\n * @typeParam EmojiId - This is inferred by the supplied emoji id\n * @typeParam EmojiName - This is inferred by the supplied name\n * @param options - The options for formatting an emoji\n */\nexport function formatEmoji<EmojiId extends Snowflake, EmojiName extends string>(\n\toptions: FormatEmojiOptions<EmojiId, EmojiName> & { animated: true },\n): `<a:${EmojiName}:${EmojiId}>`;\n\n/**\n * Formats an animated emoji id and name into a fully qualified emoji identifier.\n *\n * @typeParam EmojiId - This is inferred by the supplied emoji id\n * @typeParam EmojiName - This is inferred by the supplied name\n * @param options - The options for formatting an emoji\n */\nexport function formatEmoji<EmojiId extends Snowflake, EmojiName extends string>(\n\toptions: FormatEmojiOptions<EmojiId, EmojiName> & { animated?: false },\n): `<:${EmojiName}:${EmojiId}>`;\n\n/**\n * Formats an emoji id and name into a fully qualified emoji identifier.\n *\n * @typeParam EmojiId - This is inferred by the supplied emoji id\n * @typeParam EmojiName - This is inferred by the supplied emoji name\n * @param options - The options for formatting an emoji\n */\nexport function formatEmoji<EmojiId extends Snowflake, EmojiName extends string>(\n\toptions: FormatEmojiOptions<EmojiId, EmojiName>,\n): `<:${EmojiName}:${EmojiId}>` | `<a:${EmojiName}:${EmojiId}>`;\n\nexport function formatEmoji<EmojiId extends Snowflake, EmojiName extends string>(\n\temojiIdOrOptions: EmojiId | FormatEmojiOptions<EmojiId, EmojiName>,\n\tanimated?: boolean,\n): `<:${string}:${EmojiId}>` | `<a:${string}:${EmojiId}>` {\n\tconst options =\n\t\ttypeof emojiIdOrOptions === 'string'\n\t\t\t? {\n\t\t\t\t\tid: emojiIdOrOptions,\n\t\t\t\t\tanimated: animated ?? false,\n\t\t\t\t}\n\t\t\t: emojiIdOrOptions;\n\n\tconst { id, animated: isAnimated, name: emojiName } = options;\n\n\treturn `<${isAnimated ? 'a' : ''}:${emojiName ?? '_'}:${id}>`;\n}\n\n/**\n * The options for formatting an emoji.\n *\n * @typeParam EmojiId - This is inferred by the supplied emoji id\n * @typeParam EmojiName - This is inferred by the supplied emoji name\n */\nexport interface FormatEmojiOptions<EmojiId extends Snowflake, EmojiName extends string> {\n\t/**\n\t * Whether the emoji is animated\n\t */\n\tanimated?: boolean;\n\t/**\n\t * The emoji id to format\n\t */\n\tid: EmojiId;\n\t/**\n\t * The name of the emoji\n\t */\n\tname?: EmojiName;\n}\n\n/**\n * Formats a channel link for a direct message channel.\n *\n * @typeParam ChannelId - This is inferred by the supplied channel id\n * @param channelId - The channel's id\n */\nexport function channelLink<ChannelId extends Snowflake>(\n\tchannelId: ChannelId,\n): `https://discord.com/channels/@me/${ChannelId}`;\n\n/**\n * Formats a channel link for a guild channel.\n *\n * @typeParam ChannelId - This is inferred by the supplied channel id\n * @typeParam GuildId - This is inferred by the supplied guild id\n * @param channelId - The channel's id\n * @param guildId - The guild's id\n */\nexport function channelLink<ChannelId extends Snowflake, GuildId extends Snowflake>(\n\tchannelId: ChannelId,\n\tguildId: GuildId,\n): `https://discord.com/channels/${GuildId}/${ChannelId}`;\n\nexport function channelLink<ChannelId extends Snowflake, GuildId extends Snowflake>(\n\tchannelId: ChannelId,\n\tguildId?: GuildId,\n): `https://discord.com/channels/@me/${ChannelId}` | `https://discord.com/channels/${GuildId}/${ChannelId}` {\n\treturn `https://discord.com/channels/${guildId ?? '@me'}/${channelId}`;\n}\n\n/**\n * Formats a message link for a direct message channel.\n *\n * @typeParam ChannelId - This is inferred by the supplied channel id\n * @typeParam MessageId - This is inferred by the supplied message id\n * @param channelId - The channel's id\n * @param messageId - The message's id\n */\nexport function messageLink<ChannelId extends Snowflake, MessageId extends Snowflake>(\n\tchannelId: ChannelId,\n\tmessageId: MessageId,\n): `https://discord.com/channels/@me/${ChannelId}/${MessageId}`;\n\n/**\n * Formats a message link for a guild channel.\n *\n * @typeParam ChannelId - This is inferred by the supplied channel id\n * @typeParam MessageId - This is inferred by the supplied message id\n * @typeParam GuildId - This is inferred by the supplied guild id\n * @param channelId - The channel's id\n * @param messageId - The message's id\n * @param guildId - The guild's id\n */\nexport function messageLink<ChannelId extends Snowflake, MessageId extends Snowflake, GuildId extends Snowflake>(\n\tchannelId: ChannelId,\n\tmessageId: MessageId,\n\tguildId: GuildId,\n): `https://discord.com/channels/${GuildId}/${ChannelId}/${MessageId}`;\n\nexport function messageLink<ChannelId extends Snowflake, MessageId extends Snowflake, GuildId extends Snowflake>(\n\tchannelId: ChannelId,\n\tmessageId: MessageId,\n\tguildId?: GuildId,\n):\n\t| `https://discord.com/channels/@me/${ChannelId}/${MessageId}`\n\t| `https://discord.com/channels/${GuildId}/${ChannelId}/${MessageId}` {\n\treturn `${guildId === undefined ? channelLink(channelId) : channelLink(channelId, guildId)}/${messageId}`;\n}\n\n/**\n * The heading levels for expanded markdown.\n */\nexport enum HeadingLevel {\n\t/**\n\t * The first heading level.\n\t */\n\tOne = 1,\n\t/**\n\t * The second heading level.\n\t */\n\tTwo,\n\t/**\n\t * The third heading level.\n\t */\n\tThree,\n}\n\n/**\n * Formats the content into a heading level.\n *\n * @typeParam Content - This is inferred by the supplied content\n * @param content - The content to wrap\n * @param level - The heading level\n */\nexport function heading<Content extends string>(content: Content, level?: HeadingLevel.One): `# ${Content}`;\n\n/**\n * Formats the content into a heading level.\n *\n * @typeParam Content - This is inferred by the supplied content\n * @param content - The content to wrap\n * @param level - The heading level\n */\nexport function heading<Content extends string>(content: Content, level: HeadingLevel.Two): `## ${Content}`;\n\n/**\n * Formats the content into a heading level.\n *\n * @typeParam Content - This is inferred by the supplied content\n * @param content - The content to wrap\n * @param level - The heading level\n */\nexport function heading<Content extends string>(content: Content, level: HeadingLevel.Three): `### ${Content}`;\n\nexport function heading(content: string, level?: HeadingLevel) {\n\tswitch (level) {\n\t\tcase HeadingLevel.Three:\n\t\t\treturn `### ${content}`;\n\t\tcase HeadingLevel.Two:\n\t\t\treturn `## ${content}`;\n\t\tdefault:\n\t\t\treturn `# ${content}`;\n\t}\n}\n\n/**\n * A type that recursively traverses into arrays.\n */\nexport type RecursiveArray<ItemType> = readonly (ItemType | RecursiveArray<ItemType>)[];\n\n/**\n * Callback function for list formatters.\n *\n * @internal\n */\nfunction listCallback(element: RecursiveArray<string>, startNumber?: number, depth = 0): string {\n\tif (Array.isArray(element)) {\n\t\treturn element.map((element) => listCallback(element, startNumber, depth + 1)).join('\\n');\n\t}\n\n\treturn `${'  '.repeat(depth - 1)}${startNumber ? `${startNumber}.` : '-'} ${element}`;\n}\n\n/**\n * Formats the elements in the array to an ordered list.\n *\n * @param list - The array of elements to list\n * @param startNumber - The starting number for the list\n */\nexport function orderedList(list: RecursiveArray<string>, startNumber = 1): string {\n\treturn listCallback(list, Math.max(startNumber, 1));\n}\n\n/**\n * Formats the elements in the array to an unordered list.\n *\n * @param list - The array of elements to list\n */\nexport function unorderedList(list: RecursiveArray<string>): string {\n\treturn listCallback(list);\n}\n\n/**\n * Formats the content into a subtext.\n *\n * @typeParam Content - This is inferred by the supplied content\n * @param content - The content to wrap\n */\nexport function subtext<Content extends string>(content: Content): `-# ${Content}` {\n\treturn `-# ${content}`;\n}\n\n/**\n * Formats a date into a short date-time string.\n *\n * @param date - The date to format. Defaults to the current time\n */\nexport function time(date?: Date): `<t:${bigint}>`;\n\n/**\n * Formats a date given a format style.\n *\n * @typeParam Style - This is inferred by the supplied {@link TimestampStylesString}\n * @param date - The date to format\n * @param style - The style to use\n */\nexport function time<Style extends TimestampStylesString>(date: Date, style: Style): `<t:${bigint}:${Style}>`;\n\n/**\n * Formats the given timestamp into a short date-time string.\n *\n * @typeParam Seconds - This is inferred by the supplied timestamp\n * @param seconds - A Unix timestamp in seconds\n */\nexport function time<Seconds extends number>(seconds: Seconds): `<t:${Seconds}>`;\n\n/**\n * Formats the given timestamp into a short date-time string.\n *\n * @typeParam Seconds - This is inferred by the supplied timestamp\n * @typeParam Style - This is inferred by the supplied {@link TimestampStylesString}\n * @param seconds - A Unix timestamp in seconds\n * @param style - The style to use\n */\nexport function time<Seconds extends number, Style extends TimestampStylesString>(\n\tseconds: Seconds,\n\tstyle: Style,\n): `<t:${Seconds}:${Style}>`;\n\nexport function time(timeOrSeconds?: Date | number, style?: TimestampStylesString): string {\n\tif (typeof timeOrSeconds !== 'number') {\n\t\t// eslint-disable-next-line no-param-reassign\n\t\ttimeOrSeconds = Math.floor((timeOrSeconds?.getTime() ?? Date.now()) / 1_000);\n\t}\n\n\treturn typeof style === 'string' ? `<t:${timeOrSeconds}:${style}>` : `<t:${timeOrSeconds}>`;\n}\n\n/**\n * Formats an application directory link.\n *\n * @typeParam ApplicationId - This is inferred by the supplied application id\n * @param applicationId - The application id\n */\nexport function applicationDirectory<ApplicationId extends Snowflake>(\n\tapplicationId: ApplicationId,\n): `https://discord.com/application-directory/${ApplicationId}/store`;\n\n/**\n * Formats an application directory SKU link.\n *\n * @typeParam ApplicationId - This is inferred by the supplied application id\n * @typeParam SKUId - This is inferred by the supplied SKU id\n * @param applicationId - The application id\n * @param skuId - The SKU id\n */\nexport function applicationDirectory<ApplicationId extends Snowflake, SKUId extends Snowflake>(\n\tapplicationId: ApplicationId,\n\tskuId: SKUId,\n): `https://discord.com/application-directory/${ApplicationId}/store/${SKUId}`;\n\nexport function applicationDirectory<ApplicationId extends Snowflake, SKUId extends Snowflake>(\n\tapplicationId: ApplicationId,\n\tskuId?: SKUId,\n):\n\t| `https://discord.com/application-directory/${ApplicationId}/store/${SKUId}`\n\t| `https://discord.com/application-directory/${ApplicationId}/store` {\n\tconst url = `https://discord.com/application-directory/${applicationId}/store` as const;\n\treturn skuId ? `${url}/${skuId}` : url;\n}\n\n/**\n * The {@link https://discord.com/developers/docs/reference#message-formatting-timestamp-styles | message formatting timestamp styles}\n * supported by Discord.\n */\nexport const TimestampStyles = {\n\t/**\n\t * Short time format, consisting of hours and minutes.\n\t *\n\t * @example `16:20`\n\t */\n\tShortTime: 't',\n\n\t/**\n\t * Long time format, consisting of hours, minutes, and seconds.\n\t *\n\t * @example `16:20:30`\n\t */\n\tLongTime: 'T',\n\n\t/**\n\t * Short date format, consisting of day, month, and year.\n\t *\n\t * @example `20/04/2021`\n\t */\n\tShortDate: 'd',\n\n\t/**\n\t * Long date format, consisting of day, month, and year.\n\t *\n\t * @example `20 April 2021`\n\t */\n\tLongDate: 'D',\n\n\t/**\n\t * Short date-time format, consisting of short date and short time formats.\n\t *\n\t * @example `20 April 2021 16:20`\n\t */\n\tShortDateTime: 'f',\n\n\t/**\n\t * Long date-time format, consisting of long date and short time formats.\n\t *\n\t * @example `Tuesday, 20 April 2021 16:20`\n\t */\n\tLongDateTime: 'F',\n\n\t/**\n\t * Relative time format, consisting of a relative duration format.\n\t *\n\t * @example `2 months ago`\n\t */\n\tRelativeTime: 'R',\n} as const satisfies Record<string, string>;\n\n/**\n * The possible {@link TimestampStyles} values.\n */\nexport type TimestampStylesString = (typeof TimestampStyles)[keyof typeof TimestampStyles];\n\n/**\n * All the available faces from Discord's native slash commands.\n */\nexport enum Faces {\n\t/**\n\t * `¯\\_(ツ)_/¯`\n\t */\n\tShrug = '¯\\\\_(ツ)_/¯',\n\n\t/**\n\t * `(╯°□°)╯︵ ┻━┻`\n\t */\n\tTableflip = '(╯°□°)╯︵ ┻━┻',\n\n\t/**\n\t * `┬─┬ノ( º _ ºノ)`\n\t */\n\tUnflip = '┬─┬ノ( º _ ºノ)',\n}\n\n/**\n * All the available guild navigation mentions.\n */\nexport enum GuildNavigationMentions {\n\t/**\n\t * Browse Channels tab.\n\t */\n\tBrowse = '<id:browse>',\n\t/**\n\t * Customize tab with the server's {@link https://discord.com/developers/docs/resources/guild#guild-onboarding-object | onboarding prompts}.\n\t */\n\tCustomize = '<id:customize>',\n\t/**\n\t * {@link https://support.discord.com/hc/articles/13497665141655 | Server Guide} tab.\n\t */\n\tGuide = '<id:guide>',\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=common.js.map", null, null, null, null, null, null, null, null, null, null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=attachment.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=base.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=boolean.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=channel.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=integer.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=mentionable.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=number.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=role.js.map", null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=string.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=subcommand.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=subcommandGroup.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=user.js.map", null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=contextMenu.js.map", null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=entryPoint.js.map", null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=autocomplete.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=base.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=messageComponents.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=modalSubmit.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=ping.js.map", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=application.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=auditLog.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=autoModeration.js.map", null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=emoji.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=gateway.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=guild.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=guildScheduledEvent.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=interactions.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=invite.js.map", null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=oauth2.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=poll.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=soundboard.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=stageInstance.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=sticker.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=template.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=user.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=voice.js.map", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=webhook.js.map", null, null, null, null, null, "export * from './types.js';\nexport * from './functions/index.js';\nexport * from './JSONEncodable.js';\nexport * from './Equatable.js';\n\n/**\n * The {@link https://github.com/discordjs/discord.js/blob/main/packages/util#readme | @discordjs/util} version\n * that you are currently using.\n *\n * @privateRemarks This needs to explicitly be `string` so it is not typed as a \"const string\" that gets injected by esbuild.\n */\nexport const version = '1.1.1' as string;\n", "/**\n * Lazy is a wrapper around a value that is computed lazily. It is useful for\n * cases where the value is expensive to compute and the computation may not\n * be needed at all.\n *\n * @param cb - The callback to lazily evaluate\n * @typeParam Value - The type of the value\n * @example\n * ```ts\n * const value = lazy(() => computeExpensiveValue());\n * ```\n */\n// eslint-disable-next-line promise/prefer-await-to-callbacks\nexport function lazy<Value>(cb: () => Value): () => Value {\n\tlet defaultValue: Value;\n\t// eslint-disable-next-line promise/prefer-await-to-callbacks\n\treturn () => (defaultValue ??= cb());\n}\n", "/**\n * Options for creating a range\n */\nexport interface RangeOptions {\n\t/**\n\t * The end of the range (exclusive)\n\t */\n\tend: number;\n\t/**\n\t * The start of the range (inclusive)\n\t */\n\tstart: number;\n\t/**\n\t * The amount to increment by\n\t *\n\t * @defaultValue `1`\n\t */\n\tstep?: number;\n}\n\n/**\n * A generator to yield numbers in a given range\n *\n * @remarks\n * This method is end-exclusive, for example the last number yielded by `range(5)` is 4. If you\n * prefer for the end to be included add 1 to the range or `end` option.\n * @param range - A number representing the range to yield (exclusive) or an object with start, end and step\n * @example\n * Basic range\n * ```ts\n * for (const number of range(5)) {\n *  console.log(number);\n * }\n * // Prints 0, 1, 2, 3, 4\n * ```\n * @example\n * Range with a step\n * ```ts\n * for (const number of range({ start: 3, end: 10, step: 2 })) {\n * \tconsole.log(number);\n * }\n * // Prints 3, 5, 7, 9\n * ```\n */\nexport function* range(range: RangeOptions | number) {\n\tlet rangeEnd: number;\n\tlet start = 0;\n\tlet step = 1;\n\n\tif (typeof range === 'number') {\n\t\trangeEnd = range;\n\t} else {\n\t\tstart = range.start;\n\t\trangeEnd = range.end;\n\t\tstep = range.step ?? 1;\n\t}\n\n\tfor (let index = start; index < rangeEnd; index += step) {\n\t\tyield index;\n\t}\n}\n", "/**\n * Calculates the shard id for a given guild id.\n *\n * @param guildId - The guild id to calculate the shard id for\n * @param shardCount - The total number of shards\n */\nexport function calculateShardId(guildId: string, shardCount: number) {\n\treturn Number(BigInt(guildId) >> 22n) % shardCount;\n}\n", "/* eslint-disable n/prefer-global/process */\n\nexport function shouldUseGlobalFetchAndWebSocket() {\n\t// Browser env and deno when ran directly\n\tif (typeof globalThis.process === 'undefined') {\n\t\treturn 'fetch' in globalThis && 'WebSocket' in globalThis;\n\t}\n\n\tif ('versions' in globalThis.process) {\n\t\treturn 'deno' in globalThis.process.versions || 'bun' in globalThis.process.versions;\n\t}\n\n\treturn false;\n}\n", "/* eslint-disable n/prefer-global/process */\n\n/**\n * Resolves the user agent appendix string for the current environment.\n */\nexport function getUserAgentAppendix(): string {\n\t// https://vercel.com/docs/concepts/functions/edge-functions/edge-runtime#check-if-you're-running-on-the-edge-runtime\n\t// @ts-expect-error Vercel Edge functions\n\tif (typeof globalThis.EdgeRuntime !== 'undefined') {\n\t\treturn 'Vercel-Edge-Functions';\n\t}\n\n\t// @ts-expect-error Cloudflare Workers\n\tif (typeof globalThis.R2 !== 'undefined' && typeof globalThis.WebSocketPair !== 'undefined') {\n\t\t// https://developers.cloudflare.com/workers/runtime-apis/web-standards/#navigatoruseragent\n\t\treturn 'Cloudflare-Workers';\n\t}\n\n\t// https://docs.netlify.com/edge-functions/api/#netlify-global-object\n\t// @ts-expect-error Netlify Edge functions\n\tif (typeof globalThis.Netlify !== 'undefined') {\n\t\treturn 'Netlify-Edge-Functions';\n\t}\n\n\t// Most (if not all) edge environments will have `process` defined. Within a web browser we'll extract it using `navigator.userAgent`.\n\tif (typeof globalThis.process !== 'object') {\n\t\t// @ts-expect-error web env\n\t\tif (typeof globalThis.navigator === 'object') {\n\t\t\t// @ts-expect-error web env\n\t\t\treturn globalThis.navigator.userAgent;\n\t\t}\n\n\t\treturn 'UnknownEnvironment';\n\t}\n\n\tif ('versions' in globalThis.process) {\n\t\tif ('deno' in globalThis.process.versions) {\n\t\t\treturn `Deno/${globalThis.process.versions.deno}`;\n\t\t}\n\n\t\tif ('bun' in globalThis.process.versions) {\n\t\t\treturn `Bun/${globalThis.process.versions.bun}`;\n\t\t}\n\n\t\tif ('node' in globalThis.process.versions) {\n\t\t\treturn `Node.js/${globalThis.process.versions.node}`;\n\t\t}\n\t}\n\n\treturn 'UnknownEnvironment';\n}\n", "/**\n * Polyfill for `Symbol.dispose` and `Symbol.asyncDispose` which is used as a part of\n * {@link https://github.com/tc39/proposal-explicit-resource-management}. Node versions below 18.x\n * don't have these symbols by default, so we need to polyfill them.\n */\nexport function polyfillDispose() {\n\t// Polyfill for `Symbol.dispose` and `Symbol.asyncDispose` if not available.\n\t// Taken from https://www.typescriptlang.org/docs/handbook/release-notes/typescript-5-2.html#using-declarations-and-explicit-resource-management\n\n\t// @ts-expect-error This is a polyfill, so it's fine to write\n\tSymbol.dispose ??= Symbol('Symbol.dispose');\n\t// @ts-expect-error Same as above\n\tSymbol.asyncDispose ??= Symbol('Symbol.asyncDispose');\n}\n", "/**\n * Represents an object capable of representing itself as a JSON object\n *\n * @typeParam Value - The JSON type corresponding to {@link JSONEncodable.toJSON} outputs.\n */\nexport interface JSONEncodable<Value> {\n\t/**\n\t * Transforms this object to its JSON format\n\t */\n\ttoJSON(): Value;\n}\n\n/**\n * Indicates if an object is encodable or not.\n *\n * @param maybeEncodable - The object to check against\n */\nexport function isJSONEncodable(maybeEncodable: unknown): maybeEncodable is JSONEncodable<unknown> {\n\treturn maybeEncodable !== null && typeof maybeEncodable === 'object' && 'toJSON' in maybeEncodable;\n}\n", "/**\n * Represents a structure that can be checked against another\n * given structure for equality\n *\n * @typeParam Value - The type of object to compare the current object to\n */\nexport interface Equatable<Value> {\n\t/**\n\t * Whether or not this is equal to another structure\n\t */\n\tequals(other: Value): boolean;\n}\n\n/**\n * Indicates if an object is equatable or not.\n *\n * @param maybeEquatable - The object to check against\n */\nexport function isEquatable(maybeEquatable: unknown): maybeEquatable is Equatable<unknown> {\n\treturn maybeEquatable !== null && typeof maybeEquatable === 'object' && 'equals' in maybeEquatable;\n}\n", "'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n", "/**\n * Utility function that works like `Object.apply`, but copies getters and setters properly as well.  Additionally gives\n * the option to exclude properties by name.\n */\nconst copyProps = (dest, src, exclude = []) => {\n    const props = Object.getOwnPropertyDescriptors(src);\n    for (let prop of exclude)\n        delete props[prop];\n    Object.defineProperties(dest, props);\n};\n/**\n * Returns the full chain of prototypes up until Object.prototype given a starting object.  The order of prototypes will\n * be closest to farthest in the chain.\n */\nconst protoChain = (obj, currentChain = [obj]) => {\n    const proto = Object.getPrototypeOf(obj);\n    if (proto === null)\n        return currentChain;\n    return protoChain(proto, [...currentChain, proto]);\n};\n/**\n * Identifies the nearest ancestor common to all the given objects in their prototype chains.  For most unrelated\n * objects, this function should return Object.prototype.\n */\nconst nearestCommonProto = (...objs) => {\n    if (objs.length === 0)\n        return undefined;\n    let commonProto = undefined;\n    const protoChains = objs.map(obj => protoChain(obj));\n    while (protoChains.every(protoChain => protoChain.length > 0)) {\n        const protos = protoChains.map(protoChain => protoChain.pop());\n        const potentialCommonProto = protos[0];\n        if (protos.every(proto => proto === potentialCommonProto))\n            commonProto = potentialCommonProto;\n        else\n            break;\n    }\n    return commonProto;\n};\n/**\n * Creates a new prototype object that is a mixture of the given prototypes.  The mixing is achieved by first\n * identifying the nearest common ancestor and using it as the prototype for a new object.  Then all properties/methods\n * downstream of this prototype (ONLY downstream) are copied into the new object.\n *\n * The resulting prototype is more performant than softMixProtos(...), as well as ES5 compatible.  However, it's not as\n * flexible as updates to the source prototypes aren't captured by the mixed result.  See softMixProtos for why you may\n * want to use that instead.\n */\nconst hardMixProtos = (ingredients, constructor, exclude = []) => {\n    var _a;\n    const base = (_a = nearestCommonProto(...ingredients)) !== null && _a !== void 0 ? _a : Object.prototype;\n    const mixedProto = Object.create(base);\n    // Keeps track of prototypes we've already visited to avoid copying the same properties multiple times.  We init the\n    // list with the proto chain below the nearest common ancestor because we don't want any of those methods mixed in\n    // when they will already be accessible via prototype access.\n    const visitedProtos = protoChain(base);\n    for (let prototype of ingredients) {\n        let protos = protoChain(prototype);\n        // Apply the prototype chain in reverse order so that old methods don't override newer ones.\n        for (let i = protos.length - 1; i >= 0; i--) {\n            let newProto = protos[i];\n            if (visitedProtos.indexOf(newProto) === -1) {\n                copyProps(mixedProto, newProto, ['constructor', ...exclude]);\n                visitedProtos.push(newProto);\n            }\n        }\n    }\n    mixedProto.constructor = constructor;\n    return mixedProto;\n};\nconst unique = (arr) => arr.filter((e, i) => arr.indexOf(e) == i);\n\n/**\n * Finds the ingredient with the given prop, searching in reverse order and breadth-first if searching ingredient\n * prototypes is required.\n */\nconst getIngredientWithProp = (prop, ingredients) => {\n    const protoChains = ingredients.map(ingredient => protoChain(ingredient));\n    // since we search breadth-first, we need to keep track of our depth in the prototype chains\n    let protoDepth = 0;\n    // not all prototype chains are the same depth, so this remains true as long as at least one of the ingredients'\n    // prototype chains has an object at this depth\n    let protosAreLeftToSearch = true;\n    while (protosAreLeftToSearch) {\n        // with the start of each horizontal slice, we assume this is the one that's deeper than any of the proto chains\n        protosAreLeftToSearch = false;\n        // scan through the ingredients right to left\n        for (let i = ingredients.length - 1; i >= 0; i--) {\n            const searchTarget = protoChains[i][protoDepth];\n            if (searchTarget !== undefined && searchTarget !== null) {\n                // if we find something, this is proof that this horizontal slice potentially more objects to search\n                protosAreLeftToSearch = true;\n                // eureka, we found it\n                if (Object.getOwnPropertyDescriptor(searchTarget, prop) != undefined) {\n                    return protoChains[i][0];\n                }\n            }\n        }\n        protoDepth++;\n    }\n    return undefined;\n};\n/**\n * \"Mixes\" ingredients by wrapping them in a Proxy.  The optional prototype argument allows the mixed object to sit\n * downstream of an existing prototype chain.  Note that \"properties\" cannot be added, deleted, or modified.\n */\nconst proxyMix = (ingredients, prototype = Object.prototype) => new Proxy({}, {\n    getPrototypeOf() {\n        return prototype;\n    },\n    setPrototypeOf() {\n        throw Error('Cannot set prototype of Proxies created by ts-mixer');\n    },\n    getOwnPropertyDescriptor(_, prop) {\n        return Object.getOwnPropertyDescriptor(getIngredientWithProp(prop, ingredients) || {}, prop);\n    },\n    defineProperty() {\n        throw new Error('Cannot define new properties on Proxies created by ts-mixer');\n    },\n    has(_, prop) {\n        return getIngredientWithProp(prop, ingredients) !== undefined || prototype[prop] !== undefined;\n    },\n    get(_, prop) {\n        return (getIngredientWithProp(prop, ingredients) || prototype)[prop];\n    },\n    set(_, prop, val) {\n        const ingredientWithProp = getIngredientWithProp(prop, ingredients);\n        if (ingredientWithProp === undefined)\n            throw new Error('Cannot set new properties on Proxies created by ts-mixer');\n        ingredientWithProp[prop] = val;\n        return true;\n    },\n    deleteProperty() {\n        throw new Error('Cannot delete properties on Proxies created by ts-mixer');\n    },\n    ownKeys() {\n        return ingredients\n            .map(Object.getOwnPropertyNames)\n            .reduce((prev, curr) => curr.concat(prev.filter(key => curr.indexOf(key) < 0)));\n    },\n});\n/**\n * Creates a new proxy-prototype object that is a \"soft\" mixture of the given prototypes.  The mixing is achieved by\n * proxying all property access to the ingredients.  This is not ES5 compatible and less performant.  However, any\n * changes made to the source prototypes will be reflected in the proxy-prototype, which may be desirable.\n */\nconst softMixProtos = (ingredients, constructor) => proxyMix([...ingredients, { constructor }]);\n\nconst settings = {\n    initFunction: null,\n    staticsStrategy: 'copy',\n    prototypeStrategy: 'copy',\n    decoratorInheritance: 'deep',\n};\n\n// Keeps track of constituent classes for every mixin class created by ts-mixer.\nconst mixins = new WeakMap();\nconst getMixinsForClass = (clazz) => mixins.get(clazz);\nconst registerMixins = (mixedClass, constituents) => mixins.set(mixedClass, constituents);\nconst hasMixin = (instance, mixin) => {\n    if (instance instanceof mixin)\n        return true;\n    const constructor = instance.constructor;\n    const visited = new Set();\n    let frontier = new Set();\n    frontier.add(constructor);\n    while (frontier.size > 0) {\n        // check if the frontier has the mixin we're looking for.  if not, we can say we visited every item in the frontier\n        if (frontier.has(mixin))\n            return true;\n        frontier.forEach((item) => visited.add(item));\n        // build a new frontier based on the associated mixin classes and prototype chains of each frontier item\n        const newFrontier = new Set();\n        frontier.forEach((item) => {\n            var _a;\n            const itemConstituents = (_a = mixins.get(item)) !== null && _a !== void 0 ? _a : protoChain(item.prototype)\n                .map((proto) => proto.constructor)\n                .filter((item) => item !== null);\n            if (itemConstituents)\n                itemConstituents.forEach((constituent) => {\n                    if (!visited.has(constituent) && !frontier.has(constituent))\n                        newFrontier.add(constituent);\n                });\n        });\n        // we have a new frontier, now search again\n        frontier = newFrontier;\n    }\n    // if we get here, we couldn't find the mixin anywhere in the prototype chain or associated mixin classes\n    return false;\n};\n\nconst mergeObjectsOfDecorators = (o1, o2) => {\n    var _a, _b;\n    const allKeys = unique([...Object.getOwnPropertyNames(o1), ...Object.getOwnPropertyNames(o2)]);\n    const mergedObject = {};\n    for (let key of allKeys)\n        mergedObject[key] = unique([...((_a = o1 === null || o1 === void 0 ? void 0 : o1[key]) !== null && _a !== void 0 ? _a : []), ...((_b = o2 === null || o2 === void 0 ? void 0 : o2[key]) !== null && _b !== void 0 ? _b : [])]);\n    return mergedObject;\n};\nconst mergePropertyAndMethodDecorators = (d1, d2) => {\n    var _a, _b, _c, _d;\n    return ({\n        property: mergeObjectsOfDecorators((_a = d1 === null || d1 === void 0 ? void 0 : d1.property) !== null && _a !== void 0 ? _a : {}, (_b = d2 === null || d2 === void 0 ? void 0 : d2.property) !== null && _b !== void 0 ? _b : {}),\n        method: mergeObjectsOfDecorators((_c = d1 === null || d1 === void 0 ? void 0 : d1.method) !== null && _c !== void 0 ? _c : {}, (_d = d2 === null || d2 === void 0 ? void 0 : d2.method) !== null && _d !== void 0 ? _d : {}),\n    });\n};\nconst mergeDecorators = (d1, d2) => {\n    var _a, _b, _c, _d, _e, _f;\n    return ({\n        class: unique([...(_a = d1 === null || d1 === void 0 ? void 0 : d1.class) !== null && _a !== void 0 ? _a : [], ...(_b = d2 === null || d2 === void 0 ? void 0 : d2.class) !== null && _b !== void 0 ? _b : []]),\n        static: mergePropertyAndMethodDecorators((_c = d1 === null || d1 === void 0 ? void 0 : d1.static) !== null && _c !== void 0 ? _c : {}, (_d = d2 === null || d2 === void 0 ? void 0 : d2.static) !== null && _d !== void 0 ? _d : {}),\n        instance: mergePropertyAndMethodDecorators((_e = d1 === null || d1 === void 0 ? void 0 : d1.instance) !== null && _e !== void 0 ? _e : {}, (_f = d2 === null || d2 === void 0 ? void 0 : d2.instance) !== null && _f !== void 0 ? _f : {}),\n    });\n};\nconst decorators = new Map();\nconst findAllConstituentClasses = (...classes) => {\n    var _a;\n    const allClasses = new Set();\n    const frontier = new Set([...classes]);\n    while (frontier.size > 0) {\n        for (let clazz of frontier) {\n            const protoChainClasses = protoChain(clazz.prototype).map(proto => proto.constructor);\n            const mixinClasses = (_a = getMixinsForClass(clazz)) !== null && _a !== void 0 ? _a : [];\n            const potentiallyNewClasses = [...protoChainClasses, ...mixinClasses];\n            const newClasses = potentiallyNewClasses.filter(c => !allClasses.has(c));\n            for (let newClass of newClasses)\n                frontier.add(newClass);\n            allClasses.add(clazz);\n            frontier.delete(clazz);\n        }\n    }\n    return [...allClasses];\n};\nconst deepDecoratorSearch = (...classes) => {\n    const decoratorsForClassChain = findAllConstituentClasses(...classes)\n        .map(clazz => decorators.get(clazz))\n        .filter(decorators => !!decorators);\n    if (decoratorsForClassChain.length == 0)\n        return {};\n    if (decoratorsForClassChain.length == 1)\n        return decoratorsForClassChain[0];\n    return decoratorsForClassChain.reduce((d1, d2) => mergeDecorators(d1, d2));\n};\nconst directDecoratorSearch = (...classes) => {\n    const classDecorators = classes.map(clazz => getDecoratorsForClass(clazz));\n    if (classDecorators.length === 0)\n        return {};\n    if (classDecorators.length === 1)\n        return classDecorators[0];\n    return classDecorators.reduce((d1, d2) => mergeDecorators(d1, d2));\n};\nconst getDecoratorsForClass = (clazz) => {\n    let decoratorsForClass = decorators.get(clazz);\n    if (!decoratorsForClass) {\n        decoratorsForClass = {};\n        decorators.set(clazz, decoratorsForClass);\n    }\n    return decoratorsForClass;\n};\nconst decorateClass = (decorator) => ((clazz) => {\n    const decoratorsForClass = getDecoratorsForClass(clazz);\n    let classDecorators = decoratorsForClass.class;\n    if (!classDecorators) {\n        classDecorators = [];\n        decoratorsForClass.class = classDecorators;\n    }\n    classDecorators.push(decorator);\n    return decorator(clazz);\n});\nconst decorateMember = (decorator) => ((object, key, ...otherArgs) => {\n    var _a, _b, _c;\n    const decoratorTargetType = typeof object === 'function' ? 'static' : 'instance';\n    const decoratorType = typeof object[key] === 'function' ? 'method' : 'property';\n    const clazz = decoratorTargetType === 'static' ? object : object.constructor;\n    const decoratorsForClass = getDecoratorsForClass(clazz);\n    const decoratorsForTargetType = (_a = decoratorsForClass === null || decoratorsForClass === void 0 ? void 0 : decoratorsForClass[decoratorTargetType]) !== null && _a !== void 0 ? _a : {};\n    decoratorsForClass[decoratorTargetType] = decoratorsForTargetType;\n    let decoratorsForType = (_b = decoratorsForTargetType === null || decoratorsForTargetType === void 0 ? void 0 : decoratorsForTargetType[decoratorType]) !== null && _b !== void 0 ? _b : {};\n    decoratorsForTargetType[decoratorType] = decoratorsForType;\n    let decoratorsForKey = (_c = decoratorsForType === null || decoratorsForType === void 0 ? void 0 : decoratorsForType[key]) !== null && _c !== void 0 ? _c : [];\n    decoratorsForType[key] = decoratorsForKey;\n    // @ts-ignore: array is type `A[] | B[]` and item is type `A | B`, so technically a type error, but it's fine\n    decoratorsForKey.push(decorator);\n    // @ts-ignore\n    return decorator(object, key, ...otherArgs);\n});\nconst decorate = (decorator) => ((...args) => {\n    if (args.length === 1)\n        return decorateClass(decorator)(args[0]);\n    return decorateMember(decorator)(...args);\n});\n\nfunction Mixin(...constructors) {\n    var _a, _b, _c;\n    const prototypes = constructors.map(constructor => constructor.prototype);\n    // Here we gather up the init functions of the ingredient prototypes, combine them into one init function, and\n    // attach it to the mixed class prototype.  The reason we do this is because we want the init functions to mix\n    // similarly to constructors -- not methods, which simply override each other.\n    const initFunctionName = settings.initFunction;\n    if (initFunctionName !== null) {\n        const initFunctions = prototypes\n            .map(proto => proto[initFunctionName])\n            .filter(func => typeof func === 'function');\n        const combinedInitFunction = function (...args) {\n            for (let initFunction of initFunctions)\n                initFunction.apply(this, args);\n        };\n        const extraProto = { [initFunctionName]: combinedInitFunction };\n        prototypes.push(extraProto);\n    }\n    function MixedClass(...args) {\n        for (const constructor of constructors)\n            // @ts-ignore: potentially abstract class\n            copyProps(this, new constructor(...args));\n        if (initFunctionName !== null && typeof this[initFunctionName] === 'function')\n            this[initFunctionName].apply(this, args);\n    }\n    MixedClass.prototype = settings.prototypeStrategy === 'copy'\n        ? hardMixProtos(prototypes, MixedClass)\n        : softMixProtos(prototypes, MixedClass);\n    Object.setPrototypeOf(MixedClass, settings.staticsStrategy === 'copy'\n        ? hardMixProtos(constructors, null, ['prototype'])\n        : proxyMix(constructors, Function.prototype));\n    let DecoratedMixedClass = MixedClass;\n    if (settings.decoratorInheritance !== 'none') {\n        const classDecorators = settings.decoratorInheritance === 'deep'\n            ? deepDecoratorSearch(...constructors)\n            : directDecoratorSearch(...constructors);\n        for (let decorator of (_a = classDecorators === null || classDecorators === void 0 ? void 0 : classDecorators.class) !== null && _a !== void 0 ? _a : []) {\n            const result = decorator(DecoratedMixedClass);\n            if (result) {\n                DecoratedMixedClass = result;\n            }\n        }\n        applyPropAndMethodDecorators((_b = classDecorators === null || classDecorators === void 0 ? void 0 : classDecorators.static) !== null && _b !== void 0 ? _b : {}, DecoratedMixedClass);\n        applyPropAndMethodDecorators((_c = classDecorators === null || classDecorators === void 0 ? void 0 : classDecorators.instance) !== null && _c !== void 0 ? _c : {}, DecoratedMixedClass.prototype);\n    }\n    registerMixins(DecoratedMixedClass, constructors);\n    return DecoratedMixedClass;\n}\nconst applyPropAndMethodDecorators = (propAndMethodDecorators, target) => {\n    const propDecorators = propAndMethodDecorators.property;\n    const methodDecorators = propAndMethodDecorators.method;\n    if (propDecorators)\n        for (let key in propDecorators)\n            for (let decorator of propDecorators[key])\n                decorator(target, key);\n    if (methodDecorators)\n        for (let key in methodDecorators)\n            for (let decorator of methodDecorators[key])\n                decorator(target, key, Object.getOwnPropertyDescriptor(target, key));\n};\n/**\n * A decorator version of the `Mixin` function.  You'll want to use this instead of `Mixin` for mixing generic classes.\n */\nconst mix = (...ingredients) => decoratedClass => {\n    // @ts-ignore\n    const mixedClass = Mixin(...ingredients.concat([decoratedClass]));\n    Object.defineProperty(mixedClass, 'name', {\n        value: decoratedClass.name,\n        writable: false,\n    });\n    return mixedClass;\n};\n\nexport { Mixin, decorate, hasMixin, mix, settings };\n", "export * as EmbedAssertions from './messages/embed/Assertions.js';\nexport * from './messages/embed/Embed.js';\n// TODO: Consider removing this dep in the next major version\nexport * from '@discordjs/formatters';\n\nexport * as ComponentAssertions from './components/Assertions.js';\nexport * from './components/ActionRow.js';\nexport * from './components/button/Button.js';\nexport * from './components/Component.js';\nexport * from './components/Components.js';\nexport * from './components/textInput/TextInput.js';\nexport * as TextInputAssertions from './components/textInput/Assertions.js';\nexport * from './interactions/modals/Modal.js';\nexport * as ModalAssertions from './interactions/modals/Assertions.js';\n\nexport * from './components/selectMenu/BaseSelectMenu.js';\nexport * from './components/selectMenu/ChannelSelectMenu.js';\nexport * from './components/selectMenu/MentionableSelectMenu.js';\nexport * from './components/selectMenu/RoleSelectMenu.js';\nexport * from './components/selectMenu/StringSelectMenu.js';\n// TODO: Remove those aliases in v2\nexport {\n\t/**\n\t * @deprecated Will be removed in the next major version, use {@link StringSelectMenuBuilder} instead.\n\t */\n\tStringSelectMenuBuilder as SelectMenuBuilder,\n} from './components/selectMenu/StringSelectMenu.js';\nexport {\n\t/**\n\t * @deprecated Will be removed in the next major version, use {@link StringSelectMenuOptionBuilder} instead.\n\t */\n\tStringSelectMenuOptionBuilder as SelectMenuOptionBuilder,\n} from './components/selectMenu/StringSelectMenuOption.js';\nexport * from './components/selectMenu/StringSelectMenuOption.js';\nexport * from './components/selectMenu/UserSelectMenu.js';\n\nexport * as SlashCommandAssertions from './interactions/slashCommands/Assertions.js';\nexport * from './interactions/slashCommands/SlashCommandBuilder.js';\nexport * from './interactions/slashCommands/SlashCommandSubcommands.js';\nexport * from './interactions/slashCommands/options/boolean.js';\nexport * from './interactions/slashCommands/options/channel.js';\nexport * from './interactions/slashCommands/options/integer.js';\nexport * from './interactions/slashCommands/options/mentionable.js';\nexport * from './interactions/slashCommands/options/number.js';\nexport * from './interactions/slashCommands/options/role.js';\nexport * from './interactions/slashCommands/options/attachment.js';\nexport * from './interactions/slashCommands/options/string.js';\nexport * from './interactions/slashCommands/options/user.js';\nexport * from './interactions/slashCommands/mixins/ApplicationCommandNumericOptionMinMaxValueMixin.js';\nexport * from './interactions/slashCommands/mixins/ApplicationCommandOptionBase.js';\nexport * from './interactions/slashCommands/mixins/ApplicationCommandOptionChannelTypesMixin.js';\nexport * from './interactions/slashCommands/mixins/ApplicationCommandOptionWithAutocompleteMixin.js';\nexport * from './interactions/slashCommands/mixins/ApplicationCommandOptionWithChoicesMixin.js';\nexport * from './interactions/slashCommands/mixins/NameAndDescription.js';\nexport * from './interactions/slashCommands/mixins/SharedSlashCommandOptions.js';\nexport * from './interactions/slashCommands/mixins/SharedSubcommands.js';\nexport * from './interactions/slashCommands/mixins/SharedSlashCommand.js';\n\nexport * as ContextMenuCommandAssertions from './interactions/contextMenuCommands/Assertions.js';\nexport * from './interactions/contextMenuCommands/ContextMenuCommandBuilder.js';\n\nexport * from './util/componentUtil.js';\nexport * from './util/normalizeArray.js';\nexport * from './util/validation.js';\n\n/**\n * The {@link https://github.com/discordjs/discord.js/blob/main/packages/builders#readme | @discordjs/builders} version\n * that you are currently using.\n *\n * @privateRemarks This needs to explicitly be `string` so it is not typed as a \"const string\" that gets injected by esbuild.\n */\nexport const version = '1.10.1' as string;\n", "import { s } from '@sapphire/shapeshift';\nimport type { APIEmbedField } from 'discord-api-types/v10';\nimport { isValidationEnabled } from '../../util/validation.js';\n\nexport const fieldNamePredicate = s.string().lengthLessThanOrEqual(256).setValidationEnabled(isValidationEnabled);\n\nexport const fieldValuePredicate = s.string().lengthLessThanOrEqual(1_024).setValidationEnabled(isValidationEnabled);\n\nexport const fieldInlinePredicate = s.boolean().optional();\n\nexport const embedFieldPredicate = s\n\t.object({\n\t\tname: fieldNamePredicate,\n\t\tvalue: fieldValuePredicate,\n\t\tinline: fieldInlinePredicate,\n\t})\n\t.setValidationEnabled(isValidationEnabled);\n\nexport const embedFieldsArrayPredicate = embedFieldPredicate.array().setValidationEnabled(isValidationEnabled);\n\nexport const fieldLengthPredicate = s.number().lessThanOrEqual(25).setValidationEnabled(isValidationEnabled);\n\nexport function validateFieldLength(amountAdding: number, fields?: APIEmbedField[]): void {\n\tfieldLengthPredicate.parse((fields?.length ?? 0) + amountAdding);\n}\n\nexport const authorNamePredicate = fieldNamePredicate\n\t.lengthGreaterThanOrEqual(1)\n\t.nullable()\n\t.setValidationEnabled(isValidationEnabled);\n\nexport const imageURLPredicate = s\n\t.string()\n\t.url({\n\t\tallowedProtocols: ['http:', 'https:', 'attachment:'],\n\t})\n\t.nullish()\n\t.setValidationEnabled(isValidationEnabled);\n\nexport const urlPredicate = s\n\t.string()\n\t.url({\n\t\tallowedProtocols: ['http:', 'https:'],\n\t})\n\t.nullish()\n\t.setValidationEnabled(isValidationEnabled);\n\nexport const embedAuthorPredicate = s\n\t.object({\n\t\tname: authorNamePredicate,\n\t\ticonURL: imageURLPredicate,\n\t\turl: urlPredicate,\n\t})\n\t.setValidationEnabled(isValidationEnabled);\n\nexport const RGBPredicate = s\n\t.number()\n\t.int()\n\t.greaterThanOrEqual(0)\n\t.lessThanOrEqual(255)\n\t.setValidationEnabled(isValidationEnabled);\nexport const colorPredicate = s\n\t.number()\n\t.int()\n\t.greaterThanOrEqual(0)\n\t.lessThanOrEqual(0xffffff)\n\t.or(s.tuple([RGBPredicate, RGBPredicate, RGBPredicate]))\n\t.nullable()\n\t.setValidationEnabled(isValidationEnabled);\n\nexport const descriptionPredicate = s\n\t.string()\n\t.lengthGreaterThanOrEqual(1)\n\t.lengthLessThanOrEqual(4_096)\n\t.nullable()\n\t.setValidationEnabled(isValidationEnabled);\n\nexport const footerTextPredicate = s\n\t.string()\n\t.lengthGreaterThanOrEqual(1)\n\t.lengthLessThanOrEqual(2_048)\n\t.nullable()\n\t.setValidationEnabled(isValidationEnabled);\n\nexport const embedFooterPredicate = s\n\t.object({\n\t\ttext: footerTextPredicate,\n\t\ticonURL: imageURLPredicate,\n\t})\n\t.setValidationEnabled(isValidationEnabled);\n\nexport const timestampPredicate = s.union([s.number(), s.date()]).nullable().setValidationEnabled(isValidationEnabled);\n\nexport const titlePredicate = fieldNamePredicate\n\t.lengthGreaterThanOrEqual(1)\n\t.nullable()\n\t.setValidationEnabled(isValidationEnabled);\n", "let validate = true;\n\n/**\n * Enables validators.\n *\n * @returns Whether validation is occurring.\n */\nexport function enableValidators() {\n\treturn (validate = true);\n}\n\n/**\n * Disables validators.\n *\n * @returns Whether validation is occurring.\n */\nexport function disableValidators() {\n\treturn (validate = false);\n}\n\n/**\n * Checks whether validation is occurring.\n */\nexport function isValidationEnabled() {\n\treturn validate;\n}\n", "/**\n * Normalizes data that is a rest parameter or an array into an array with a depth of 1.\n *\n * @typeParam ItemType - The data that must satisfy {@link RestOrArray}.\n * @param arr - The (possibly variadic) data to normalize\n */\nexport function normalizeArray<ItemType>(arr: RestOrArray<ItemType>): ItemType[] {\n\tif (Array.isArray(arr[0])) return [...arr[0]];\n\treturn arr as ItemType[];\n}\n\n/**\n * Represents data that may be an array or came from a rest parameter.\n *\n * @remarks\n * This type is used throughout builders to ensure both an array and variadic arguments\n * may be used. It is normalized with {@link normalizeArray}.\n */\nexport type RestOrArray<Type> = Type[] | [Type[]];\n", "import type { APIEmbed, APIEmbedAuthor, APIEmbedField, APIEmbedFooter, APIEmbedImage } from 'discord-api-types/v10';\nimport { normalizeArray, type RestOrArray } from '../../util/normalizeArray.js';\nimport {\n\tcolorPredicate,\n\tdescriptionPredicate,\n\tembedAuthorPredicate,\n\tembedFieldsArrayPredicate,\n\tembedFooterPredicate,\n\timageURLPredicate,\n\ttimestampPredicate,\n\ttitlePredicate,\n\turlPredicate,\n\tvalidateFieldLength,\n} from './Assertions.js';\n\n/**\n * A tuple satisfying the RGB color model.\n *\n * @see {@link https://developer.mozilla.org/docs/Glossary/RGB}\n */\nexport type RGBTuple = [red: number, green: number, blue: number];\n\n/**\n * The base icon data typically used in payloads.\n */\nexport interface IconData {\n\t/**\n\t * The URL of the icon.\n\t */\n\ticonURL?: string;\n\t/**\n\t * The proxy URL of the icon.\n\t */\n\tproxyIconURL?: string;\n}\n\n/**\n * Represents the author data of an embed.\n */\nexport interface EmbedAuthorData extends IconData, Omit<APIEmbedAuthor, 'icon_url' | 'proxy_icon_url'> {}\n\n/**\n * Represents the author options of an embed.\n */\nexport interface EmbedAuthorOptions extends Omit<EmbedAuthorData, 'proxyIconURL'> {}\n\n/**\n * Represents the footer data of an embed.\n */\nexport interface EmbedFooterData extends IconData, Omit<APIEmbedFooter, 'icon_url' | 'proxy_icon_url'> {}\n\n/**\n * Represents the footer options of an embed.\n */\nexport interface EmbedFooterOptions extends Omit<EmbedFooterData, 'proxyIconURL'> {}\n\n/**\n * Represents the image data of an embed.\n */\nexport interface EmbedImageData extends Omit<APIEmbedImage, 'proxy_url'> {\n\t/**\n\t * The proxy URL for the image.\n\t */\n\tproxyURL?: string;\n}\n\n/**\n * A builder that creates API-compatible JSON data for embeds.\n */\nexport class EmbedBuilder {\n\t/**\n\t * The API data associated with this embed.\n\t */\n\tpublic readonly data: APIEmbed;\n\n\t/**\n\t * Creates a new embed from API data.\n\t *\n\t * @param data - The API data to create this embed with\n\t */\n\tpublic constructor(data: APIEmbed = {}) {\n\t\tthis.data = { ...data };\n\t\tif (data.timestamp) this.data.timestamp = new Date(data.timestamp).toISOString();\n\t}\n\n\t/**\n\t * Appends fields to the embed.\n\t *\n\t * @remarks\n\t * This method accepts either an array of fields or a variable number of field parameters.\n\t * The maximum amount of fields that can be added is 25.\n\t * @example\n\t * Using an array:\n\t * ```ts\n\t * const fields: APIEmbedField[] = ...;\n\t * const embed = new EmbedBuilder()\n\t * \t.addFields(fields);\n\t * ```\n\t * @example\n\t * Using rest parameters (variadic):\n\t * ```ts\n\t * const embed = new EmbedBuilder()\n\t * \t.addFields(\n\t * \t\t{ name: 'Field 1', value: 'Value 1' },\n\t * \t\t{ name: 'Field 2', value: 'Value 2' },\n\t * \t);\n\t * ```\n\t * @param fields - The fields to add\n\t */\n\tpublic addFields(...fields: RestOrArray<APIEmbedField>): this {\n\t\tconst normalizedFields = normalizeArray(fields);\n\t\t// Ensure adding these fields won't exceed the 25 field limit\n\t\tvalidateFieldLength(normalizedFields.length, this.data.fields);\n\n\t\t// Data assertions\n\t\tembedFieldsArrayPredicate.parse(normalizedFields);\n\n\t\tif (this.data.fields) this.data.fields.push(...normalizedFields);\n\t\telse this.data.fields = normalizedFields;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Removes, replaces, or inserts fields for this embed.\n\t *\n\t * @remarks\n\t * This method behaves similarly\n\t * to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice | Array.prototype.splice()}.\n\t * The maximum amount of fields that can be added is 25.\n\t *\n\t * It's useful for modifying and adjusting order of the already-existing fields of an embed.\n\t * @example\n\t * Remove the first field:\n\t * ```ts\n\t * embed.spliceFields(0, 1);\n\t * ```\n\t * @example\n\t * Remove the first n fields:\n\t * ```ts\n\t * const n = 4;\n\t * embed.spliceFields(0, n);\n\t * ```\n\t * @example\n\t * Remove the last field:\n\t * ```ts\n\t * embed.spliceFields(-1, 1);\n\t * ```\n\t * @param index - The index to start at\n\t * @param deleteCount - The number of fields to remove\n\t * @param fields - The replacing field objects\n\t */\n\tpublic spliceFields(index: number, deleteCount: number, ...fields: APIEmbedField[]): this {\n\t\t// Ensure adding these fields won't exceed the 25 field limit\n\t\tvalidateFieldLength(fields.length - deleteCount, this.data.fields);\n\n\t\t// Data assertions\n\t\tembedFieldsArrayPredicate.parse(fields);\n\t\tif (this.data.fields) this.data.fields.splice(index, deleteCount, ...fields);\n\t\telse this.data.fields = fields;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the fields for this embed.\n\t *\n\t * @remarks\n\t * This method is an alias for {@link EmbedBuilder.spliceFields}. More specifically,\n\t * it splices the entire array of fields, replacing them with the provided fields.\n\t *\n\t * You can set a maximum of 25 fields.\n\t * @param fields - The fields to set\n\t */\n\tpublic setFields(...fields: RestOrArray<APIEmbedField>): this {\n\t\tthis.spliceFields(0, this.data.fields?.length ?? 0, ...normalizeArray(fields));\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the author of this embed.\n\t *\n\t * @param options - The options to use\n\t */\n\n\tpublic setAuthor(options: EmbedAuthorOptions | null): this {\n\t\tif (options === null) {\n\t\t\tthis.data.author = undefined;\n\t\t\treturn this;\n\t\t}\n\n\t\t// Data assertions\n\t\tembedAuthorPredicate.parse(options);\n\n\t\tthis.data.author = { name: options.name, url: options.url, icon_url: options.iconURL };\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the color of this embed.\n\t *\n\t * @param color - The color to use\n\t */\n\tpublic setColor(color: RGBTuple | number | null): this {\n\t\t// Data assertions\n\t\tcolorPredicate.parse(color);\n\n\t\tif (Array.isArray(color)) {\n\t\t\tconst [red, green, blue] = color;\n\t\t\tthis.data.color = (red << 16) + (green << 8) + blue;\n\t\t\treturn this;\n\t\t}\n\n\t\tthis.data.color = color ?? undefined;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the description of this embed.\n\t *\n\t * @param description - The description to use\n\t */\n\tpublic setDescription(description: string | null): this {\n\t\t// Data assertions\n\t\tdescriptionPredicate.parse(description);\n\n\t\tthis.data.description = description ?? undefined;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the footer of this embed.\n\t *\n\t * @param options - The footer to use\n\t */\n\tpublic setFooter(options: EmbedFooterOptions | null): this {\n\t\tif (options === null) {\n\t\t\tthis.data.footer = undefined;\n\t\t\treturn this;\n\t\t}\n\n\t\t// Data assertions\n\t\tembedFooterPredicate.parse(options);\n\n\t\tthis.data.footer = { text: options.text, icon_url: options.iconURL };\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the image of this embed.\n\t *\n\t * @param url - The image URL to use\n\t */\n\tpublic setImage(url: string | null): this {\n\t\t// Data assertions\n\t\timageURLPredicate.parse(url);\n\n\t\tthis.data.image = url ? { url } : undefined;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the thumbnail of this embed.\n\t *\n\t * @param url - The thumbnail URL to use\n\t */\n\tpublic setThumbnail(url: string | null): this {\n\t\t// Data assertions\n\t\timageURLPredicate.parse(url);\n\n\t\tthis.data.thumbnail = url ? { url } : undefined;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the timestamp of this embed.\n\t *\n\t * @param timestamp - The timestamp or date to use\n\t */\n\tpublic setTimestamp(timestamp: Date | number | null = Date.now()): this {\n\t\t// Data assertions\n\t\ttimestampPredicate.parse(timestamp);\n\n\t\tthis.data.timestamp = timestamp ? new Date(timestamp).toISOString() : undefined;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the title for this embed.\n\t *\n\t * @param title - The title to use\n\t */\n\tpublic setTitle(title: string | null): this {\n\t\t// Data assertions\n\t\ttitlePredicate.parse(title);\n\n\t\tthis.data.title = title ?? undefined;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the URL of this embed.\n\t *\n\t * @param url - The URL to use\n\t */\n\tpublic setURL(url: string | null): this {\n\t\t// Data assertions\n\t\turlPredicate.parse(url);\n\n\t\tthis.data.url = url ?? undefined;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Serializes this builder to API-compatible JSON data.\n\t *\n\t * @remarks\n\t * This method runs validations on the data before serializing it.\n\t * As such, it may throw an error if the data is invalid.\n\t */\n\tpublic toJSON(): APIEmbed {\n\t\treturn { ...this.data };\n\t}\n}\n", "import { s } from '@sapphire/shapeshift';\nimport { ButtonStyle, ChannelType, type APIMessageComponentEmoji } from 'discord-api-types/v10';\nimport { isValidationEnabled } from '../util/validation.js';\nimport { StringSelectMenuOptionBuilder } from './selectMenu/StringSelectMenuOption.js';\n\nexport const customIdValidator = s\n\t.string()\n\t.lengthGreaterThanOrEqual(1)\n\t.lengthLessThanOrEqual(100)\n\t.setValidationEnabled(isValidationEnabled);\n\nexport const emojiValidator = s\n\t.object({\n\t\tid: s.string(),\n\t\tname: s.string(),\n\t\tanimated: s.boolean(),\n\t})\n\t.partial()\n\t.strict()\n\t.setValidationEnabled(isValidationEnabled);\n\nexport const disabledValidator = s.boolean();\n\nexport const buttonLabelValidator = s\n\t.string()\n\t.lengthGreaterThanOrEqual(1)\n\t.lengthLessThanOrEqual(80)\n\t.setValidationEnabled(isValidationEnabled);\n\nexport const buttonStyleValidator = s.nativeEnum(ButtonStyle);\n\nexport const placeholderValidator = s.string().lengthLessThanOrEqual(150).setValidationEnabled(isValidationEnabled);\nexport const minMaxValidator = s\n\t.number()\n\t.int()\n\t.greaterThanOrEqual(0)\n\t.lessThanOrEqual(25)\n\t.setValidationEnabled(isValidationEnabled);\n\nexport const labelValueDescriptionValidator = s\n\t.string()\n\t.lengthGreaterThanOrEqual(1)\n\t.lengthLessThanOrEqual(100)\n\t.setValidationEnabled(isValidationEnabled);\n\nexport const jsonOptionValidator = s\n\t.object({\n\t\tlabel: labelValueDescriptionValidator,\n\t\tvalue: labelValueDescriptionValidator,\n\t\tdescription: labelValueDescriptionValidator.optional(),\n\t\temoji: emojiValidator.optional(),\n\t\tdefault: s.boolean().optional(),\n\t})\n\t.setValidationEnabled(isValidationEnabled);\n\nexport const optionValidator = s.instance(StringSelectMenuOptionBuilder).setValidationEnabled(isValidationEnabled);\n\nexport const optionsValidator = optionValidator\n\t.array()\n\t.lengthGreaterThanOrEqual(0)\n\t.setValidationEnabled(isValidationEnabled);\nexport const optionsLengthValidator = s\n\t.number()\n\t.int()\n\t.greaterThanOrEqual(0)\n\t.lessThanOrEqual(25)\n\t.setValidationEnabled(isValidationEnabled);\n\nexport function validateRequiredSelectMenuParameters(options: StringSelectMenuOptionBuilder[], customId?: string) {\n\tcustomIdValidator.parse(customId);\n\toptionsValidator.parse(options);\n}\n\nexport const defaultValidator = s.boolean();\n\nexport function validateRequiredSelectMenuOptionParameters(label?: string, value?: string) {\n\tlabelValueDescriptionValidator.parse(label);\n\tlabelValueDescriptionValidator.parse(value);\n}\n\nexport const channelTypesValidator = s.nativeEnum(ChannelType).array().setValidationEnabled(isValidationEnabled);\n\nexport const urlValidator = s\n\t.string()\n\t.url({\n\t\tallowedProtocols: ['http:', 'https:', 'discord:'],\n\t})\n\t.setValidationEnabled(isValidationEnabled);\n\nexport function validateRequiredButtonParameters(\n\tstyle?: ButtonStyle,\n\tlabel?: string,\n\temoji?: APIMessageComponentEmoji,\n\tcustomId?: string,\n\tskuId?: string,\n\turl?: string,\n) {\n\tif (style === ButtonStyle.Premium) {\n\t\tif (!skuId) {\n\t\t\tthrow new RangeError('Premium buttons must have an SKU id.');\n\t\t}\n\n\t\tif (customId || label || url || emoji) {\n\t\t\tthrow new RangeError('Premium buttons cannot have a custom id, label, URL, or emoji.');\n\t\t}\n\t} else {\n\t\tif (skuId) {\n\t\t\tthrow new RangeError('Non-premium buttons must not have an SKU id.');\n\t\t}\n\n\t\tif (url && customId) {\n\t\t\tthrow new RangeError('URL and custom id are mutually exclusive.');\n\t\t}\n\n\t\tif (!label && !emoji) {\n\t\t\tthrow new RangeError('Non-premium buttons must have a label and/or an emoji.');\n\t\t}\n\n\t\tif (style === ButtonStyle.Link) {\n\t\t\tif (!url) {\n\t\t\t\tthrow new RangeError('Link buttons must have a URL.');\n\t\t\t}\n\t\t} else if (url) {\n\t\t\tthrow new RangeError('Non-premium and non-link buttons cannot have a URL.');\n\t\t}\n\t}\n}\n", "import type { JSONEncodable } from '@discordjs/util';\nimport type { APIMessageComponentEmoji, APISelectMenuOption } from 'discord-api-types/v10';\nimport {\n\tdefaultValidator,\n\temojiValidator,\n\tlabelValueDescriptionValidator,\n\tvalidateRequiredSelectMenuOptionParameters,\n} from '../Assertions.js';\n\n/**\n * A builder that creates API-compatible JSON data for string select menu options.\n */\nexport class StringSelectMenuOptionBuilder implements JSONEncodable<APISelectMenuOption> {\n\t/**\n\t * Creates a new string select menu option from API data.\n\t *\n\t * @param data - The API data to create this string select menu option with\n\t * @example\n\t * Creating a string select menu option from an API data object:\n\t * ```ts\n\t * const selectMenuOption = new SelectMenuOptionBuilder({\n\t * \tlabel: 'catchy label',\n\t * \tvalue: '1',\n\t * });\n\t * ```\n\t * @example\n\t * Creating a string select menu option using setters and API data:\n\t * ```ts\n\t * const selectMenuOption = new SelectMenuOptionBuilder({\n\t * \tdefault: true,\n\t * \tvalue: '1',\n\t * })\n\t * \t.setLabel('woah');\n\t * ```\n\t */\n\tpublic constructor(public data: Partial<APISelectMenuOption> = {}) {}\n\n\t/**\n\t * Sets the label for this option.\n\t *\n\t * @param label - The label to use\n\t */\n\tpublic setLabel(label: string) {\n\t\tthis.data.label = labelValueDescriptionValidator.parse(label);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the value for this option.\n\t *\n\t * @param value - The value to use\n\t */\n\tpublic setValue(value: string) {\n\t\tthis.data.value = labelValueDescriptionValidator.parse(value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the description for this option.\n\t *\n\t * @param description - The description to use\n\t */\n\tpublic setDescription(description: string) {\n\t\tthis.data.description = labelValueDescriptionValidator.parse(description);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets whether this option is selected by default.\n\t *\n\t * @param isDefault - Whether this option is selected by default\n\t */\n\tpublic setDefault(isDefault = true) {\n\t\tthis.data.default = defaultValidator.parse(isDefault);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the emoji to display for this option.\n\t *\n\t * @param emoji - The emoji to use\n\t */\n\tpublic setEmoji(emoji: APIMessageComponentEmoji) {\n\t\tthis.data.emoji = emojiValidator.parse(emoji);\n\t\treturn this;\n\t}\n\n\t/**\n\t * {@inheritDoc BaseSelectMenuBuilder.toJSON}\n\t */\n\tpublic toJSON(): APISelectMenuOption {\n\t\tvalidateRequiredSelectMenuOptionParameters(this.data.label, this.data.value);\n\n\t\treturn {\n\t\t\t...this.data,\n\t\t} as APISelectMenuOption;\n\t}\n}\n", "/* eslint-disable jsdoc/check-param-names */\n\nimport {\n\ttype APIActionRowComponent,\n\tComponentType,\n\ttype APIMessageActionRowComponent,\n\ttype APIModalActionRowComponent,\n\ttype APIActionRowComponentTypes,\n} from 'discord-api-types/v10';\nimport { normalizeArray, type RestOrArray } from '../util/normalizeArray.js';\nimport { ComponentBuilder } from './Component.js';\nimport { createComponentBuilder } from './Components.js';\nimport type { ButtonBuilder } from './button/Button.js';\nimport type { ChannelSelectMenuBuilder } from './selectMenu/ChannelSelectMenu.js';\nimport type { MentionableSelectMenuBuilder } from './selectMenu/MentionableSelectMenu.js';\nimport type { RoleSelectMenuBuilder } from './selectMenu/RoleSelectMenu.js';\nimport type { StringSelectMenuBuilder } from './selectMenu/StringSelectMenu.js';\nimport type { UserSelectMenuBuilder } from './selectMenu/UserSelectMenu.js';\nimport type { TextInputBuilder } from './textInput/TextInput.js';\n\n/**\n * The builders that may be used for messages.\n */\nexport type MessageComponentBuilder =\n\t| ActionRowBuilder<MessageActionRowComponentBuilder>\n\t| MessageActionRowComponentBuilder;\n\n/**\n * The builders that may be used for modals.\n */\nexport type ModalComponentBuilder = ActionRowBuilder<ModalActionRowComponentBuilder> | ModalActionRowComponentBuilder;\n\n/**\n * The builders that may be used within an action row for messages.\n */\nexport type MessageActionRowComponentBuilder =\n\t| ButtonBuilder\n\t| ChannelSelectMenuBuilder\n\t| MentionableSelectMenuBuilder\n\t| RoleSelectMenuBuilder\n\t| StringSelectMenuBuilder\n\t| UserSelectMenuBuilder;\n\n/**\n * The builders that may be used within an action row for modals.\n */\nexport type ModalActionRowComponentBuilder = TextInputBuilder;\n\n/**\n * Any builder.\n */\nexport type AnyComponentBuilder = MessageActionRowComponentBuilder | ModalActionRowComponentBuilder;\n\n/**\n * A builder that creates API-compatible JSON data for action rows.\n *\n * @typeParam ComponentType - The types of components this action row holds\n */\nexport class ActionRowBuilder<ComponentType extends AnyComponentBuilder> extends ComponentBuilder<\n\tAPIActionRowComponent<APIMessageActionRowComponent | APIModalActionRowComponent>\n> {\n\t/**\n\t * The components within this action row.\n\t */\n\tpublic readonly components: ComponentType[];\n\n\t/**\n\t * Creates a new action row from API data.\n\t *\n\t * @param data - The API data to create this action row with\n\t * @example\n\t * Creating an action row from an API data object:\n\t * ```ts\n\t * const actionRow = new ActionRowBuilder({\n\t * \tcomponents: [\n\t * \t\t{\n\t * \t\t\tcustom_id: \"custom id\",\n\t * \t\t\tlabel: \"Type something\",\n\t * \t\t\tstyle: TextInputStyle.Short,\n\t * \t\t\ttype: ComponentType.TextInput,\n\t * \t\t},\n\t * \t],\n\t * });\n\t * ```\n\t * @example\n\t * Creating an action row using setters and API data:\n\t * ```ts\n\t * const actionRow = new ActionRowBuilder({\n\t * \tcomponents: [\n\t * \t\t{\n\t * \t\t\tcustom_id: \"custom id\",\n\t * \t\t\tlabel: \"Click me\",\n\t * \t\t\tstyle: ButtonStyle.Primary,\n\t * \t\t\ttype: ComponentType.Button,\n\t * \t\t},\n\t * \t],\n\t * })\n\t * \t.addComponents(button2, button3);\n\t * ```\n\t */\n\tpublic constructor({ components, ...data }: Partial<APIActionRowComponent<APIActionRowComponentTypes>> = {}) {\n\t\tsuper({ type: ComponentType.ActionRow, ...data });\n\t\tthis.components = (components?.map((component) => createComponentBuilder(component)) ?? []) as ComponentType[];\n\t}\n\n\t/**\n\t * Adds components to this action row.\n\t *\n\t * @param components - The components to add\n\t */\n\tpublic addComponents(...components: RestOrArray<ComponentType>) {\n\t\tthis.components.push(...normalizeArray(components));\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets components for this action row.\n\t *\n\t * @param components - The components to set\n\t */\n\tpublic setComponents(...components: RestOrArray<ComponentType>) {\n\t\tthis.components.splice(0, this.components.length, ...normalizeArray(components));\n\t\treturn this;\n\t}\n\n\t/**\n\t * {@inheritDoc ComponentBuilder.toJSON}\n\t */\n\tpublic toJSON(): APIActionRowComponent<ReturnType<ComponentType['toJSON']>> {\n\t\treturn {\n\t\t\t...this.data,\n\t\t\tcomponents: this.components.map((component) => component.toJSON()),\n\t\t} as APIActionRowComponent<ReturnType<ComponentType['toJSON']>>;\n\t}\n}\n", "import type { JSONEncodable } from '@discordjs/util';\nimport type {\n\tAPIActionRowComponent,\n\tAPIActionRowComponentTypes,\n\tAPIBaseComponent,\n\tComponentType,\n} from 'discord-api-types/v10';\n\n/**\n * Any action row component data represented as an object.\n */\nexport type AnyAPIActionRowComponent = APIActionRowComponent<APIActionRowComponentTypes> | APIActionRowComponentTypes;\n\n/**\n * The base component builder that contains common symbols for all sorts of components.\n *\n * @typeParam DataType - The type of internal API data that is stored within the component\n */\nexport abstract class ComponentBuilder<\n\tDataType extends Partial<APIBaseComponent<ComponentType>> = APIBaseComponent<ComponentType>,\n> implements JSONEncodable<AnyAPIActionRowComponent>\n{\n\t/**\n\t * The API data associated with this component.\n\t */\n\tpublic readonly data: Partial<DataType>;\n\n\t/**\n\t * Serializes this builder to API-compatible JSON data.\n\t *\n\t * @remarks\n\t * This method runs validations on the data before serializing it.\n\t * As such, it may throw an error if the data is invalid.\n\t */\n\tpublic abstract toJSON(): AnyAPIActionRowComponent;\n\n\t/**\n\t * Constructs a new kind of component.\n\t *\n\t * @param data - The data to construct a component out of\n\t */\n\tpublic constructor(data: Partial<DataType>) {\n\t\tthis.data = data;\n\t}\n}\n", "import { ComponentType, type APIMessageComponent, type APIModalComponent } from 'discord-api-types/v10';\nimport {\n\tActionRowBuilder,\n\ttype AnyComponentBuilder,\n\ttype MessageComponentBuilder,\n\ttype ModalComponentBuilder,\n} from './ActionRow.js';\nimport { ComponentBuilder } from './Component.js';\nimport { ButtonBuilder } from './button/Button.js';\nimport { ChannelSelectMenuBuilder } from './selectMenu/ChannelSelectMenu.js';\nimport { MentionableSelectMenuBuilder } from './selectMenu/MentionableSelectMenu.js';\nimport { RoleSelectMenuBuilder } from './selectMenu/RoleSelectMenu.js';\nimport { StringSelectMenuBuilder } from './selectMenu/StringSelectMenu.js';\nimport { UserSelectMenuBuilder } from './selectMenu/UserSelectMenu.js';\nimport { TextInputBuilder } from './textInput/TextInput.js';\n\n/**\n * Components here are mapped to their respective builder.\n */\nexport interface MappedComponentTypes {\n\t/**\n\t * The action row component type is associated with an {@link ActionRowBuilder}.\n\t */\n\t[ComponentType.ActionRow]: ActionRowBuilder<AnyComponentBuilder>;\n\t/**\n\t * The button component type is associated with a {@link ButtonBuilder}.\n\t */\n\t[ComponentType.Button]: ButtonBuilder;\n\t/**\n\t * The string select component type is associated with a {@link StringSelectMenuBuilder}.\n\t */\n\t[ComponentType.StringSelect]: StringSelectMenuBuilder;\n\t/**\n\t * The text input component type is associated with a {@link TextInputBuilder}.\n\t */\n\t[ComponentType.TextInput]: TextInputBuilder;\n\t/**\n\t * The user select component type is associated with a {@link UserSelectMenuBuilder}.\n\t */\n\t[ComponentType.UserSelect]: UserSelectMenuBuilder;\n\t/**\n\t * The role select component type is associated with a {@link RoleSelectMenuBuilder}.\n\t */\n\t[ComponentType.RoleSelect]: RoleSelectMenuBuilder;\n\t/**\n\t * The mentionable select component type is associated with a {@link MentionableSelectMenuBuilder}.\n\t */\n\t[ComponentType.MentionableSelect]: MentionableSelectMenuBuilder;\n\t/**\n\t * The channel select component type is associated with a {@link ChannelSelectMenuBuilder}.\n\t */\n\t[ComponentType.ChannelSelect]: ChannelSelectMenuBuilder;\n}\n\n/**\n * Factory for creating components from API data.\n *\n * @typeParam ComponentType - The type of component to use\n * @param data - The API data to transform to a component class\n */\nexport function createComponentBuilder<ComponentType extends keyof MappedComponentTypes>(\n\t// eslint-disable-next-line @typescript-eslint/sort-type-constituents\n\tdata: (APIModalComponent | APIMessageComponent) & { type: ComponentType },\n): MappedComponentTypes[ComponentType];\n\n/**\n * Factory for creating components from API data.\n *\n * @typeParam ComponentBuilder - The type of component to use\n * @param data - The API data to transform to a component class\n */\nexport function createComponentBuilder<ComponentBuilder extends MessageComponentBuilder | ModalComponentBuilder>(\n\tdata: ComponentBuilder,\n): ComponentBuilder;\n\nexport function createComponentBuilder(\n\tdata: APIMessageComponent | APIModalComponent | MessageComponentBuilder,\n): ComponentBuilder {\n\tif (data instanceof ComponentBuilder) {\n\t\treturn data;\n\t}\n\n\tswitch (data.type) {\n\t\tcase ComponentType.ActionRow:\n\t\t\treturn new ActionRowBuilder(data);\n\t\tcase ComponentType.Button:\n\t\t\treturn new ButtonBuilder(data);\n\t\tcase ComponentType.StringSelect:\n\t\t\treturn new StringSelectMenuBuilder(data);\n\t\tcase ComponentType.TextInput:\n\t\t\treturn new TextInputBuilder(data);\n\t\tcase ComponentType.UserSelect:\n\t\t\treturn new UserSelectMenuBuilder(data);\n\t\tcase ComponentType.RoleSelect:\n\t\t\treturn new RoleSelectMenuBuilder(data);\n\t\tcase ComponentType.MentionableSelect:\n\t\t\treturn new MentionableSelectMenuBuilder(data);\n\t\tcase ComponentType.ChannelSelect:\n\t\t\treturn new ChannelSelectMenuBuilder(data);\n\t\tdefault:\n\t\t\t// @ts-expect-error This case can still occur if we get a newer unsupported component type\n\t\t\tthrow new Error(`Cannot properly serialize component type: ${data.type}`);\n\t}\n}\n", "import {\n\tComponentType,\n\ttype APIButtonComponent,\n\ttype APIButtonComponentWithCustomId,\n\ttype APIButtonComponentWithSKUId,\n\ttype APIButtonComponentWithURL,\n\ttype APIMessageComponentEmoji,\n\ttype ButtonStyle,\n\ttype Snowflake,\n} from 'discord-api-types/v10';\nimport {\n\tbuttonLabelValidator,\n\tbuttonStyleValidator,\n\tcustomIdValidator,\n\tdisabledValidator,\n\temojiValidator,\n\turlValidator,\n\tvalidateRequiredButtonParameters,\n} from '../Assertions.js';\nimport { ComponentBuilder } from '../Component.js';\n\n/**\n * A builder that creates API-compatible JSON data for buttons.\n */\nexport class ButtonBuilder extends ComponentBuilder<APIButtonComponent> {\n\t/**\n\t * Creates a new button from API data.\n\t *\n\t * @param data - The API data to create this button with\n\t * @example\n\t * Creating a button from an API data object:\n\t * ```ts\n\t * const button = new ButtonBuilder({\n\t * \tcustom_id: 'a cool button',\n\t * \tstyle: ButtonStyle.Primary,\n\t * \tlabel: 'Click Me',\n\t * \temoji: {\n\t * \t\tname: 'smile',\n\t * \t\tid: '123456789012345678',\n\t * \t},\n\t * });\n\t * ```\n\t * @example\n\t * Creating a button using setters and API data:\n\t * ```ts\n\t * const button = new ButtonBuilder({\n\t * \tstyle: ButtonStyle.Secondary,\n\t * \tlabel: 'Click Me',\n\t * })\n\t * \t.setEmoji({ name: '🙂' })\n\t * \t.setCustomId('another cool button');\n\t * ```\n\t */\n\tpublic constructor(data?: Partial<APIButtonComponent>) {\n\t\tsuper({ type: ComponentType.Button, ...data });\n\t}\n\n\t/**\n\t * Sets the style of this button.\n\t *\n\t * @param style - The style to use\n\t */\n\tpublic setStyle(style: ButtonStyle) {\n\t\tthis.data.style = buttonStyleValidator.parse(style);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the URL for this button.\n\t *\n\t * @remarks\n\t * This method is only available to buttons using the `Link` button style.\n\t * Only three types of URL schemes are currently supported: `https://`, `http://`, and `discord://`.\n\t * @param url - The URL to use\n\t */\n\tpublic setURL(url: string) {\n\t\t(this.data as APIButtonComponentWithURL).url = urlValidator.parse(url);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the custom id for this button.\n\t *\n\t * @remarks\n\t * This method is only applicable to buttons that are not using the `Link` button style.\n\t * @param customId - The custom id to use\n\t */\n\tpublic setCustomId(customId: string) {\n\t\t(this.data as APIButtonComponentWithCustomId).custom_id = customIdValidator.parse(customId);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the SKU id that represents a purchasable SKU for this button.\n\t *\n\t * @remarks Only available when using premium-style buttons.\n\t * @param skuId - The SKU id to use\n\t */\n\tpublic setSKUId(skuId: Snowflake) {\n\t\t(this.data as APIButtonComponentWithSKUId).sku_id = skuId;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the emoji to display on this button.\n\t *\n\t * @param emoji - The emoji to use\n\t */\n\tpublic setEmoji(emoji: APIMessageComponentEmoji) {\n\t\t(this.data as Exclude<APIButtonComponent, APIButtonComponentWithSKUId>).emoji = emojiValidator.parse(emoji);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets whether this button is disabled.\n\t *\n\t * @param disabled - Whether to disable this button\n\t */\n\tpublic setDisabled(disabled = true) {\n\t\tthis.data.disabled = disabledValidator.parse(disabled);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the label for this button.\n\t *\n\t * @param label - The label to use\n\t */\n\tpublic setLabel(label: string) {\n\t\t(this.data as Exclude<APIButtonComponent, APIButtonComponentWithSKUId>).label = buttonLabelValidator.parse(label);\n\t\treturn this;\n\t}\n\n\t/**\n\t * {@inheritDoc ComponentBuilder.toJSON}\n\t */\n\tpublic toJSON(): APIButtonComponent {\n\t\tvalidateRequiredButtonParameters(\n\t\t\tthis.data.style,\n\t\t\t(this.data as Exclude<APIButtonComponent, APIButtonComponentWithSKUId>).label,\n\t\t\t(this.data as Exclude<APIButtonComponent, APIButtonComponentWithSKUId>).emoji,\n\t\t\t(this.data as APIButtonComponentWithCustomId).custom_id,\n\t\t\t(this.data as APIButtonComponentWithSKUId).sku_id,\n\t\t\t(this.data as APIButtonComponentWithURL).url,\n\t\t);\n\n\t\treturn {\n\t\t\t...this.data,\n\t\t} as APIButtonComponent;\n\t}\n}\n", "import {\n\ttype APIChannelSelectComponent,\n\ttype ChannelType,\n\ttype Snowflake,\n\tComponentType,\n\tSelectMenuDefaultValueType,\n} from 'discord-api-types/v10';\nimport { type RestOrArray, normalizeArray } from '../../util/normalizeArray.js';\nimport { channelTypesValidator, customIdValidator, optionsLengthValidator } from '../Assertions.js';\nimport { BaseSelectMenuBuilder } from './BaseSelectMenu.js';\n\n/**\n * A builder that creates API-compatible JSON data for channel select menus.\n */\nexport class ChannelSelectMenuBuilder extends BaseSelectMenuBuilder<APIChannelSelectComponent> {\n\t/**\n\t * Creates a new select menu from API data.\n\t *\n\t * @param data - The API data to create this select menu with\n\t * @example\n\t * Creating a select menu from an API data object:\n\t * ```ts\n\t * const selectMenu = new ChannelSelectMenuBuilder({\n\t * \tcustom_id: 'a cool select menu',\n\t * \tplaceholder: 'select an option',\n\t * \tmax_values: 2,\n\t * });\n\t * ```\n\t * @example\n\t * Creating a select menu using setters and API data:\n\t * ```ts\n\t * const selectMenu = new ChannelSelectMenuBuilder({\n\t * \tcustom_id: 'a cool select menu',\n\t * })\n\t * \t.addChannelTypes(ChannelType.GuildText, ChannelType.GuildAnnouncement)\n\t * \t.setMinValues(2);\n\t * ```\n\t */\n\tpublic constructor(data?: Partial<APIChannelSelectComponent>) {\n\t\tsuper({ ...data, type: ComponentType.ChannelSelect });\n\t}\n\n\t/**\n\t * Adds channel types to this select menu.\n\t *\n\t * @param types - The channel types to use\n\t */\n\tpublic addChannelTypes(...types: RestOrArray<ChannelType>) {\n\t\tconst normalizedTypes = normalizeArray(types);\n\t\tthis.data.channel_types ??= [];\n\t\tthis.data.channel_types.push(...channelTypesValidator.parse(normalizedTypes));\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets channel types for this select menu.\n\t *\n\t * @param types - The channel types to use\n\t */\n\tpublic setChannelTypes(...types: RestOrArray<ChannelType>) {\n\t\tconst normalizedTypes = normalizeArray(types);\n\t\tthis.data.channel_types ??= [];\n\t\tthis.data.channel_types.splice(0, this.data.channel_types.length, ...channelTypesValidator.parse(normalizedTypes));\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds default channels to this auto populated select menu.\n\t *\n\t * @param channels - The channels to add\n\t */\n\tpublic addDefaultChannels(...channels: RestOrArray<Snowflake>) {\n\t\tconst normalizedValues = normalizeArray(channels);\n\t\toptionsLengthValidator.parse((this.data.default_values?.length ?? 0) + normalizedValues.length);\n\t\tthis.data.default_values ??= [];\n\n\t\tthis.data.default_values.push(\n\t\t\t...normalizedValues.map((id) => ({\n\t\t\t\tid,\n\t\t\t\ttype: SelectMenuDefaultValueType.Channel as const,\n\t\t\t})),\n\t\t);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets default channels for this auto populated select menu.\n\t *\n\t * @param channels - The channels to set\n\t */\n\tpublic setDefaultChannels(...channels: RestOrArray<Snowflake>) {\n\t\tconst normalizedValues = normalizeArray(channels);\n\t\toptionsLengthValidator.parse(normalizedValues.length);\n\n\t\tthis.data.default_values = normalizedValues.map((id) => ({\n\t\t\tid,\n\t\t\ttype: SelectMenuDefaultValueType.Channel as const,\n\t\t}));\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * {@inheritDoc BaseSelectMenuBuilder.toJSON}\n\t */\n\tpublic override toJSON(): APIChannelSelectComponent {\n\t\tcustomIdValidator.parse(this.data.custom_id);\n\n\t\treturn {\n\t\t\t...this.data,\n\t\t} as APIChannelSelectComponent;\n\t}\n}\n", "import type { APISelectMenuComponent } from 'discord-api-types/v10';\nimport { customIdValidator, disabledValidator, minMaxValidator, placeholderValidator } from '../Assertions.js';\nimport { ComponentBuilder } from '../Component.js';\n\n/**\n * The base select menu builder that contains common symbols for select menu builders.\n *\n * @typeParam SelectMenuType - The type of select menu this would be instantiated for.\n */\nexport abstract class BaseSelectMenuBuilder<\n\tSelectMenuType extends APISelectMenuComponent,\n> extends ComponentBuilder<SelectMenuType> {\n\t/**\n\t * Sets the placeholder for this select menu.\n\t *\n\t * @param placeholder - The placeholder to use\n\t */\n\tpublic setPlaceholder(placeholder: string) {\n\t\tthis.data.placeholder = placeholderValidator.parse(placeholder);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the minimum values that must be selected in the select menu.\n\t *\n\t * @param minValues - The minimum values that must be selected\n\t */\n\tpublic setMinValues(minValues: number) {\n\t\tthis.data.min_values = minMaxValidator.parse(minValues);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the maximum values that must be selected in the select menu.\n\t *\n\t * @param maxValues - The maximum values that must be selected\n\t */\n\tpublic setMaxValues(maxValues: number) {\n\t\tthis.data.max_values = minMaxValidator.parse(maxValues);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the custom id for this select menu.\n\t *\n\t * @param customId - The custom id to use\n\t */\n\tpublic setCustomId(customId: string) {\n\t\tthis.data.custom_id = customIdValidator.parse(customId);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets whether this select menu is disabled.\n\t *\n\t * @param disabled - Whether this select menu is disabled\n\t */\n\tpublic setDisabled(disabled = true) {\n\t\tthis.data.disabled = disabledValidator.parse(disabled);\n\t\treturn this;\n\t}\n\n\t/**\n\t * {@inheritDoc ComponentBuilder.toJSON}\n\t */\n\tpublic toJSON(): SelectMenuType {\n\t\tcustomIdValidator.parse(this.data.custom_id);\n\t\treturn {\n\t\t\t...this.data,\n\t\t} as SelectMenuType;\n\t}\n}\n", "import {\n\ttype APIMentionableSelectComponent,\n\ttype APISelectMenuDefaultValue,\n\ttype Snowflake,\n\tComponentType,\n\tSelectMenuDefaultValueType,\n} from 'discord-api-types/v10';\nimport { type RestOrArray, normalizeArray } from '../../util/normalizeArray.js';\nimport { optionsLengthValidator } from '../Assertions.js';\nimport { BaseSelectMenuBuilder } from './BaseSelectMenu.js';\n\n/**\n * A builder that creates API-compatible JSON data for mentionable select menus.\n */\nexport class MentionableSelectMenuBuilder extends BaseSelectMenuBuilder<APIMentionableSelectComponent> {\n\t/**\n\t * Creates a new select menu from API data.\n\t *\n\t * @param data - The API data to create this select menu with\n\t * @example\n\t * Creating a select menu from an API data object:\n\t * ```ts\n\t * const selectMenu = new MentionableSelectMenuBuilder({\n\t * \tcustom_id: 'a cool select menu',\n\t * \tplaceholder: 'select an option',\n\t * \tmax_values: 2,\n\t * });\n\t * ```\n\t * @example\n\t * Creating a select menu using setters and API data:\n\t * ```ts\n\t * const selectMenu = new MentionableSelectMenuBuilder({\n\t * \tcustom_id: 'a cool select menu',\n\t * })\n\t * \t.setMinValues(1);\n\t * ```\n\t */\n\tpublic constructor(data?: Partial<APIMentionableSelectComponent>) {\n\t\tsuper({ ...data, type: ComponentType.MentionableSelect });\n\t}\n\n\t/**\n\t * Adds default roles to this auto populated select menu.\n\t *\n\t * @param roles - The roles to add\n\t */\n\tpublic addDefaultRoles(...roles: RestOrArray<Snowflake>) {\n\t\tconst normalizedValues = normalizeArray(roles);\n\t\toptionsLengthValidator.parse((this.data.default_values?.length ?? 0) + normalizedValues.length);\n\t\tthis.data.default_values ??= [];\n\n\t\tthis.data.default_values.push(\n\t\t\t...normalizedValues.map((id) => ({\n\t\t\t\tid,\n\t\t\t\ttype: SelectMenuDefaultValueType.Role as const,\n\t\t\t})),\n\t\t);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds default users to this auto populated select menu.\n\t *\n\t * @param users - The users to add\n\t */\n\tpublic addDefaultUsers(...users: RestOrArray<Snowflake>) {\n\t\tconst normalizedValues = normalizeArray(users);\n\t\toptionsLengthValidator.parse((this.data.default_values?.length ?? 0) + normalizedValues.length);\n\t\tthis.data.default_values ??= [];\n\n\t\tthis.data.default_values.push(\n\t\t\t...normalizedValues.map((id) => ({\n\t\t\t\tid,\n\t\t\t\ttype: SelectMenuDefaultValueType.User as const,\n\t\t\t})),\n\t\t);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds default values to this auto populated select menu.\n\t *\n\t * @param values - The values to add\n\t */\n\tpublic addDefaultValues(\n\t\t...values: RestOrArray<\n\t\t\t| APISelectMenuDefaultValue<SelectMenuDefaultValueType.Role>\n\t\t\t| APISelectMenuDefaultValue<SelectMenuDefaultValueType.User>\n\t\t>\n\t) {\n\t\tconst normalizedValues = normalizeArray(values);\n\t\toptionsLengthValidator.parse((this.data.default_values?.length ?? 0) + normalizedValues.length);\n\t\tthis.data.default_values ??= [];\n\t\tthis.data.default_values.push(...normalizedValues);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets default values for this auto populated select menu.\n\t *\n\t * @param values - The values to set\n\t */\n\tpublic setDefaultValues(\n\t\t...values: RestOrArray<\n\t\t\t| APISelectMenuDefaultValue<SelectMenuDefaultValueType.Role>\n\t\t\t| APISelectMenuDefaultValue<SelectMenuDefaultValueType.User>\n\t\t>\n\t) {\n\t\tconst normalizedValues = normalizeArray(values);\n\t\toptionsLengthValidator.parse(normalizedValues.length);\n\t\tthis.data.default_values = normalizedValues;\n\t\treturn this;\n\t}\n}\n", "import {\n\ttype APIRoleSelectComponent,\n\ttype Snowflake,\n\tComponentType,\n\tSelectMenuDefaultValueType,\n} from 'discord-api-types/v10';\nimport { type RestOrArray, normalizeArray } from '../../util/normalizeArray.js';\nimport { optionsLengthValidator } from '../Assertions.js';\nimport { BaseSelectMenuBuilder } from './BaseSelectMenu.js';\n\n/**\n * A builder that creates API-compatible JSON data for role select menus.\n */\nexport class RoleSelectMenuBuilder extends BaseSelectMenuBuilder<APIRoleSelectComponent> {\n\t/**\n\t * Creates a new select menu from API data.\n\t *\n\t * @param data - The API data to create this select menu with\n\t * @example\n\t * Creating a select menu from an API data object:\n\t * ```ts\n\t * const selectMenu = new RoleSelectMenuBuilder({\n\t * \tcustom_id: 'a cool select menu',\n\t * \tplaceholder: 'select an option',\n\t * \tmax_values: 2,\n\t * });\n\t * ```\n\t * @example\n\t * Creating a select menu using setters and API data:\n\t * ```ts\n\t * const selectMenu = new RoleSelectMenuBuilder({\n\t * \tcustom_id: 'a cool select menu',\n\t * })\n\t * \t.setMinValues(1);\n\t * ```\n\t */\n\tpublic constructor(data?: Partial<APIRoleSelectComponent>) {\n\t\tsuper({ ...data, type: ComponentType.RoleSelect });\n\t}\n\n\t/**\n\t * Adds default roles to this auto populated select menu.\n\t *\n\t * @param roles - The roles to add\n\t */\n\tpublic addDefaultRoles(...roles: RestOrArray<Snowflake>) {\n\t\tconst normalizedValues = normalizeArray(roles);\n\t\toptionsLengthValidator.parse((this.data.default_values?.length ?? 0) + normalizedValues.length);\n\t\tthis.data.default_values ??= [];\n\n\t\tthis.data.default_values.push(\n\t\t\t...normalizedValues.map((id) => ({\n\t\t\t\tid,\n\t\t\t\ttype: SelectMenuDefaultValueType.Role as const,\n\t\t\t})),\n\t\t);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets default roles for this auto populated select menu.\n\t *\n\t * @param roles - The roles to set\n\t */\n\tpublic setDefaultRoles(...roles: RestOrArray<Snowflake>) {\n\t\tconst normalizedValues = normalizeArray(roles);\n\t\toptionsLengthValidator.parse(normalizedValues.length);\n\n\t\tthis.data.default_values = normalizedValues.map((id) => ({\n\t\t\tid,\n\t\t\ttype: SelectMenuDefaultValueType.Role as const,\n\t\t}));\n\n\t\treturn this;\n\t}\n}\n", "import { ComponentType } from 'discord-api-types/v10';\nimport type { APIStringSelectComponent, APISelectMenuOption } from 'discord-api-types/v10';\nimport { normalizeArray, type RestOrArray } from '../../util/normalizeArray.js';\nimport { jsonOptionValidator, optionsLengthValidator, validateRequiredSelectMenuParameters } from '../Assertions.js';\nimport { BaseSelectMenuBuilder } from './BaseSelectMenu.js';\nimport { StringSelectMenuOptionBuilder } from './StringSelectMenuOption.js';\n\n/**\n * A builder that creates API-compatible JSON data for string select menus.\n */\nexport class StringSelectMenuBuilder extends BaseSelectMenuBuilder<APIStringSelectComponent> {\n\t/**\n\t * The options within this select menu.\n\t */\n\tpublic readonly options: StringSelectMenuOptionBuilder[];\n\n\t/**\n\t * Creates a new select menu from API data.\n\t *\n\t * @param data - The API data to create this select menu with\n\t * @example\n\t * Creating a select menu from an API data object:\n\t * ```ts\n\t * const selectMenu = new StringSelectMenuBuilder({\n\t * \tcustom_id: 'a cool select menu',\n\t * \tplaceholder: 'select an option',\n\t * \tmax_values: 2,\n\t * \toptions: [\n\t * \t\t{ label: 'option 1', value: '1' },\n\t * \t\t{ label: 'option 2', value: '2' },\n\t * \t\t{ label: 'option 3', value: '3' },\n\t * \t],\n\t * });\n\t * ```\n\t * @example\n\t * Creating a select menu using setters and API data:\n\t * ```ts\n\t * const selectMenu = new StringSelectMenuBuilder({\n\t * \tcustom_id: 'a cool select menu',\n\t * })\n\t * \t.setMinValues(1)\n\t * \t.addOptions({\n\t * \t\tlabel: 'Catchy',\n\t * \t\tvalue: 'catch',\n\t * \t});\n\t * ```\n\t */\n\tpublic constructor(data?: Partial<APIStringSelectComponent>) {\n\t\tconst { options, ...initData } = data ?? {};\n\t\tsuper({ ...initData, type: ComponentType.StringSelect });\n\t\tthis.options = options?.map((option: APISelectMenuOption) => new StringSelectMenuOptionBuilder(option)) ?? [];\n\t}\n\n\t/**\n\t * Adds options to this select menu.\n\t *\n\t * @param options - The options to add\n\t */\n\tpublic addOptions(...options: RestOrArray<APISelectMenuOption | StringSelectMenuOptionBuilder>) {\n\t\tconst normalizedOptions = normalizeArray(options);\n\t\toptionsLengthValidator.parse(this.options.length + normalizedOptions.length);\n\t\tthis.options.push(\n\t\t\t...normalizedOptions.map((normalizedOption) =>\n\t\t\t\tnormalizedOption instanceof StringSelectMenuOptionBuilder\n\t\t\t\t\t? normalizedOption\n\t\t\t\t\t: new StringSelectMenuOptionBuilder(jsonOptionValidator.parse(normalizedOption)),\n\t\t\t),\n\t\t);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the options for this select menu.\n\t *\n\t * @param options - The options to set\n\t */\n\tpublic setOptions(...options: RestOrArray<APISelectMenuOption | StringSelectMenuOptionBuilder>) {\n\t\treturn this.spliceOptions(0, this.options.length, ...options);\n\t}\n\n\t/**\n\t * Removes, replaces, or inserts options for this select menu.\n\t *\n\t * @remarks\n\t * This method behaves similarly\n\t * to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice | Array.prototype.splice()}.\n\t * It's useful for modifying and adjusting the order of existing options.\n\t * @example\n\t * Remove the first option:\n\t * ```ts\n\t * selectMenu.spliceOptions(0, 1);\n\t * ```\n\t * @example\n\t * Remove the first n option:\n\t * ```ts\n\t * const n = 4;\n\t * selectMenu.spliceOptions(0, n);\n\t * ```\n\t * @example\n\t * Remove the last option:\n\t * ```ts\n\t * selectMenu.spliceOptions(-1, 1);\n\t * ```\n\t * @param index - The index to start at\n\t * @param deleteCount - The number of options to remove\n\t * @param options - The replacing option objects or builders\n\t */\n\tpublic spliceOptions(\n\t\tindex: number,\n\t\tdeleteCount: number,\n\t\t...options: RestOrArray<APISelectMenuOption | StringSelectMenuOptionBuilder>\n\t) {\n\t\tconst normalizedOptions = normalizeArray(options);\n\n\t\tconst clone = [...this.options];\n\n\t\tclone.splice(\n\t\t\tindex,\n\t\t\tdeleteCount,\n\t\t\t...normalizedOptions.map((normalizedOption) =>\n\t\t\t\tnormalizedOption instanceof StringSelectMenuOptionBuilder\n\t\t\t\t\t? normalizedOption\n\t\t\t\t\t: new StringSelectMenuOptionBuilder(jsonOptionValidator.parse(normalizedOption)),\n\t\t\t),\n\t\t);\n\n\t\toptionsLengthValidator.parse(clone.length);\n\t\tthis.options.splice(0, this.options.length, ...clone);\n\t\treturn this;\n\t}\n\n\t/**\n\t * {@inheritDoc BaseSelectMenuBuilder.toJSON}\n\t */\n\tpublic override toJSON(): APIStringSelectComponent {\n\t\tvalidateRequiredSelectMenuParameters(this.options, this.data.custom_id);\n\n\t\treturn {\n\t\t\t...this.data,\n\t\t\toptions: this.options.map((option) => option.toJSON()),\n\t\t} as APIStringSelectComponent;\n\t}\n}\n", "import {\n\ttype APIUserSelectComponent,\n\ttype Snowflake,\n\tComponentType,\n\tSelectMenuDefaultValueType,\n} from 'discord-api-types/v10';\nimport { type RestOrArray, normalizeArray } from '../../util/normalizeArray.js';\nimport { optionsLengthValidator } from '../Assertions.js';\nimport { BaseSelectMenuBuilder } from './BaseSelectMenu.js';\n\n/**\n * A builder that creates API-compatible JSON data for user select menus.\n */\nexport class UserSelectMenuBuilder extends BaseSelectMenuBuilder<APIUserSelectComponent> {\n\t/**\n\t * Creates a new select menu from API data.\n\t *\n\t * @param data - The API data to create this select menu with\n\t * @example\n\t * Creating a select menu from an API data object:\n\t * ```ts\n\t * const selectMenu = new UserSelectMenuBuilder({\n\t * \tcustom_id: 'a cool select menu',\n\t * \tplaceholder: 'select an option',\n\t * \tmax_values: 2,\n\t * });\n\t * ```\n\t * @example\n\t * Creating a select menu using setters and API data:\n\t * ```ts\n\t * const selectMenu = new UserSelectMenuBuilder({\n\t * \tcustom_id: 'a cool select menu',\n\t * })\n\t * \t.setMinValues(1);\n\t * ```\n\t */\n\tpublic constructor(data?: Partial<APIUserSelectComponent>) {\n\t\tsuper({ ...data, type: ComponentType.UserSelect });\n\t}\n\n\t/**\n\t * Adds default users to this auto populated select menu.\n\t *\n\t * @param users - The users to add\n\t */\n\tpublic addDefaultUsers(...users: RestOrArray<Snowflake>) {\n\t\tconst normalizedValues = normalizeArray(users);\n\t\toptionsLengthValidator.parse((this.data.default_values?.length ?? 0) + normalizedValues.length);\n\t\tthis.data.default_values ??= [];\n\n\t\tthis.data.default_values.push(\n\t\t\t...normalizedValues.map((id) => ({\n\t\t\t\tid,\n\t\t\t\ttype: SelectMenuDefaultValueType.User as const,\n\t\t\t})),\n\t\t);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets default users for this auto populated select menu.\n\t *\n\t * @param users - The users to set\n\t */\n\tpublic setDefaultUsers(...users: RestOrArray<Snowflake>) {\n\t\tconst normalizedValues = normalizeArray(users);\n\t\toptionsLengthValidator.parse(normalizedValues.length);\n\n\t\tthis.data.default_values = normalizedValues.map((id) => ({\n\t\t\tid,\n\t\t\ttype: SelectMenuDefaultValueType.User as const,\n\t\t}));\n\n\t\treturn this;\n\t}\n}\n", "import { isJSONEncodable, type Equatable, type JSONEncodable } from '@discordjs/util';\nimport { ComponentType, type TextInputStyle, type APITextInputComponent } from 'discord-api-types/v10';\nimport isEqual from 'fast-deep-equal';\nimport { customIdValidator } from '../Assertions.js';\nimport { ComponentBuilder } from '../Component.js';\nimport {\n\tmaxLengthValidator,\n\tminLengthValidator,\n\tplaceholderValidator,\n\trequiredValidator,\n\tvalueValidator,\n\tvalidateRequiredParameters,\n\tlabelValidator,\n\ttextInputStyleValidator,\n} from './Assertions.js';\n\n/**\n * A builder that creates API-compatible JSON data for text inputs.\n */\nexport class TextInputBuilder\n\textends ComponentBuilder<APITextInputComponent>\n\timplements Equatable<APITextInputComponent | JSONEncodable<APITextInputComponent>>\n{\n\t/**\n\t * Creates a new text input from API data.\n\t *\n\t * @param data - The API data to create this text input with\n\t * @example\n\t * Creating a text input from an API data object:\n\t * ```ts\n\t * const textInput = new TextInputBuilder({\n\t * \tcustom_id: 'a cool text input',\n\t * \tlabel: 'Type something',\n\t * \tstyle: TextInputStyle.Short,\n\t * });\n\t * ```\n\t * @example\n\t * Creating a text input using setters and API data:\n\t * ```ts\n\t * const textInput = new TextInputBuilder({\n\t * \tlabel: 'Type something else',\n\t * })\n\t * \t.setCustomId('woah')\n\t * \t.setStyle(TextInputStyle.Paragraph);\n\t * ```\n\t */\n\tpublic constructor(data?: APITextInputComponent & { type?: ComponentType.TextInput }) {\n\t\tsuper({ type: ComponentType.TextInput, ...data });\n\t}\n\n\t/**\n\t * Sets the custom id for this text input.\n\t *\n\t * @param customId - The custom id to use\n\t */\n\tpublic setCustomId(customId: string) {\n\t\tthis.data.custom_id = customIdValidator.parse(customId);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the label for this text input.\n\t *\n\t * @param label - The label to use\n\t */\n\tpublic setLabel(label: string) {\n\t\tthis.data.label = labelValidator.parse(label);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the style for this text input.\n\t *\n\t * @param style - The style to use\n\t */\n\tpublic setStyle(style: TextInputStyle) {\n\t\tthis.data.style = textInputStyleValidator.parse(style);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the minimum length of text for this text input.\n\t *\n\t * @param minLength - The minimum length of text for this text input\n\t */\n\tpublic setMinLength(minLength: number) {\n\t\tthis.data.min_length = minLengthValidator.parse(minLength);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the maximum length of text for this text input.\n\t *\n\t * @param maxLength - The maximum length of text for this text input\n\t */\n\tpublic setMaxLength(maxLength: number) {\n\t\tthis.data.max_length = maxLengthValidator.parse(maxLength);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the placeholder for this text input.\n\t *\n\t * @param placeholder - The placeholder to use\n\t */\n\tpublic setPlaceholder(placeholder: string) {\n\t\tthis.data.placeholder = placeholderValidator.parse(placeholder);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the value for this text input.\n\t *\n\t * @param value - The value to use\n\t */\n\tpublic setValue(value: string) {\n\t\tthis.data.value = valueValidator.parse(value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets whether this text input is required.\n\t *\n\t * @param required - Whether this text input is required\n\t */\n\tpublic setRequired(required = true) {\n\t\tthis.data.required = requiredValidator.parse(required);\n\t\treturn this;\n\t}\n\n\t/**\n\t * {@inheritDoc ComponentBuilder.toJSON}\n\t */\n\tpublic toJSON(): APITextInputComponent {\n\t\tvalidateRequiredParameters(this.data.custom_id, this.data.style, this.data.label);\n\n\t\treturn {\n\t\t\t...this.data,\n\t\t} as APITextInputComponent;\n\t}\n\n\t/**\n\t * Whether this is equal to another structure.\n\t */\n\tpublic equals(other: APITextInputComponent | JSONEncodable<APITextInputComponent>): boolean {\n\t\tif (isJSONEncodable(other)) {\n\t\t\treturn isEqual(other.toJSON(), this.data);\n\t\t}\n\n\t\treturn isEqual(other, this.data);\n\t}\n}\n", "import { s } from '@sapphire/shapeshift';\nimport { TextInputStyle } from 'discord-api-types/v10';\nimport { isValidationEnabled } from '../../util/validation.js';\nimport { customIdValidator } from '../Assertions.js';\n\nexport const textInputStyleValidator = s.nativeEnum(TextInputStyle);\nexport const minLengthValidator = s\n\t.number()\n\t.int()\n\t.greaterThanOrEqual(0)\n\t.lessThanOrEqual(4_000)\n\t.setValidationEnabled(isValidationEnabled);\nexport const maxLengthValidator = s\n\t.number()\n\t.int()\n\t.greaterThanOrEqual(1)\n\t.lessThanOrEqual(4_000)\n\t.setValidationEnabled(isValidationEnabled);\nexport const requiredValidator = s.boolean();\nexport const valueValidator = s.string().lengthLessThanOrEqual(4_000).setValidationEnabled(isValidationEnabled);\nexport const placeholderValidator = s.string().lengthLessThanOrEqual(100).setValidationEnabled(isValidationEnabled);\nexport const labelValidator = s\n\t.string()\n\t.lengthGreaterThanOrEqual(1)\n\t.lengthLessThanOrEqual(45)\n\t.setValidationEnabled(isValidationEnabled);\n\nexport function validateRequiredParameters(customId?: string, style?: TextInputStyle, label?: string) {\n\tcustomIdValidator.parse(customId);\n\ttextInputStyleValidator.parse(style);\n\tlabelValidator.parse(label);\n}\n", "import { s } from '@sapphire/shapeshift';\nimport { ActionRowBuilder, type ModalActionRowComponentBuilder } from '../../components/ActionRow.js';\nimport { customIdValidator } from '../../components/Assertions.js';\nimport { isValidationEnabled } from '../../util/validation.js';\n\nexport const titleValidator = s\n\t.string()\n\t.lengthGreaterThanOrEqual(1)\n\t.lengthLessThanOrEqual(45)\n\t.setValidationEnabled(isValidationEnabled);\nexport const componentsValidator = s\n\t.instance(ActionRowBuilder)\n\t.array()\n\t.lengthGreaterThanOrEqual(1)\n\t.setValidationEnabled(isValidationEnabled);\n\nexport function validateRequiredParameters(\n\tcustomId?: string,\n\ttitle?: string,\n\tcomponents?: ActionRowBuilder<ModalActionRowComponentBuilder>[],\n) {\n\tcustomIdValidator.parse(customId);\n\ttitleValidator.parse(title);\n\tcomponentsValidator.parse(components);\n}\n", "/* eslint-disable jsdoc/check-param-names */\n\nimport type { JSONEncodable } from '@discordjs/util';\nimport type {\n\tAPIActionRowComponent,\n\tAPIModalActionRowComponent,\n\tAPIModalInteractionResponseCallbackData,\n} from 'discord-api-types/v10';\nimport { ActionRowBuilder, type ModalActionRowComponentBuilder } from '../../components/ActionRow.js';\nimport { customIdValidator } from '../../components/Assertions.js';\nimport { createComponentBuilder } from '../../components/Components.js';\nimport { normalizeArray, type RestOrArray } from '../../util/normalizeArray.js';\nimport { titleValidator, validateRequiredParameters } from './Assertions.js';\n\n/**\n * A builder that creates API-compatible JSON data for modals.\n */\nexport class ModalBuilder implements JSONEncodable<APIModalInteractionResponseCallbackData> {\n\t/**\n\t * The API data associated with this modal.\n\t */\n\tpublic readonly data: Partial<APIModalInteractionResponseCallbackData>;\n\n\t/**\n\t * The components within this modal.\n\t */\n\tpublic readonly components: ActionRowBuilder<ModalActionRowComponentBuilder>[] = [];\n\n\t/**\n\t * Creates a new modal from API data.\n\t *\n\t * @param data - The API data to create this modal with\n\t */\n\tpublic constructor({ components, ...data }: Partial<APIModalInteractionResponseCallbackData> = {}) {\n\t\tthis.data = { ...data };\n\t\tthis.components = (components?.map((component) => createComponentBuilder(component)) ??\n\t\t\t[]) as ActionRowBuilder<ModalActionRowComponentBuilder>[];\n\t}\n\n\t/**\n\t * Sets the title of this modal.\n\t *\n\t * @param title - The title to use\n\t */\n\tpublic setTitle(title: string) {\n\t\tthis.data.title = titleValidator.parse(title);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the custom id of this modal.\n\t *\n\t * @param customId - The custom id to use\n\t */\n\tpublic setCustomId(customId: string) {\n\t\tthis.data.custom_id = customIdValidator.parse(customId);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds components to this modal.\n\t *\n\t * @param components - The components to add\n\t */\n\tpublic addComponents(\n\t\t...components: RestOrArray<\n\t\t\tActionRowBuilder<ModalActionRowComponentBuilder> | APIActionRowComponent<APIModalActionRowComponent>\n\t\t>\n\t) {\n\t\tthis.components.push(\n\t\t\t...normalizeArray(components).map((component) =>\n\t\t\t\tcomponent instanceof ActionRowBuilder\n\t\t\t\t\t? component\n\t\t\t\t\t: new ActionRowBuilder<ModalActionRowComponentBuilder>(component),\n\t\t\t),\n\t\t);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets components for this modal.\n\t *\n\t * @param components - The components to set\n\t */\n\tpublic setComponents(...components: RestOrArray<ActionRowBuilder<ModalActionRowComponentBuilder>>) {\n\t\tthis.components.splice(0, this.components.length, ...normalizeArray(components));\n\t\treturn this;\n\t}\n\n\t/**\n\t * {@inheritDoc ComponentBuilder.toJSON}\n\t */\n\tpublic toJSON(): APIModalInteractionResponseCallbackData {\n\t\tvalidateRequiredParameters(this.data.custom_id, this.data.title, this.components);\n\n\t\treturn {\n\t\t\t...this.data,\n\t\t\tcomponents: this.components.map((component) => component.toJSON()),\n\t\t} as APIModalInteractionResponseCallbackData;\n\t}\n}\n", "import { s } from '@sapphire/shapeshift';\nimport {\n\tApplicationIntegrationType,\n\tInteractionContextType,\n\tLocale,\n\ttype APIApplicationCommandOptionChoice,\n\ttype LocalizationMap,\n} from 'discord-api-types/v10';\nimport { isValidationEnabled } from '../../util/validation.js';\nimport type { ToAPIApplicationCommandOptions } from './SlashCommandBuilder.js';\nimport type { SlashCommandSubcommandBuilder, SlashCommandSubcommandGroupBuilder } from './SlashCommandSubcommands.js';\nimport type { ApplicationCommandOptionBase } from './mixins/ApplicationCommandOptionBase.js';\n\nconst namePredicate = s\n\t.string()\n\t.lengthGreaterThanOrEqual(1)\n\t.lengthLessThanOrEqual(32)\n\t.regex(/^[\\p{Ll}\\p{Lm}\\p{Lo}\\p{N}\\p{sc=Devanagari}\\p{sc=Thai}_-]+$/u)\n\t.setValidationEnabled(isValidationEnabled);\n\nexport function validateName(name: unknown): asserts name is string {\n\tnamePredicate.parse(name);\n}\n\nconst descriptionPredicate = s\n\t.string()\n\t.lengthGreaterThanOrEqual(1)\n\t.lengthLessThanOrEqual(100)\n\t.setValidationEnabled(isValidationEnabled);\nconst localePredicate = s.nativeEnum(Locale);\n\nexport function validateDescription(description: unknown): asserts description is string {\n\tdescriptionPredicate.parse(description);\n}\n\nconst maxArrayLengthPredicate = s.unknown().array().lengthLessThanOrEqual(25).setValidationEnabled(isValidationEnabled);\nexport function validateLocale(locale: unknown) {\n\treturn localePredicate.parse(locale);\n}\n\nexport function validateMaxOptionsLength(options: unknown): asserts options is ToAPIApplicationCommandOptions[] {\n\tmaxArrayLengthPredicate.parse(options);\n}\n\nexport function validateRequiredParameters(\n\tname: string,\n\tdescription: string,\n\toptions: ToAPIApplicationCommandOptions[],\n) {\n\t// Assert name matches all conditions\n\tvalidateName(name);\n\n\t// Assert description conditions\n\tvalidateDescription(description);\n\n\t// Assert options conditions\n\tvalidateMaxOptionsLength(options);\n}\n\nconst booleanPredicate = s.boolean();\n\nexport function validateDefaultPermission(value: unknown): asserts value is boolean {\n\tbooleanPredicate.parse(value);\n}\n\nexport function validateRequired(required: unknown): asserts required is boolean {\n\tbooleanPredicate.parse(required);\n}\n\nconst choicesLengthPredicate = s.number().lessThanOrEqual(25).setValidationEnabled(isValidationEnabled);\n\nexport function validateChoicesLength(amountAdding: number, choices?: APIApplicationCommandOptionChoice[]): void {\n\tchoicesLengthPredicate.parse((choices?.length ?? 0) + amountAdding);\n}\n\nexport function assertReturnOfBuilder<\n\tReturnType extends ApplicationCommandOptionBase | SlashCommandSubcommandBuilder | SlashCommandSubcommandGroupBuilder,\n>(input: unknown, ExpectedInstanceOf: new () => ReturnType): asserts input is ReturnType {\n\ts.instance(ExpectedInstanceOf).parse(input);\n}\n\nexport const localizationMapPredicate = s\n\t.object<LocalizationMap>(Object.fromEntries(Object.values(Locale).map((locale) => [locale, s.string().nullish()])))\n\t.strict()\n\t.nullish()\n\t.setValidationEnabled(isValidationEnabled);\n\nexport function validateLocalizationMap(value: unknown): asserts value is LocalizationMap {\n\tlocalizationMapPredicate.parse(value);\n}\n\nconst dmPermissionPredicate = s.boolean().nullish();\n\nexport function validateDMPermission(value: unknown): asserts value is boolean | null | undefined {\n\tdmPermissionPredicate.parse(value);\n}\n\nconst memberPermissionPredicate = s\n\t.union([\n\t\ts.bigint().transform((value) => value.toString()),\n\t\ts\n\t\t\t.number()\n\t\t\t.safeInt()\n\t\t\t.transform((value) => value.toString()),\n\t\ts.string().regex(/^\\d+$/),\n\t])\n\t.nullish();\n\nexport function validateDefaultMemberPermissions(permissions: unknown) {\n\treturn memberPermissionPredicate.parse(permissions);\n}\n\nexport function validateNSFW(value: unknown): asserts value is boolean {\n\tbooleanPredicate.parse(value);\n}\n\nexport const contextsPredicate = s.array(\n\ts.nativeEnum(InteractionContextType).setValidationEnabled(isValidationEnabled),\n);\n\nexport const integrationTypesPredicate = s.array(\n\ts.nativeEnum(ApplicationIntegrationType).setValidationEnabled(isValidationEnabled),\n);\n", "import type {\n\tAPIApplicationCommandOption,\n\tApplicationIntegrationType,\n\tInteractionContextType,\n\tLocalizationMap,\n\tPermissions,\n} from 'discord-api-types/v10';\nimport { mix } from 'ts-mixer';\nimport { SharedNameAndDescription } from './mixins/NameAndDescription.js';\nimport { SharedSlashCommand } from './mixins/SharedSlashCommand.js';\nimport { SharedSlashCommandOptions } from './mixins/SharedSlashCommandOptions.js';\nimport { SharedSlashCommandSubcommands } from './mixins/SharedSubcommands.js';\n\n/**\n * A builder that creates API-compatible JSON data for slash commands.\n */\n@mix(SharedSlashCommandOptions, SharedNameAndDescription, SharedSlashCommandSubcommands, SharedSlashCommand)\nexport class SlashCommandBuilder {\n\t/**\n\t * The name of this command.\n\t */\n\tpublic readonly name: string = undefined!;\n\n\t/**\n\t * The name localizations of this command.\n\t */\n\tpublic readonly name_localizations?: LocalizationMap;\n\n\t/**\n\t * The description of this command.\n\t */\n\tpublic readonly description: string = undefined!;\n\n\t/**\n\t * The description localizations of this command.\n\t */\n\tpublic readonly description_localizations?: LocalizationMap;\n\n\t/**\n\t * The options of this command.\n\t */\n\tpublic readonly options: ToAPIApplicationCommandOptions[] = [];\n\n\t/**\n\t * The contexts for this command.\n\t */\n\tpublic readonly contexts?: InteractionContextType[];\n\n\t/**\n\t * Whether this command is enabled by default when the application is added to a guild.\n\t *\n\t * @deprecated Use {@link SharedSlashCommand.setDefaultMemberPermissions} or {@link SharedSlashCommand.setDMPermission} instead.\n\t */\n\tpublic readonly default_permission: boolean | undefined = undefined;\n\n\t/**\n\t * The set of permissions represented as a bit set for the command.\n\t */\n\tpublic readonly default_member_permissions: Permissions | null | undefined = undefined;\n\n\t/**\n\t * Indicates whether the command is available in direct messages with the application.\n\t *\n\t * @remarks\n\t * By default, commands are visible. This property is only for global commands.\n\t * @deprecated\n\t * Use {@link SlashCommandBuilder.contexts} instead.\n\t */\n\tpublic readonly dm_permission: boolean | undefined = undefined;\n\n\t/**\n\t * The integration types for this command.\n\t */\n\tpublic readonly integration_types?: ApplicationIntegrationType[];\n\n\t/**\n\t * Whether this command is NSFW.\n\t */\n\tpublic readonly nsfw: boolean | undefined = undefined;\n}\n\nexport interface SlashCommandBuilder\n\textends SharedNameAndDescription,\n\t\tSharedSlashCommandOptions<SlashCommandOptionsOnlyBuilder>,\n\t\tSharedSlashCommandSubcommands<SlashCommandSubcommandsOnlyBuilder>,\n\t\tSharedSlashCommand {}\n\n/**\n * An interface specifically for slash command subcommands.\n */\nexport interface SlashCommandSubcommandsOnlyBuilder\n\textends SharedNameAndDescription,\n\t\tSharedSlashCommandSubcommands<SlashCommandSubcommandsOnlyBuilder>,\n\t\tSharedSlashCommand {}\n\n/**\n * An interface specifically for slash command options.\n */\nexport interface SlashCommandOptionsOnlyBuilder\n\textends SharedNameAndDescription,\n\t\tSharedSlashCommandOptions<SlashCommandOptionsOnlyBuilder>,\n\t\tSharedSlashCommand {}\n\n/**\n * An interface that ensures the `toJSON()` call will return something\n * that can be serialized into API-compatible data.\n */\nexport interface ToAPIApplicationCommandOptions {\n\ttoJSON(): APIApplicationCommandOption;\n}\n", "import type { LocaleString, LocalizationMap } from 'discord-api-types/v10';\nimport { validateDescription, validateLocale, validateName } from '../Assertions.js';\n\n/**\n * This mixin holds name and description symbols for slash commands.\n */\nexport class SharedNameAndDescription {\n\t/**\n\t * The name of this command.\n\t */\n\tpublic readonly name!: string;\n\n\t/**\n\t * The name localizations of this command.\n\t */\n\tpublic readonly name_localizations?: LocalizationMap;\n\n\t/**\n\t * The description of this command.\n\t */\n\tpublic readonly description!: string;\n\n\t/**\n\t * The description localizations of this command.\n\t */\n\tpublic readonly description_localizations?: LocalizationMap;\n\n\t/**\n\t * Sets the name of this command.\n\t *\n\t * @param name - The name to use\n\t */\n\tpublic setName(name: string): this {\n\t\t// Assert the name matches the conditions\n\t\tvalidateName(name);\n\n\t\tReflect.set(this, 'name', name);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the description of this command.\n\t *\n\t * @param description - The description to use\n\t */\n\tpublic setDescription(description: string) {\n\t\t// Assert the description matches the conditions\n\t\tvalidateDescription(description);\n\n\t\tReflect.set(this, 'description', description);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets a name localization for this command.\n\t *\n\t * @param locale - The locale to set\n\t * @param localizedName - The localized name for the given `locale`\n\t */\n\tpublic setNameLocalization(locale: LocaleString, localizedName: string | null) {\n\t\tif (!this.name_localizations) {\n\t\t\tReflect.set(this, 'name_localizations', {});\n\t\t}\n\n\t\tconst parsedLocale = validateLocale(locale);\n\n\t\tif (localizedName === null) {\n\t\t\tthis.name_localizations![parsedLocale] = null;\n\t\t\treturn this;\n\t\t}\n\n\t\tvalidateName(localizedName);\n\n\t\tthis.name_localizations![parsedLocale] = localizedName;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the name localizations for this command.\n\t *\n\t * @param localizedNames - The object of localized names to set\n\t */\n\tpublic setNameLocalizations(localizedNames: LocalizationMap | null) {\n\t\tif (localizedNames === null) {\n\t\t\tReflect.set(this, 'name_localizations', null);\n\t\t\treturn this;\n\t\t}\n\n\t\tReflect.set(this, 'name_localizations', {});\n\n\t\tfor (const args of Object.entries(localizedNames)) {\n\t\t\tthis.setNameLocalization(...(args as [LocaleString, string | null]));\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets a description localization for this command.\n\t *\n\t * @param locale - The locale to set\n\t * @param localizedDescription - The localized description for the given locale\n\t */\n\tpublic setDescriptionLocalization(locale: LocaleString, localizedDescription: string | null) {\n\t\tif (!this.description_localizations) {\n\t\t\tReflect.set(this, 'description_localizations', {});\n\t\t}\n\n\t\tconst parsedLocale = validateLocale(locale);\n\n\t\tif (localizedDescription === null) {\n\t\t\tthis.description_localizations![parsedLocale] = null;\n\t\t\treturn this;\n\t\t}\n\n\t\tvalidateDescription(localizedDescription);\n\n\t\tthis.description_localizations![parsedLocale] = localizedDescription;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the description localizations for this command.\n\t *\n\t * @param localizedDescriptions - The object of localized descriptions to set\n\t */\n\tpublic setDescriptionLocalizations(localizedDescriptions: LocalizationMap | null) {\n\t\tif (localizedDescriptions === null) {\n\t\t\tReflect.set(this, 'description_localizations', null);\n\t\t\treturn this;\n\t\t}\n\n\t\tReflect.set(this, 'description_localizations', {});\n\t\tfor (const args of Object.entries(localizedDescriptions)) {\n\t\t\tthis.setDescriptionLocalization(...(args as [LocaleString, string | null]));\n\t\t}\n\n\t\treturn this;\n\t}\n}\n", "import {\n\tApplicationCommandType,\n\ttype ApplicationIntegrationType,\n\ttype InteractionContextType,\n\ttype LocalizationMap,\n\ttype Permissions,\n\ttype RESTPostAPIChatInputApplicationCommandsJSONBody,\n} from 'discord-api-types/v10';\nimport type { RestOrArray } from '../../../util/normalizeArray.js';\nimport { normalizeArray } from '../../../util/normalizeArray.js';\nimport {\n\tcontextsPredicate,\n\tintegrationTypesPredicate,\n\tvalidateDMPermission,\n\tvalidateDefaultMemberPermissions,\n\tvalidateDefaultPermission,\n\tvalidateLocalizationMap,\n\tvalidateNSFW,\n\tvalidateRequiredParameters,\n} from '../Assertions.js';\nimport type { ToAPIApplicationCommandOptions } from '../SlashCommandBuilder.js';\n\n/**\n * This mixin holds symbols that can be shared in slashcommands independent of options or subcommands.\n */\nexport class SharedSlashCommand {\n\tpublic readonly name: string = undefined!;\n\n\tpublic readonly name_localizations?: LocalizationMap;\n\n\tpublic readonly description: string = undefined!;\n\n\tpublic readonly description_localizations?: LocalizationMap;\n\n\tpublic readonly options: ToAPIApplicationCommandOptions[] = [];\n\n\tpublic readonly contexts?: InteractionContextType[];\n\n\t/**\n\t * @deprecated Use {@link SharedSlashCommand.setDefaultMemberPermissions} or {@link SharedSlashCommand.setDMPermission} instead.\n\t */\n\tpublic readonly default_permission: boolean | undefined = undefined;\n\n\tpublic readonly default_member_permissions: Permissions | null | undefined = undefined;\n\n\t/**\n\t * @deprecated Use {@link SharedSlashCommand.contexts} instead.\n\t */\n\tpublic readonly dm_permission: boolean | undefined = undefined;\n\n\tpublic readonly integration_types?: ApplicationIntegrationType[];\n\n\tpublic readonly nsfw: boolean | undefined = undefined;\n\n\t/**\n\t * Sets the contexts of this command.\n\t *\n\t * @param contexts - The contexts\n\t */\n\tpublic setContexts(...contexts: RestOrArray<InteractionContextType>) {\n\t\tReflect.set(this, 'contexts', contextsPredicate.parse(normalizeArray(contexts)));\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the integration types of this command.\n\t *\n\t * @param integrationTypes - The integration types\n\t */\n\tpublic setIntegrationTypes(...integrationTypes: RestOrArray<ApplicationIntegrationType>) {\n\t\tReflect.set(this, 'integration_types', integrationTypesPredicate.parse(normalizeArray(integrationTypes)));\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets whether the command is enabled by default when the application is added to a guild.\n\t *\n\t * @remarks\n\t * If set to `false`, you will have to later `PUT` the permissions for this command.\n\t * @param value - Whether or not to enable this command by default\n\t * @see {@link https://discord.com/developers/docs/interactions/application-commands#permissions}\n\t * @deprecated Use {@link SharedSlashCommand.setDefaultMemberPermissions} or {@link SharedSlashCommand.setDMPermission} instead.\n\t */\n\tpublic setDefaultPermission(value: boolean) {\n\t\t// Assert the value matches the conditions\n\t\tvalidateDefaultPermission(value);\n\n\t\tReflect.set(this, 'default_permission', value);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the default permissions a member should have in order to run the command.\n\t *\n\t * @remarks\n\t * You can set this to `'0'` to disable the command by default.\n\t * @param permissions - The permissions bit field to set\n\t * @see {@link https://discord.com/developers/docs/interactions/application-commands#permissions}\n\t */\n\tpublic setDefaultMemberPermissions(permissions: Permissions | bigint | number | null | undefined) {\n\t\t// Assert the value and parse it\n\t\tconst permissionValue = validateDefaultMemberPermissions(permissions);\n\n\t\tReflect.set(this, 'default_member_permissions', permissionValue);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets if the command is available in direct messages with the application.\n\t *\n\t * @remarks\n\t * By default, commands are visible. This method is only for global commands.\n\t * @param enabled - Whether the command should be enabled in direct messages\n\t * @see {@link https://discord.com/developers/docs/interactions/application-commands#permissions}\n\t * @deprecated\n\t * Use {@link SharedSlashCommand.setContexts} instead.\n\t */\n\tpublic setDMPermission(enabled: boolean | null | undefined) {\n\t\t// Assert the value matches the conditions\n\t\tvalidateDMPermission(enabled);\n\n\t\tReflect.set(this, 'dm_permission', enabled);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets whether this command is NSFW.\n\t *\n\t * @param nsfw - Whether this command is NSFW\n\t */\n\tpublic setNSFW(nsfw = true) {\n\t\t// Assert the value matches the conditions\n\t\tvalidateNSFW(nsfw);\n\t\tReflect.set(this, 'nsfw', nsfw);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Serializes this builder to API-compatible JSON data.\n\t *\n\t * @remarks\n\t * This method runs validations on the data before serializing it.\n\t * As such, it may throw an error if the data is invalid.\n\t */\n\tpublic toJSON(): RESTPostAPIChatInputApplicationCommandsJSONBody {\n\t\tvalidateRequiredParameters(this.name, this.description, this.options);\n\n\t\tvalidateLocalizationMap(this.name_localizations);\n\t\tvalidateLocalizationMap(this.description_localizations);\n\n\t\treturn {\n\t\t\t...this,\n\t\t\ttype: ApplicationCommandType.ChatInput,\n\t\t\toptions: this.options.map((option) => option.toJSON()),\n\t\t};\n\t}\n}\n", "import { ApplicationCommandOptionType, type APIApplicationCommandAttachmentOption } from 'discord-api-types/v10';\nimport { ApplicationCommandOptionBase } from '../mixins/ApplicationCommandOptionBase.js';\n\n/**\n * A slash command attachment option.\n */\nexport class SlashCommandAttachmentOption extends ApplicationCommandOptionBase {\n\t/**\n\t * The type of this option.\n\t */\n\tpublic override readonly type = ApplicationCommandOptionType.Attachment as const;\n\n\t/**\n\t * {@inheritDoc ApplicationCommandOptionBase.toJSON}\n\t */\n\tpublic toJSON(): APIApplicationCommandAttachmentOption {\n\t\tthis.runRequiredValidations();\n\n\t\treturn { ...this };\n\t}\n}\n", "import type { APIApplicationCommandBasicOption, ApplicationCommandOptionType } from 'discord-api-types/v10';\nimport { validateRequiredParameters, validateRequired, validateLocalizationMap } from '../Assertions.js';\nimport { SharedNameAndDescription } from './NameAndDescription.js';\n\n/**\n * The base application command option builder that contains common symbols for application command builders.\n */\nexport abstract class ApplicationCommandOptionBase extends SharedNameAndDescription {\n\t/**\n\t * The type of this option.\n\t */\n\tpublic abstract readonly type: ApplicationCommandOptionType;\n\n\t/**\n\t * Whether this option is required.\n\t *\n\t * @defaultValue `false`\n\t */\n\tpublic readonly required: boolean = false;\n\n\t/**\n\t * Sets whether this option is required.\n\t *\n\t * @param required - Whether this option should be required\n\t */\n\tpublic setRequired(required: boolean) {\n\t\t// Assert that you actually passed a boolean\n\t\tvalidateRequired(required);\n\n\t\tReflect.set(this, 'required', required);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Serializes this builder to API-compatible JSON data.\n\t *\n\t * @remarks\n\t * This method runs validations on the data before serializing it.\n\t * As such, it may throw an error if the data is invalid.\n\t */\n\tpublic abstract toJSON(): APIApplicationCommandBasicOption;\n\n\t/**\n\t * This method runs required validators on this builder.\n\t */\n\tprotected runRequiredValidations() {\n\t\tvalidateRequiredParameters(this.name, this.description, []);\n\n\t\t// Validate localizations\n\t\tvalidateLocalizationMap(this.name_localizations);\n\t\tvalidateLocalizationMap(this.description_localizations);\n\n\t\t// Assert that you actually passed a boolean\n\t\tvalidateRequired(this.required);\n\t}\n}\n", "import { ApplicationCommandOptionType, type APIApplicationCommandBooleanOption } from 'discord-api-types/v10';\nimport { ApplicationCommandOptionBase } from '../mixins/ApplicationCommandOptionBase.js';\n\n/**\n * A slash command boolean option.\n */\nexport class SlashCommandBooleanOption extends ApplicationCommandOptionBase {\n\t/**\n\t * The type of this option.\n\t */\n\tpublic readonly type = ApplicationCommandOptionType.Boolean as const;\n\n\t/**\n\t * {@inheritDoc ApplicationCommandOptionBase.toJSON}\n\t */\n\tpublic toJSON(): APIApplicationCommandBooleanOption {\n\t\tthis.runRequiredValidations();\n\n\t\treturn { ...this };\n\t}\n}\n", "import { ApplicationCommandOptionType, type APIApplicationCommandChannelOption } from 'discord-api-types/v10';\nimport { mix } from 'ts-mixer';\nimport { ApplicationCommandOptionBase } from '../mixins/ApplicationCommandOptionBase.js';\nimport { ApplicationCommandOptionChannelTypesMixin } from '../mixins/ApplicationCommandOptionChannelTypesMixin.js';\n\n/**\n * A slash command channel option.\n */\n@mix(ApplicationCommandOptionChannelTypesMixin)\nexport class SlashCommandChannelOption extends ApplicationCommandOptionBase {\n\t/**\n\t * The type of this option.\n\t */\n\tpublic override readonly type = ApplicationCommandOptionType.Channel as const;\n\n\t/**\n\t * {@inheritDoc ApplicationCommandOptionBase.toJSON}\n\t */\n\tpublic toJSON(): APIApplicationCommandChannelOption {\n\t\tthis.runRequiredValidations();\n\n\t\treturn { ...this };\n\t}\n}\n\nexport interface SlashCommandChannelOption extends ApplicationCommandOptionChannelTypesMixin {}\n", "import { s } from '@sapphire/shapeshift';\nimport { ChannelType } from 'discord-api-types/v10';\nimport { normalizeArray, type RestOrArray } from '../../../util/normalizeArray';\n\n/**\n * The allowed channel types used for a channel option in a slash command builder.\n *\n * @privateRemarks This can't be dynamic because const enums are erased at runtime.\n * @internal\n */\nconst allowedChannelTypes = [\n\tChannelType.GuildText,\n\tChannelType.GuildVoice,\n\tChannelType.GuildCategory,\n\tChannelType.GuildAnnouncement,\n\tChannelType.AnnouncementThread,\n\tChannelType.PublicThread,\n\tChannelType.PrivateThread,\n\tChannelType.GuildStageVoice,\n\tChannelType.GuildForum,\n\tChannelType.GuildMedia,\n] as const;\n\n/**\n * The type of allowed channel types used for a channel option.\n */\nexport type ApplicationCommandOptionAllowedChannelTypes = (typeof allowedChannelTypes)[number];\n\nconst channelTypesPredicate = s.array(s.union(allowedChannelTypes.map((type) => s.literal(type))));\n\n/**\n * This mixin holds channel type symbols used for options.\n */\nexport class ApplicationCommandOptionChannelTypesMixin {\n\t/**\n\t * The channel types of this option.\n\t */\n\tpublic readonly channel_types?: ApplicationCommandOptionAllowedChannelTypes[];\n\n\t/**\n\t * Adds channel types to this option.\n\t *\n\t * @param channelTypes - The channel types\n\t */\n\tpublic addChannelTypes(...channelTypes: RestOrArray<ApplicationCommandOptionAllowedChannelTypes>) {\n\t\tif (this.channel_types === undefined) {\n\t\t\tReflect.set(this, 'channel_types', []);\n\t\t}\n\n\t\tthis.channel_types!.push(...channelTypesPredicate.parse(normalizeArray(channelTypes)));\n\n\t\treturn this;\n\t}\n}\n", "import { s } from '@sapphire/shapeshift';\nimport { ApplicationCommandOptionType, type APIApplicationCommandIntegerOption } from 'discord-api-types/v10';\nimport { mix } from 'ts-mixer';\nimport { ApplicationCommandNumericOptionMinMaxValueMixin } from '../mixins/ApplicationCommandNumericOptionMinMaxValueMixin.js';\nimport { ApplicationCommandOptionBase } from '../mixins/ApplicationCommandOptionBase.js';\nimport { ApplicationCommandOptionWithAutocompleteMixin } from '../mixins/ApplicationCommandOptionWithAutocompleteMixin.js';\nimport { ApplicationCommandOptionWithChoicesMixin } from '../mixins/ApplicationCommandOptionWithChoicesMixin.js';\n\nconst numberValidator = s.number().int();\n\n/**\n * A slash command integer option.\n */\n@mix(\n\tApplicationCommandNumericOptionMinMaxValueMixin,\n\tApplicationCommandOptionWithAutocompleteMixin,\n\tApplicationCommandOptionWithChoicesMixin,\n)\nexport class SlashCommandIntegerOption\n\textends ApplicationCommandOptionBase\n\timplements ApplicationCommandNumericOptionMinMaxValueMixin\n{\n\t/**\n\t * The type of this option.\n\t */\n\tpublic readonly type = ApplicationCommandOptionType.Integer as const;\n\n\t/**\n\t * {@inheritDoc ApplicationCommandNumericOptionMinMaxValueMixin.setMaxValue}\n\t */\n\tpublic setMaxValue(max: number): this {\n\t\tnumberValidator.parse(max);\n\n\t\tReflect.set(this, 'max_value', max);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * {@inheritDoc ApplicationCommandNumericOptionMinMaxValueMixin.setMinValue}\n\t */\n\tpublic setMinValue(min: number): this {\n\t\tnumberValidator.parse(min);\n\n\t\tReflect.set(this, 'min_value', min);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * {@inheritDoc ApplicationCommandOptionBase.toJSON}\n\t */\n\tpublic toJSON(): APIApplicationCommandIntegerOption {\n\t\tthis.runRequiredValidations();\n\n\t\tif (this.autocomplete && Array.isArray(this.choices) && this.choices.length > 0) {\n\t\t\tthrow new RangeError('Autocomplete and choices are mutually exclusive to each other.');\n\t\t}\n\n\t\treturn { ...this } as APIApplicationCommandIntegerOption;\n\t}\n}\n\nexport interface SlashCommandIntegerOption\n\textends ApplicationCommandNumericOptionMinMaxValueMixin,\n\t\tApplicationCommandOptionWithChoicesMixin<number>,\n\t\tApplicationCommandOptionWithAutocompleteMixin {}\n", "/**\n * This mixin holds minimum and maximum symbols used for options.\n */\nexport abstract class ApplicationCommandNumericOptionMinMaxValueMixin {\n\t/**\n\t * The maximum value of this option.\n\t */\n\tpublic readonly max_value?: number;\n\n\t/**\n\t * The minimum value of this option.\n\t */\n\tpublic readonly min_value?: number;\n\n\t/**\n\t * Sets the maximum number value of this option.\n\t *\n\t * @param max - The maximum value this option can be\n\t */\n\tpublic abstract setMaxValue(max: number): this;\n\n\t/**\n\t * Sets the minimum number value of this option.\n\t *\n\t * @param min - The minimum value this option can be\n\t */\n\tpublic abstract setMinValue(min: number): this;\n}\n", "import { s } from '@sapphire/shapeshift';\nimport type { ApplicationCommandOptionType } from 'discord-api-types/v10';\n\nconst booleanPredicate = s.boolean();\n\n/**\n * This mixin holds choices and autocomplete symbols used for options.\n */\nexport class ApplicationCommandOptionWithAutocompleteMixin {\n\t/**\n\t * Whether this option utilizes autocomplete.\n\t */\n\tpublic readonly autocomplete?: boolean;\n\n\t/**\n\t * The type of this option.\n\t *\n\t * @privateRemarks Since this is present and this is a mixin, this is needed.\n\t */\n\tpublic readonly type!: ApplicationCommandOptionType;\n\n\t/**\n\t * Whether this option uses autocomplete.\n\t *\n\t * @param autocomplete - Whether this option should use autocomplete\n\t */\n\tpublic setAutocomplete(autocomplete: boolean): this {\n\t\t// Assert that you actually passed a boolean\n\t\tbooleanPredicate.parse(autocomplete);\n\n\t\tif (autocomplete && 'choices' in this && Array.isArray(this.choices) && this.choices.length > 0) {\n\t\t\tthrow new RangeError('Autocomplete and choices are mutually exclusive to each other.');\n\t\t}\n\n\t\tReflect.set(this, 'autocomplete', autocomplete);\n\n\t\treturn this;\n\t}\n}\n", "import { s } from '@sapphire/shapeshift';\nimport { ApplicationCommandOptionType, type APIApplicationCommandOptionChoice } from 'discord-api-types/v10';\nimport { normalizeArray, type RestOrArray } from '../../../util/normalizeArray.js';\nimport { localizationMapPredicate, validateChoicesLength } from '../Assertions.js';\n\nconst stringPredicate = s.string().lengthGreaterThanOrEqual(1).lengthLessThanOrEqual(100);\nconst numberPredicate = s.number().greaterThan(Number.NEGATIVE_INFINITY).lessThan(Number.POSITIVE_INFINITY);\nconst choicesPredicate = s\n\t.object({\n\t\tname: stringPredicate,\n\t\tname_localizations: localizationMapPredicate,\n\t\tvalue: s.union([stringPredicate, numberPredicate]),\n\t})\n\t.array();\n\n/**\n * This mixin holds choices and autocomplete symbols used for options.\n */\nexport class ApplicationCommandOptionWithChoicesMixin<ChoiceType extends number | string> {\n\t/**\n\t * The choices of this option.\n\t */\n\tpublic readonly choices?: APIApplicationCommandOptionChoice<ChoiceType>[];\n\n\t/**\n\t * The type of this option.\n\t *\n\t * @privateRemarks Since this is present and this is a mixin, this is needed.\n\t */\n\tpublic readonly type!: ApplicationCommandOptionType;\n\n\t/**\n\t * Adds multiple choices to this option.\n\t *\n\t * @param choices - The choices to add\n\t */\n\tpublic addChoices(...choices: RestOrArray<APIApplicationCommandOptionChoice<ChoiceType>>): this {\n\t\tconst normalizedChoices = normalizeArray(choices);\n\t\tif (normalizedChoices.length > 0 && 'autocomplete' in this && this.autocomplete) {\n\t\t\tthrow new RangeError('Autocomplete and choices are mutually exclusive to each other.');\n\t\t}\n\n\t\tchoicesPredicate.parse(normalizedChoices);\n\n\t\tif (this.choices === undefined) {\n\t\t\tReflect.set(this, 'choices', []);\n\t\t}\n\n\t\tvalidateChoicesLength(normalizedChoices.length, this.choices);\n\n\t\tfor (const { name, name_localizations, value } of normalizedChoices) {\n\t\t\t// Validate the value\n\t\t\tif (this.type === ApplicationCommandOptionType.String) {\n\t\t\t\tstringPredicate.parse(value);\n\t\t\t} else {\n\t\t\t\tnumberPredicate.parse(value);\n\t\t\t}\n\n\t\t\tthis.choices!.push({ name, name_localizations, value });\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets multiple choices for this option.\n\t *\n\t * @param choices - The choices to set\n\t */\n\tpublic setChoices<Input extends APIApplicationCommandOptionChoice<ChoiceType>>(...choices: RestOrArray<Input>): this {\n\t\tconst normalizedChoices = normalizeArray(choices);\n\t\tif (normalizedChoices.length > 0 && 'autocomplete' in this && this.autocomplete) {\n\t\t\tthrow new RangeError('Autocomplete and choices are mutually exclusive to each other.');\n\t\t}\n\n\t\tchoicesPredicate.parse(normalizedChoices);\n\n\t\tReflect.set(this, 'choices', []);\n\t\tthis.addChoices(normalizedChoices);\n\n\t\treturn this;\n\t}\n}\n", "import { ApplicationCommandOptionType, type APIApplicationCommandMentionableOption } from 'discord-api-types/v10';\nimport { ApplicationCommandOptionBase } from '../mixins/ApplicationCommandOptionBase.js';\n\n/**\n * A slash command mentionable option.\n */\nexport class SlashCommandMentionableOption extends ApplicationCommandOptionBase {\n\t/**\n\t * The type of this option.\n\t */\n\tpublic readonly type = ApplicationCommandOptionType.Mentionable as const;\n\n\t/**\n\t * {@inheritDoc ApplicationCommandOptionBase.toJSON}\n\t */\n\tpublic toJSON(): APIApplicationCommandMentionableOption {\n\t\tthis.runRequiredValidations();\n\n\t\treturn { ...this };\n\t}\n}\n", "import { s } from '@sapphire/shapeshift';\nimport { ApplicationCommandOptionType, type APIApplicationCommandNumberOption } from 'discord-api-types/v10';\nimport { mix } from 'ts-mixer';\nimport { ApplicationCommandNumericOptionMinMaxValueMixin } from '../mixins/ApplicationCommandNumericOptionMinMaxValueMixin.js';\nimport { ApplicationCommandOptionBase } from '../mixins/ApplicationCommandOptionBase.js';\nimport { ApplicationCommandOptionWithAutocompleteMixin } from '../mixins/ApplicationCommandOptionWithAutocompleteMixin.js';\nimport { ApplicationCommandOptionWithChoicesMixin } from '../mixins/ApplicationCommandOptionWithChoicesMixin.js';\n\nconst numberValidator = s.number();\n\n/**\n * A slash command number option.\n */\n@mix(\n\tApplicationCommandNumericOptionMinMaxValueMixin,\n\tApplicationCommandOptionWithAutocompleteMixin,\n\tApplicationCommandOptionWithChoicesMixin,\n)\nexport class SlashCommandNumberOption\n\textends ApplicationCommandOptionBase\n\timplements ApplicationCommandNumericOptionMinMaxValueMixin\n{\n\t/**\n\t * The type of this option.\n\t */\n\tpublic readonly type = ApplicationCommandOptionType.Number as const;\n\n\t/**\n\t * {@inheritDoc ApplicationCommandNumericOptionMinMaxValueMixin.setMaxValue}\n\t */\n\tpublic setMaxValue(max: number): this {\n\t\tnumberValidator.parse(max);\n\n\t\tReflect.set(this, 'max_value', max);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * {@inheritDoc ApplicationCommandNumericOptionMinMaxValueMixin.setMinValue}\n\t */\n\tpublic setMinValue(min: number): this {\n\t\tnumberValidator.parse(min);\n\n\t\tReflect.set(this, 'min_value', min);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * {@inheritDoc ApplicationCommandOptionBase.toJSON}\n\t */\n\tpublic toJSON(): APIApplicationCommandNumberOption {\n\t\tthis.runRequiredValidations();\n\n\t\tif (this.autocomplete && Array.isArray(this.choices) && this.choices.length > 0) {\n\t\t\tthrow new RangeError('Autocomplete and choices are mutually exclusive to each other.');\n\t\t}\n\n\t\treturn { ...this } as APIApplicationCommandNumberOption;\n\t}\n}\n\nexport interface SlashCommandNumberOption\n\textends ApplicationCommandNumericOptionMinMaxValueMixin,\n\t\tApplicationCommandOptionWithChoicesMixin<number>,\n\t\tApplicationCommandOptionWithAutocompleteMixin {}\n", "import { ApplicationCommandOptionType, type APIApplicationCommandRoleOption } from 'discord-api-types/v10';\nimport { ApplicationCommandOptionBase } from '../mixins/ApplicationCommandOptionBase.js';\n\n/**\n * A slash command role option.\n */\nexport class SlashCommandRoleOption extends ApplicationCommandOptionBase {\n\t/**\n\t * The type of this option.\n\t */\n\tpublic override readonly type = ApplicationCommandOptionType.Role as const;\n\n\t/**\n\t * {@inheritDoc ApplicationCommandOptionBase.toJSON}\n\t */\n\tpublic toJSON(): APIApplicationCommandRoleOption {\n\t\tthis.runRequiredValidations();\n\n\t\treturn { ...this };\n\t}\n}\n", "import { s } from '@sapphire/shapeshift';\nimport { ApplicationCommandOptionType, type APIApplicationCommandStringOption } from 'discord-api-types/v10';\nimport { mix } from 'ts-mixer';\nimport { ApplicationCommandOptionBase } from '../mixins/ApplicationCommandOptionBase.js';\nimport { ApplicationCommandOptionWithAutocompleteMixin } from '../mixins/ApplicationCommandOptionWithAutocompleteMixin.js';\nimport { ApplicationCommandOptionWithChoicesMixin } from '../mixins/ApplicationCommandOptionWithChoicesMixin.js';\n\nconst minLengthValidator = s.number().greaterThanOrEqual(0).lessThanOrEqual(6_000);\nconst maxLengthValidator = s.number().greaterThanOrEqual(1).lessThanOrEqual(6_000);\n\n/**\n * A slash command string option.\n */\n@mix(ApplicationCommandOptionWithAutocompleteMixin, ApplicationCommandOptionWithChoicesMixin)\nexport class SlashCommandStringOption extends ApplicationCommandOptionBase {\n\t/**\n\t * The type of this option.\n\t */\n\tpublic readonly type = ApplicationCommandOptionType.String as const;\n\n\t/**\n\t * The maximum length of this option.\n\t */\n\tpublic readonly max_length?: number;\n\n\t/**\n\t * The minimum length of this option.\n\t */\n\tpublic readonly min_length?: number;\n\n\t/**\n\t * Sets the maximum length of this string option.\n\t *\n\t * @param max - The maximum length this option can be\n\t */\n\tpublic setMaxLength(max: number): this {\n\t\tmaxLengthValidator.parse(max);\n\n\t\tReflect.set(this, 'max_length', max);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the minimum length of this string option.\n\t *\n\t * @param min - The minimum length this option can be\n\t */\n\tpublic setMinLength(min: number): this {\n\t\tminLengthValidator.parse(min);\n\n\t\tReflect.set(this, 'min_length', min);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * {@inheritDoc ApplicationCommandOptionBase.toJSON}\n\t */\n\tpublic toJSON(): APIApplicationCommandStringOption {\n\t\tthis.runRequiredValidations();\n\n\t\tif (this.autocomplete && Array.isArray(this.choices) && this.choices.length > 0) {\n\t\t\tthrow new RangeError('Autocomplete and choices are mutually exclusive to each other.');\n\t\t}\n\n\t\treturn { ...this } as APIApplicationCommandStringOption;\n\t}\n}\n\nexport interface SlashCommandStringOption\n\textends ApplicationCommandOptionWithChoicesMixin<string>,\n\t\tApplicationCommandOptionWithAutocompleteMixin {}\n", "import { ApplicationCommandOptionType, type APIApplicationCommandUserOption } from 'discord-api-types/v10';\nimport { ApplicationCommandOptionBase } from '../mixins/ApplicationCommandOptionBase.js';\n\n/**\n * A slash command user option.\n */\nexport class SlashCommandUserOption extends ApplicationCommandOptionBase {\n\t/**\n\t * The type of this option.\n\t */\n\tpublic readonly type = ApplicationCommandOptionType.User as const;\n\n\t/**\n\t * {@inheritDoc ApplicationCommandOptionBase.toJSON}\n\t */\n\tpublic toJSON(): APIApplicationCommandUserOption {\n\t\tthis.runRequiredValidations();\n\n\t\treturn { ...this };\n\t}\n}\n", "import { assertReturnOfBuilder, validateMaxOptionsLength } from '../Assertions.js';\nimport type { ToAPIApplicationCommandOptions } from '../SlashCommandBuilder';\nimport { SlashCommandAttachmentOption } from '../options/attachment.js';\nimport { SlashCommandBooleanOption } from '../options/boolean.js';\nimport { SlashCommandChannelOption } from '../options/channel.js';\nimport { SlashCommandIntegerOption } from '../options/integer.js';\nimport { SlashCommandMentionableOption } from '../options/mentionable.js';\nimport { SlashCommandNumberOption } from '../options/number.js';\nimport { SlashCommandRoleOption } from '../options/role.js';\nimport { SlashCommandStringOption } from '../options/string.js';\nimport { SlashCommandUserOption } from '../options/user.js';\nimport type { ApplicationCommandOptionBase } from './ApplicationCommandOptionBase.js';\n\n/**\n * This mixin holds symbols that can be shared in slash command options.\n *\n * @typeParam TypeAfterAddingOptions - The type this class should return after adding an option.\n */\nexport class SharedSlashCommandOptions<\n\tTypeAfterAddingOptions extends SharedSlashCommandOptions<TypeAfterAddingOptions>,\n> {\n\tpublic readonly options!: ToAPIApplicationCommandOptions[];\n\n\t/**\n\t * Adds a boolean option.\n\t *\n\t * @param input - A function that returns an option builder or an already built builder\n\t */\n\tpublic addBooleanOption(\n\t\tinput: SlashCommandBooleanOption | ((builder: SlashCommandBooleanOption) => SlashCommandBooleanOption),\n\t) {\n\t\treturn this._sharedAddOptionMethod(input, SlashCommandBooleanOption);\n\t}\n\n\t/**\n\t * Adds a user option.\n\t *\n\t * @param input - A function that returns an option builder or an already built builder\n\t */\n\tpublic addUserOption(input: SlashCommandUserOption | ((builder: SlashCommandUserOption) => SlashCommandUserOption)) {\n\t\treturn this._sharedAddOptionMethod(input, SlashCommandUserOption);\n\t}\n\n\t/**\n\t * Adds a channel option.\n\t *\n\t * @param input - A function that returns an option builder or an already built builder\n\t */\n\tpublic addChannelOption(\n\t\tinput: SlashCommandChannelOption | ((builder: SlashCommandChannelOption) => SlashCommandChannelOption),\n\t) {\n\t\treturn this._sharedAddOptionMethod(input, SlashCommandChannelOption);\n\t}\n\n\t/**\n\t * Adds a role option.\n\t *\n\t * @param input - A function that returns an option builder or an already built builder\n\t */\n\tpublic addRoleOption(input: SlashCommandRoleOption | ((builder: SlashCommandRoleOption) => SlashCommandRoleOption)) {\n\t\treturn this._sharedAddOptionMethod(input, SlashCommandRoleOption);\n\t}\n\n\t/**\n\t * Adds an attachment option.\n\t *\n\t * @param input - A function that returns an option builder or an already built builder\n\t */\n\tpublic addAttachmentOption(\n\t\tinput: SlashCommandAttachmentOption | ((builder: SlashCommandAttachmentOption) => SlashCommandAttachmentOption),\n\t) {\n\t\treturn this._sharedAddOptionMethod(input, SlashCommandAttachmentOption);\n\t}\n\n\t/**\n\t * Adds a mentionable option.\n\t *\n\t * @param input - A function that returns an option builder or an already built builder\n\t */\n\tpublic addMentionableOption(\n\t\tinput: SlashCommandMentionableOption | ((builder: SlashCommandMentionableOption) => SlashCommandMentionableOption),\n\t) {\n\t\treturn this._sharedAddOptionMethod(input, SlashCommandMentionableOption);\n\t}\n\n\t/**\n\t * Adds a string option.\n\t *\n\t * @param input - A function that returns an option builder or an already built builder\n\t */\n\tpublic addStringOption(\n\t\tinput: SlashCommandStringOption | ((builder: SlashCommandStringOption) => SlashCommandStringOption),\n\t) {\n\t\treturn this._sharedAddOptionMethod(input, SlashCommandStringOption);\n\t}\n\n\t/**\n\t * Adds an integer option.\n\t *\n\t * @param input - A function that returns an option builder or an already built builder\n\t */\n\tpublic addIntegerOption(\n\t\tinput: SlashCommandIntegerOption | ((builder: SlashCommandIntegerOption) => SlashCommandIntegerOption),\n\t) {\n\t\treturn this._sharedAddOptionMethod(input, SlashCommandIntegerOption);\n\t}\n\n\t/**\n\t * Adds a number option.\n\t *\n\t * @param input - A function that returns an option builder or an already built builder\n\t */\n\tpublic addNumberOption(\n\t\tinput: SlashCommandNumberOption | ((builder: SlashCommandNumberOption) => SlashCommandNumberOption),\n\t) {\n\t\treturn this._sharedAddOptionMethod(input, SlashCommandNumberOption);\n\t}\n\n\t/**\n\t * Where the actual adding magic happens. ✨\n\t *\n\t * @param input - The input. What else?\n\t * @param Instance - The instance of whatever is being added\n\t * @internal\n\t */\n\tprivate _sharedAddOptionMethod<OptionBuilder extends ApplicationCommandOptionBase>(\n\t\tinput: OptionBuilder | ((builder: OptionBuilder) => OptionBuilder),\n\t\tInstance: new () => OptionBuilder,\n\t): TypeAfterAddingOptions {\n\t\tconst { options } = this;\n\n\t\t// First, assert options conditions - we cannot have more than 25 options\n\t\tvalidateMaxOptionsLength(options);\n\n\t\t// Get the final result\n\t\tconst result = typeof input === 'function' ? input(new Instance()) : input;\n\n\t\tassertReturnOfBuilder(result, Instance);\n\n\t\t// Push it\n\t\toptions.push(result);\n\n\t\treturn this as unknown as TypeAfterAddingOptions;\n\t}\n}\n", "import {\n\tApplicationCommandOptionType,\n\ttype APIApplicationCommandSubcommandGroupOption,\n\ttype APIApplicationCommandSubcommandOption,\n} from 'discord-api-types/v10';\nimport { mix } from 'ts-mixer';\nimport { assertReturnOfBuilder, validateMaxOptionsLength, validateRequiredParameters } from './Assertions.js';\nimport type { ToAPIApplicationCommandOptions } from './SlashCommandBuilder.js';\nimport type { ApplicationCommandOptionBase } from './mixins/ApplicationCommandOptionBase.js';\nimport { SharedNameAndDescription } from './mixins/NameAndDescription.js';\nimport { SharedSlashCommandOptions } from './mixins/SharedSlashCommandOptions.js';\n\n/**\n * Represents a folder for subcommands.\n *\n * @see {@link https://discord.com/developers/docs/interactions/application-commands#subcommands-and-subcommand-groups}\n */\n@mix(SharedNameAndDescription)\nexport class SlashCommandSubcommandGroupBuilder implements ToAPIApplicationCommandOptions {\n\t/**\n\t * The name of this subcommand group.\n\t */\n\tpublic readonly name: string = undefined!;\n\n\t/**\n\t * The description of this subcommand group.\n\t */\n\tpublic readonly description: string = undefined!;\n\n\t/**\n\t * The subcommands within this subcommand group.\n\t */\n\tpublic readonly options: SlashCommandSubcommandBuilder[] = [];\n\n\t/**\n\t * Adds a new subcommand to this group.\n\t *\n\t * @param input - A function that returns a subcommand builder or an already built builder\n\t */\n\tpublic addSubcommand(\n\t\tinput:\n\t\t\t| SlashCommandSubcommandBuilder\n\t\t\t| ((subcommandGroup: SlashCommandSubcommandBuilder) => SlashCommandSubcommandBuilder),\n\t) {\n\t\tconst { options } = this;\n\n\t\t// First, assert options conditions - we cannot have more than 25 options\n\t\tvalidateMaxOptionsLength(options);\n\n\t\t// Get the final result\n\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\tconst result = typeof input === 'function' ? input(new SlashCommandSubcommandBuilder()) : input;\n\n\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\tassertReturnOfBuilder(result, SlashCommandSubcommandBuilder);\n\n\t\t// Push it\n\t\toptions.push(result);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Serializes this builder to API-compatible JSON data.\n\t *\n\t * @remarks\n\t * This method runs validations on the data before serializing it.\n\t * As such, it may throw an error if the data is invalid.\n\t */\n\tpublic toJSON(): APIApplicationCommandSubcommandGroupOption {\n\t\tvalidateRequiredParameters(this.name, this.description, this.options);\n\n\t\treturn {\n\t\t\ttype: ApplicationCommandOptionType.SubcommandGroup,\n\t\t\tname: this.name,\n\t\t\tname_localizations: this.name_localizations,\n\t\t\tdescription: this.description,\n\t\t\tdescription_localizations: this.description_localizations,\n\t\t\toptions: this.options.map((option) => option.toJSON()),\n\t\t};\n\t}\n}\n\nexport interface SlashCommandSubcommandGroupBuilder extends SharedNameAndDescription {}\n\n/**\n * A builder that creates API-compatible JSON data for slash command subcommands.\n *\n * @see {@link https://discord.com/developers/docs/interactions/application-commands#subcommands-and-subcommand-groups}\n */\n@mix(SharedNameAndDescription, SharedSlashCommandOptions)\nexport class SlashCommandSubcommandBuilder implements ToAPIApplicationCommandOptions {\n\t/**\n\t * The name of this subcommand.\n\t */\n\tpublic readonly name: string = undefined!;\n\n\t/**\n\t * The description of this subcommand.\n\t */\n\tpublic readonly description: string = undefined!;\n\n\t/**\n\t * The options within this subcommand.\n\t */\n\tpublic readonly options: ApplicationCommandOptionBase[] = [];\n\n\t/**\n\t * Serializes this builder to API-compatible JSON data.\n\t *\n\t * @remarks\n\t * This method runs validations on the data before serializing it.\n\t * As such, it may throw an error if the data is invalid.\n\t */\n\tpublic toJSON(): APIApplicationCommandSubcommandOption {\n\t\tvalidateRequiredParameters(this.name, this.description, this.options);\n\n\t\treturn {\n\t\t\ttype: ApplicationCommandOptionType.Subcommand,\n\t\t\tname: this.name,\n\t\t\tname_localizations: this.name_localizations,\n\t\t\tdescription: this.description,\n\t\t\tdescription_localizations: this.description_localizations,\n\t\t\toptions: this.options.map((option) => option.toJSON()),\n\t\t};\n\t}\n}\n\nexport interface SlashCommandSubcommandBuilder\n\textends SharedNameAndDescription,\n\t\tSharedSlashCommandOptions<SlashCommandSubcommandBuilder> {}\n", "import { assertReturnOfBuilder, validateMaxOptionsLength } from '../Assertions.js';\nimport type { ToAPIApplicationCommandOptions } from '../SlashCommandBuilder.js';\nimport { SlashCommandSubcommandBuilder, SlashCommandSubcommandGroupBuilder } from '../SlashCommandSubcommands.js';\n\n/**\n * This mixin holds symbols that can be shared in slash subcommands.\n *\n * @typeParam TypeAfterAddingSubcommands - The type this class should return after adding a subcommand or subcommand group.\n */\nexport class SharedSlashCommandSubcommands<\n\tTypeAfterAddingSubcommands extends SharedSlashCommandSubcommands<TypeAfterAddingSubcommands>,\n> {\n\tpublic readonly options: ToAPIApplicationCommandOptions[] = [];\n\n\t/**\n\t * Adds a new subcommand group to this command.\n\t *\n\t * @param input - A function that returns a subcommand group builder or an already built builder\n\t */\n\tpublic addSubcommandGroup(\n\t\tinput:\n\t\t\t| SlashCommandSubcommandGroupBuilder\n\t\t\t| ((subcommandGroup: SlashCommandSubcommandGroupBuilder) => SlashCommandSubcommandGroupBuilder),\n\t): TypeAfterAddingSubcommands {\n\t\tconst { options } = this;\n\n\t\t// First, assert options conditions - we cannot have more than 25 options\n\t\tvalidateMaxOptionsLength(options);\n\n\t\t// Get the final result\n\t\tconst result = typeof input === 'function' ? input(new SlashCommandSubcommandGroupBuilder()) : input;\n\n\t\tassertReturnOfBuilder(result, SlashCommandSubcommandGroupBuilder);\n\n\t\t// Push it\n\t\toptions.push(result);\n\n\t\treturn this as unknown as TypeAfterAddingSubcommands;\n\t}\n\n\t/**\n\t * Adds a new subcommand to this command.\n\t *\n\t * @param input - A function that returns a subcommand builder or an already built builder\n\t */\n\tpublic addSubcommand(\n\t\tinput:\n\t\t\t| SlashCommandSubcommandBuilder\n\t\t\t| ((subcommandGroup: SlashCommandSubcommandBuilder) => SlashCommandSubcommandBuilder),\n\t): TypeAfterAddingSubcommands {\n\t\tconst { options } = this;\n\n\t\t// First, assert options conditions - we cannot have more than 25 options\n\t\tvalidateMaxOptionsLength(options);\n\n\t\t// Get the final result\n\t\tconst result = typeof input === 'function' ? input(new SlashCommandSubcommandBuilder()) : input;\n\n\t\tassertReturnOfBuilder(result, SlashCommandSubcommandBuilder);\n\n\t\t// Push it\n\t\toptions.push(result);\n\n\t\treturn this as unknown as TypeAfterAddingSubcommands;\n\t}\n}\n", "import { s } from '@sapphire/shapeshift';\nimport { ApplicationCommandType, ApplicationIntegrationType, InteractionContextType } from 'discord-api-types/v10';\nimport { isValidationEnabled } from '../../util/validation.js';\nimport type { ContextMenuCommandType } from './ContextMenuCommandBuilder.js';\n\nconst namePredicate = s\n\t.string()\n\t.lengthGreaterThanOrEqual(1)\n\t.lengthLessThanOrEqual(32)\n\t// eslint-disable-next-line prefer-named-capture-group\n\t.regex(/^( *[\\p{P}\\p{L}\\p{N}\\p{sc=Devanagari}\\p{sc=Thai}]+ *)+$/u)\n\t.setValidationEnabled(isValidationEnabled);\nconst typePredicate = s\n\t.union([s.literal(ApplicationCommandType.User), s.literal(ApplicationCommandType.Message)])\n\t.setValidationEnabled(isValidationEnabled);\nconst booleanPredicate = s.boolean();\n\nexport function validateDefaultPermission(value: unknown): asserts value is boolean {\n\tbooleanPredicate.parse(value);\n}\n\nexport function validateName(name: unknown): asserts name is string {\n\tnamePredicate.parse(name);\n}\n\nexport function validateType(type: unknown): asserts type is ContextMenuCommandType {\n\ttypePredicate.parse(type);\n}\n\nexport function validateRequiredParameters(name: string, type: number) {\n\t// Assert name matches all conditions\n\tvalidateName(name);\n\n\t// Assert type is valid\n\tvalidateType(type);\n}\n\nconst dmPermissionPredicate = s.boolean().nullish();\n\nexport function validateDMPermission(value: unknown): asserts value is boolean | null | undefined {\n\tdmPermissionPredicate.parse(value);\n}\n\nconst memberPermissionPredicate = s\n\t.union([\n\t\ts.bigint().transform((value) => value.toString()),\n\t\ts\n\t\t\t.number()\n\t\t\t.safeInt()\n\t\t\t.transform((value) => value.toString()),\n\t\ts.string().regex(/^\\d+$/),\n\t])\n\t.nullish();\n\nexport function validateDefaultMemberPermissions(permissions: unknown) {\n\treturn memberPermissionPredicate.parse(permissions);\n}\n\nexport const contextsPredicate = s.array(\n\ts.nativeEnum(InteractionContextType).setValidationEnabled(isValidationEnabled),\n);\n\nexport const integrationTypesPredicate = s.array(\n\ts.nativeEnum(ApplicationIntegrationType).setValidationEnabled(isValidationEnabled),\n);\n", "import type {\n\tApplicationCommandType,\n\tApplicationIntegrationType,\n\tInteractionContextType,\n\tLocaleString,\n\tLocalizationMap,\n\tPermissions,\n\tRESTPostAPIContextMenuApplicationCommandsJSONBody,\n} from 'discord-api-types/v10';\nimport type { RestOrArray } from '../../util/normalizeArray.js';\nimport { normalizeArray } from '../../util/normalizeArray.js';\nimport { validateLocale, validateLocalizationMap } from '../slashCommands/Assertions.js';\nimport {\n\tvalidateRequiredParameters,\n\tvalidateName,\n\tvalidateType,\n\tvalidateDefaultPermission,\n\tvalidateDefaultMemberPermissions,\n\tvalidateDMPermission,\n\tcontextsPredicate,\n\tintegrationTypesPredicate,\n} from './Assertions.js';\n\n/**\n * The type a context menu command can be.\n */\nexport type ContextMenuCommandType = ApplicationCommandType.Message | ApplicationCommandType.User;\n\n/**\n * A builder that creates API-compatible JSON data for context menu commands.\n */\nexport class ContextMenuCommandBuilder {\n\t/**\n\t * The name of this command.\n\t */\n\tpublic readonly name: string = undefined!;\n\n\t/**\n\t * The name localizations of this command.\n\t */\n\tpublic readonly name_localizations?: LocalizationMap;\n\n\t/**\n\t * The type of this command.\n\t */\n\tpublic readonly type: ContextMenuCommandType = undefined!;\n\n\t/**\n\t * The contexts for this command.\n\t */\n\tpublic readonly contexts?: InteractionContextType[];\n\n\t/**\n\t * Whether this command is enabled by default when the application is added to a guild.\n\t *\n\t * @deprecated Use {@link ContextMenuCommandBuilder.setDefaultMemberPermissions} or {@link ContextMenuCommandBuilder.setDMPermission} instead.\n\t */\n\tpublic readonly default_permission: boolean | undefined = undefined;\n\n\t/**\n\t * The set of permissions represented as a bit set for the command.\n\t */\n\tpublic readonly default_member_permissions: Permissions | null | undefined = undefined;\n\n\t/**\n\t * Indicates whether the command is available in direct messages with the application.\n\t *\n\t * @remarks\n\t * By default, commands are visible. This property is only for global commands.\n\t * @deprecated\n\t * Use {@link ContextMenuCommandBuilder.contexts} instead.\n\t */\n\tpublic readonly dm_permission: boolean | undefined = undefined;\n\n\t/**\n\t * The integration types for this command.\n\t */\n\tpublic readonly integration_types?: ApplicationIntegrationType[];\n\n\t/**\n\t * Sets the contexts of this command.\n\t *\n\t * @param contexts - The contexts\n\t */\n\tpublic setContexts(...contexts: RestOrArray<InteractionContextType>) {\n\t\tReflect.set(this, 'contexts', contextsPredicate.parse(normalizeArray(contexts)));\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets integration types of this command.\n\t *\n\t * @param integrationTypes - The integration types\n\t */\n\tpublic setIntegrationTypes(...integrationTypes: RestOrArray<ApplicationIntegrationType>) {\n\t\tReflect.set(this, 'integration_types', integrationTypesPredicate.parse(normalizeArray(integrationTypes)));\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the name of this command.\n\t *\n\t * @param name - The name to use\n\t */\n\tpublic setName(name: string) {\n\t\t// Assert the name matches the conditions\n\t\tvalidateName(name);\n\n\t\tReflect.set(this, 'name', name);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the type of this command.\n\t *\n\t * @param type - The type to use\n\t */\n\tpublic setType(type: ContextMenuCommandType) {\n\t\t// Assert the type is valid\n\t\tvalidateType(type);\n\n\t\tReflect.set(this, 'type', type);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets whether the command is enabled by default when the application is added to a guild.\n\t *\n\t * @remarks\n\t * If set to `false`, you will have to later `PUT` the permissions for this command.\n\t * @param value - Whether to enable this command by default\n\t * @see {@link https://discord.com/developers/docs/interactions/application-commands#permissions}\n\t * @deprecated Use {@link ContextMenuCommandBuilder.setDefaultMemberPermissions} or {@link ContextMenuCommandBuilder.setDMPermission} instead.\n\t */\n\tpublic setDefaultPermission(value: boolean) {\n\t\t// Assert the value matches the conditions\n\t\tvalidateDefaultPermission(value);\n\n\t\tReflect.set(this, 'default_permission', value);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the default permissions a member should have in order to run this command.\n\t *\n\t * @remarks\n\t * You can set this to `'0'` to disable the command by default.\n\t * @param permissions - The permissions bit field to set\n\t * @see {@link https://discord.com/developers/docs/interactions/application-commands#permissions}\n\t */\n\tpublic setDefaultMemberPermissions(permissions: Permissions | bigint | number | null | undefined) {\n\t\t// Assert the value and parse it\n\t\tconst permissionValue = validateDefaultMemberPermissions(permissions);\n\n\t\tReflect.set(this, 'default_member_permissions', permissionValue);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets if the command is available in direct messages with the application.\n\t *\n\t * @remarks\n\t * By default, commands are visible. This method is only for global commands.\n\t * @param enabled - Whether the command should be enabled in direct messages\n\t * @see {@link https://discord.com/developers/docs/interactions/application-commands#permissions}\n\t * @deprecated Use {@link ContextMenuCommandBuilder.setContexts} instead.\n\t */\n\tpublic setDMPermission(enabled: boolean | null | undefined) {\n\t\t// Assert the value matches the conditions\n\t\tvalidateDMPermission(enabled);\n\n\t\tReflect.set(this, 'dm_permission', enabled);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets a name localization for this command.\n\t *\n\t * @param locale - The locale to set\n\t * @param localizedName - The localized name for the given `locale`\n\t */\n\tpublic setNameLocalization(locale: LocaleString, localizedName: string | null) {\n\t\tif (!this.name_localizations) {\n\t\t\tReflect.set(this, 'name_localizations', {});\n\t\t}\n\n\t\tconst parsedLocale = validateLocale(locale);\n\n\t\tif (localizedName === null) {\n\t\t\tthis.name_localizations![parsedLocale] = null;\n\t\t\treturn this;\n\t\t}\n\n\t\tvalidateName(localizedName);\n\n\t\tthis.name_localizations![parsedLocale] = localizedName;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the name localizations for this command.\n\t *\n\t * @param localizedNames - The object of localized names to set\n\t */\n\tpublic setNameLocalizations(localizedNames: LocalizationMap | null) {\n\t\tif (localizedNames === null) {\n\t\t\tReflect.set(this, 'name_localizations', null);\n\t\t\treturn this;\n\t\t}\n\n\t\tReflect.set(this, 'name_localizations', {});\n\n\t\tfor (const args of Object.entries(localizedNames))\n\t\t\tthis.setNameLocalization(...(args as [LocaleString, string | null]));\n\t\treturn this;\n\t}\n\n\t/**\n\t * Serializes this builder to API-compatible JSON data.\n\t *\n\t * @remarks\n\t * This method runs validations on the data before serializing it.\n\t * As such, it may throw an error if the data is invalid.\n\t */\n\tpublic toJSON(): RESTPostAPIContextMenuApplicationCommandsJSONBody {\n\t\tvalidateRequiredParameters(this.name, this.type);\n\n\t\tvalidateLocalizationMap(this.name_localizations);\n\n\t\treturn { ...this };\n\t}\n}\n", "import type { APIEmbed } from 'discord-api-types/v10';\n\n/**\n * Calculates the length of the embed.\n *\n * @param data - The embed data to check\n */\nexport function embedLength(data: APIEmbed) {\n\treturn (\n\t\t(data.title?.length ?? 0) +\n\t\t(data.description?.length ?? 0) +\n\t\t(data.fields?.reduce((prev, curr) => prev + curr.name.length + curr.value.length, 0) ?? 0) +\n\t\t(data.footer?.text.length ?? 0) +\n\t\t(data.author?.name.length ?? 0)\n\t);\n}\n", "\r\nconst { SlashCommandBuilder, ActionRowBuilder, ButtonBuilder } = require('@discordjs/builders');\r\nconst { ButtonStyle } = require(\"discord-api-types/v10\")\r\n\r\nmodule.exports = {\r\n\tdata: new SlashCommandBuilder()\r\n\t\t.setName('role-manager')\r\n\t\t.setDescription('Add a role manager'),\r\n\r\n    async execute(interaction) {\r\n\r\n      const confirm = new ButtonBuilder()\r\n            .setCustomId('confirm')\r\n            .setLabel('Confirm')\r\n            .setStyle(ButtonStyle.Success);\r\n\r\n      const row = new ActionRowBuilder()\r\n            .addComponents(confirm);\r\n\r\n      const response = interaction.reply({\r\n          content: \"Please confirm that you accept and agree to the rules of the server.\\nThis will unlock the rest of the server for you.\",\r\n          components: [row],\r\n          allowed_mentions: { parse: [] }\r\n      });\r\n\r\n\t\t  return response;\r\n\t  },\r\n};", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"C:\\\\Users\\\\magnu\\\\Documents\\\\Discord\\\\kiara bot - serverless\\\\.wrangler\\\\tmp\\\\bundle-ui2AQl\\\\middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"C:\\\\Users\\\\magnu\\\\Documents\\\\Discord\\\\kiara bot - serverless\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\common.ts\";\nimport type { WorkerEntrypointConstructor } from \"C:\\\\Users\\\\magnu\\\\Documents\\\\Discord\\\\kiara bot - serverless\\\\.wrangler\\\\tmp\\\\bundle-ui2AQl\\\\middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"C:\\\\Users\\\\magnu\\\\Documents\\\\Discord\\\\kiara bot - serverless\\\\.wrangler\\\\tmp\\\\bundle-ui2AQl\\\\middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"C:\\\\Users\\\\magnu\\\\Documents\\\\Discord\\\\kiara bot - serverless\\\\server.js\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"C:\\\\Users\\\\magnu\\\\Documents\\\\Discord\\\\kiara bot - serverless\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"C:\\\\Users\\\\magnu\\\\Documents\\\\Discord\\\\kiara bot - serverless\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"C:\\\\Users\\\\magnu\\\\Documents\\\\Discord\\\\kiara bot - serverless\\\\server.js\";\n\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "/**\r\n * The core server that runs on a Cloudflare worker.\r\n */\r\n\r\nimport { AutoRouter } from 'itty-router';\r\nimport {\r\n  InteractionResponseType,\r\n  InteractionType,\r\n  verifyKey,\r\n  InteractionResponseFlags\r\n} from 'discord-interactions';\r\n\r\nimport { DiscordClient } from './client'\r\n\r\nconst roleManagerCommand = require('./commands/managers/roleManager');\r\n\r\nclass JsonResponse extends Response {\r\n  constructor(body, init) {\r\n    const jsonBody = JSON.stringify(body);\r\n    init = init || {\r\n      headers: {\r\n        'content-type': 'application/json;charset=UTF-8',\r\n      },\r\n    };\r\n    super(jsonBody, init);\r\n  }\r\n}\r\n\r\nconst router = AutoRouter();\r\n/**\r\n * A simple :wave: hello page to verify the worker is working.\r\n */\r\nrouter.get('/', (request, env) => {\r\n  return new Response(`\uD83D\uDC4B ${env.DISCORD_APPLICATION_ID} ${env.DISCORD_PUBLIC_KEY}`);\r\n});\r\n\r\n/**\r\n * Main route for all requests sent from Discord.  All incoming messages will\r\n * include a JSON payload described here:\r\n * https://discord.com/developers/docs/interactions/receiving-and-responding#interaction-object\r\n */\r\nrouter.post('/', async (request, env) => {\r\n    const { isValid, interaction } = await server.verifyDiscordRequest(\r\n        request,\r\n        env,\r\n    );\r\n\r\n    if (!isValid || !interaction) {\r\n        return new Response('Bad request signature.', { status: 401 });\r\n    }\r\n\r\n    if (interaction.type === InteractionType.PING) {\r\n        // The `PING` message is used during the initial webhook handshake, and is\r\n        // required to configure the webhook in the developer portal.\r\n        return new JsonResponse({\r\n            type: InteractionResponseType.PONG,\r\n        });\r\n    } else if (interaction.type === InteractionType.APPLICATION_COMMAND) {\r\n        // Most user commands will come as `APPLICATION_COMMAND`.\r\n        switch (interaction.data.name.toLowerCase()) {   \r\n            case roleManagerCommand.data.name:\r\n                return await roleManagerCommand.execute(interaction);\r\n            default:\r\n                return new JsonResponse({ error: 'Unknown Type' }, { status: 400 });\r\n        }\r\n    } else if (interaction.type == InteractionType.APPLICATION_COMMAND_AUTOCOMPLETE) {\r\n        switch (interaction.data.name.toLowerCase()) {   \r\n            case roleManagerCommand.data.name:\r\n                return await roleManagerCommand.autocomplete(interaction);\r\n            default:\r\n                return new JsonResponse({ error: 'Unknown Type' }, { status: 400 });\r\n        }\r\n    } else if (interaction.type === InteractionType.MESSAGE_COMPONENT) {\r\n        switch (interaction.data.custom_id.toLowerCase()) {   \r\n            case \"confirm\":\r\n                const response = await interaction.client.setRoleOnUser(interaction.guild_id, interaction.member.user.id, '1430569586914230402');\r\n                \r\n                const content = response.ok \r\n                    ? \"\u2705 Thanks for confirming and welcome to the server!\" \r\n                    : \"\u274C Something went wrong when trying to give you permissions to the server. Try again or contact a mod.\";\r\n            \r\n                return new JsonResponse({\r\n                    type: InteractionResponseType.CHANNEL_MESSAGE_WITH_SOURCE,\r\n                    data: {\r\n                        content: content, \r\n                        allowed_mentions: { parse: [] },\r\n                        flags: InteractionResponseFlags.EPHEMERAL\r\n                    }\r\n                });\r\n            default:\r\n                return new JsonResponse({ error: 'Unknown Type' }, { status: 400 });\r\n        }\r\n    }\r\n\r\n    console.error('Unknown Type');\r\n    return new JsonResponse({ error: 'Unknown Type' }, { status: 400 });\r\n});\r\n\r\nrouter.all('*', () => new Response('Not Found.', { status: 404 }));\r\n\r\nasync function verifyDiscordRequest(request, env) {\r\n    const signature = request.headers.get('x-signature-ed25519');\r\n    const timestamp = request.headers.get('x-signature-timestamp');\r\n    const body = await request.text();\r\n    const isValidRequest =\r\n    signature &&\r\n    timestamp &&\r\n    (await verifyKey(body, signature, timestamp, env.DISCORD_PUBLIC_KEY));\r\n    if (!isValidRequest) {\r\n        return { isValid: false };\r\n    }\r\n\r\n    let interaction = JSON.parse(body);\r\n    \r\n    interaction.reply = function(data) {\r\n        return new JsonResponse({\r\n            type: InteractionResponseType.CHANNEL_MESSAGE_WITH_SOURCE,\r\n            data: data,\r\n        });\r\n    }\r\n\r\n    interaction.respond = function(choices) {\r\n        return new JsonResponse({\r\n            type: InteractionResponseType.APPLICATION_COMMAND_AUTOCOMPLETE_RESULT,\r\n            data: { choices: choices },\r\n        });\r\n    }\r\n\r\n    interaction.client = new DiscordClient(env.DISCORD_TOKEN);\r\n\r\n    return { interaction: interaction, isValid: true };\r\n}\r\n\r\nconst server = {\r\n  verifyDiscordRequest,\r\n  fetch: router.fetch\r\n};\r\n\r\nexport default server;", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "export class DiscordClient {\r\n    constructor(token) {\r\n        this.token = token;\r\n    }\r\n\r\n    async #makeRequest(url, method)\r\n    {\r\n        const response = await fetch(url, {\r\n            method: method,\r\n            headers: {\r\n                'Authorization': `Bot ${this.token}`,\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n\r\n        return response;\r\n    }\r\n\r\n    async setRoleOnUser(guildId, userId, roleId)\r\n    {\r\n        const url = `https://discord.com/api/v10/guilds/${guildId}/members/${userId}/roles/${roleId}`;\r\n        return await this.#makeRequest(url, 'PUT');\r\n    }\r\n}\r\n\r\nexport default DiscordClient;", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n"],
  "mappings": "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",
  "names": ["crypto", "MessageComponentTypes", "ButtonStyleTypes", "ChannelTypes", "TextStyleTypes", "InteractionType", "InteractionResponseType", "InteractionResponseFlags", "verifyKey", "Symbol", "Symbol", "Symbol", "Map", "Map", "Symbol", "a", "Set", "Set", "__defProp", "__name", "t", "n", "r", "o", "e", "u", "c", "s", "f", "a", "h", "p", "t2", "o2", "n2", "r2", "i", "u2", "c2", "l", "f2", "d", "s2", "p2", "g", "h2", "T", "a2", "m", "isNull", "inspect", "_Result", "uniqueArray", "_CombinedPropertyError", "_UnionValidator", "_ObjectValidator", "x", "__export", "__toCommonJS", "codeBlock", "inlineCode", "bold", "italic", "underline", "strikethrough", "spoiler", "heading", "__name", "HeadingLevel", "element", "Faces", "GuildNavigationMentions", "GatewayOpcodes", "GatewayCloseCodes", "GatewayIntentBits", "GatewayDispatchEvents", "VoiceChannelEffectSendAnimationType", "ApplicationFlags", "ApplicationRoleConnectionMetadataType", "ApplicationWebhookEventStatus", "AuditLogEvent", "AuditLogOptionsType", "AutoModerationRuleTriggerType", "AutoModerationRuleKeywordPresetType", "AutoModerationRuleEventType", "AutoModerationActionType", "SortOrderType", "ForumLayoutType", "ChannelType", "VideoQualityMode", "MessageType", "MessageActivityType", "MessageReferenceType", "MessageFlags", "OverwriteType", "ThreadAutoArchiveDuration", "ThreadMemberFlags", "EmbedType", "AttachmentFlags", "AllowedMentionsTypes", "ComponentType", "ButtonStyle", "TextInputStyle", "SelectMenuDefaultValueType", "ChannelFlags", "PresenceUpdateStatus", "ActivityPlatform", "ActivityType", "ActivityFlags", "GuildDefaultMessageNotifications", "GuildExplicitContentFilter", "GuildMFALevel", "GuildNSFWLevel", "GuildVerificationLevel", "GuildPremiumTier", "GuildHubType", "GuildSystemChannelFlags", "GuildFeature", "GuildMemberFlags", "IntegrationExpireBehavior", "GuildWidgetStyle", "MembershipScreeningFieldType", "GuildOnboardingMode", "GuildOnboardingPromptType", "GuildScheduledEventRecurrenceRuleFrequency", "GuildScheduledEventRecurrenceRuleWeekday", "GuildScheduledEventRecurrenceRuleMonth", "GuildScheduledEventEntityType", "GuildScheduledEventStatus", "GuildScheduledEventPrivacyLevel", "require_channel", "ApplicationCommandOptionType", "ApplicationCommandPermissionType", "ApplicationCommandType", "ApplicationIntegrationType", "InteractionContextType", "EntryPointCommandHandlerType", "require_base", "InteractionType", "InteractionResponseType", "InviteType", "InviteTargetType", "EntitlementType", "SKUFlags", "SKUType", "SubscriptionStatus", "OAuth2Scopes", "RoleFlags", "PollLayoutType", "StageInstancePrivacyLevel", "StickerType", "StickerFormatType", "TeamMemberMembershipState", "TeamMemberRole", "UserFlags", "UserPremiumType", "ConnectionService", "ConnectionVisibility", "ApplicationWebhookType", "ApplicationWebhookEventType", "WebhookType", "RESTJSONErrorCodes", "Locale", "require_application", "require_auditLog", "require_autoModeration", "ReactionType", "require_emoji", "require_gateway", "require_guild", "require_guildScheduledEvent", "require_interactions", "require_invite", "EntitlementOwnerType", "require_oauth2", "require_poll", "require_soundboard", "require_stageInstance", "require_sticker", "require_template", "require_user", "require_voice", "require_webhook", "ImageFormat", "RPCErrorCodes", "RPCCloseEventCodes", "__export", "__toCommonJS", "__name", "range", "a", "protoChain", "item", "c", "decorators", "__export", "Assertions_exports", "__toCommonJS", "__name", "import_shapeshift", "import_v10", "__toESM", "placeholderValidator", "isEqual", "validateRequiredParameters", "descriptionPredicate", "import_ts_mixer", "booleanPredicate", "numberValidator", "minLengthValidator", "maxLengthValidator", "contextsPredicate", "integrationTypesPredicate", "validateDMPermission", "validateDefaultMemberPermissions", "validateDefaultPermission", "validateName", "namePredicate", "dmPermissionPredicate", "memberPermissionPredicate", "Router", "base", "routes", "other", "__proto__", "Proxy", "get", "target", "prop", "receiver", "path", "route", "handlers", "push", "toUpperCase", "RegExp", "replace", "async", "request", "args", "response", "match", "url", "URL", "query", "k", "v", "searchParams", "concat", "t", "handler", "before", "proxy", "outer", "method", "regex", "pathname", "params", "groups", "err", "catch", "finally", "createResponse", "format", "transform", "body", "options", "Response", "headers", "set", "json", "JSON", "stringify", "getMessage", "code", "error", "a", "b", "Error", "message", "status", "withParams", "obj", "bind", "AutoRouter", "missing", "f", "r", "text", "createResponse", "String", "html", "jpeg", "png", "webp"]
}
